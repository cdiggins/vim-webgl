{"version":3,"file":"vim-webgl-viewer.es.js","sources":["../node_modules/deepmerge/dist/cjs.js","../src/vim-webgl-viewer/viewerSettings.ts","../src/vim-webgl-viewer/camera.ts","../src/vim-webgl-viewer/keyboard.ts","../src/vim-webgl-viewer/touch.ts","../src/vim-webgl-viewer/mouse.ts","../src/vim-webgl-viewer/input.ts","../src/vim-webgl-viewer/selection.ts","../src/vim-webgl-viewer/environment.ts","../src/vim-webgl-viewer/renderer.ts","../src/vim-webgl-viewer/raycaster.ts","../src/vim-webgl-viewer/gizmos.ts","../src/vim-loader/geometry.ts","../src/vim-loader/materials.ts","../src/vim-loader/mesh.ts","../src/vim-loader/scene.ts","../src/vim-webgl-viewer/renderScene.ts","../src/vim-webgl-viewer/viewport.ts","../node_modules/lodash-es/_freeGlobal.js","../node_modules/lodash-es/_root.js","../node_modules/lodash-es/_Symbol.js","../node_modules/lodash-es/_getRawTag.js","../node_modules/lodash-es/_objectToString.js","../node_modules/lodash-es/_baseGetTag.js","../node_modules/lodash-es/isObjectLike.js","../node_modules/lodash-es/isArray.js","../node_modules/lodash-es/isObject.js","../node_modules/lodash-es/isFunction.js","../node_modules/lodash-es/_coreJsData.js","../node_modules/lodash-es/_isMasked.js","../node_modules/lodash-es/_toSource.js","../node_modules/lodash-es/_baseIsNative.js","../node_modules/lodash-es/_getValue.js","../node_modules/lodash-es/_getNative.js","../node_modules/lodash-es/_WeakMap.js","../node_modules/lodash-es/_baseCreate.js","../node_modules/lodash-es/_copyArray.js","../node_modules/lodash-es/_defineProperty.js","../node_modules/lodash-es/_arrayEach.js","../node_modules/lodash-es/_isIndex.js","../node_modules/lodash-es/_baseAssignValue.js","../node_modules/lodash-es/eq.js","../node_modules/lodash-es/_assignValue.js","../node_modules/lodash-es/_copyObject.js","../node_modules/lodash-es/isLength.js","../node_modules/lodash-es/isArrayLike.js","../node_modules/lodash-es/_isPrototype.js","../node_modules/lodash-es/_baseTimes.js","../node_modules/lodash-es/_baseIsArguments.js","../node_modules/lodash-es/isArguments.js","../node_modules/lodash-es/stubFalse.js","../node_modules/lodash-es/isBuffer.js","../node_modules/lodash-es/_baseIsTypedArray.js","../node_modules/lodash-es/_baseUnary.js","../node_modules/lodash-es/_nodeUtil.js","../node_modules/lodash-es/isTypedArray.js","../node_modules/lodash-es/_arrayLikeKeys.js","../node_modules/lodash-es/_overArg.js","../node_modules/lodash-es/_nativeKeys.js","../node_modules/lodash-es/_baseKeys.js","../node_modules/lodash-es/keys.js","../node_modules/lodash-es/_nativeKeysIn.js","../node_modules/lodash-es/_baseKeysIn.js","../node_modules/lodash-es/keysIn.js","../node_modules/lodash-es/_nativeCreate.js","../node_modules/lodash-es/_hashClear.js","../node_modules/lodash-es/_hashDelete.js","../node_modules/lodash-es/_hashGet.js","../node_modules/lodash-es/_hashHas.js","../node_modules/lodash-es/_hashSet.js","../node_modules/lodash-es/_Hash.js","../node_modules/lodash-es/_listCacheClear.js","../node_modules/lodash-es/_assocIndexOf.js","../node_modules/lodash-es/_listCacheDelete.js","../node_modules/lodash-es/_listCacheGet.js","../node_modules/lodash-es/_listCacheHas.js","../node_modules/lodash-es/_listCacheSet.js","../node_modules/lodash-es/_ListCache.js","../node_modules/lodash-es/_Map.js","../node_modules/lodash-es/_mapCacheClear.js","../node_modules/lodash-es/_isKeyable.js","../node_modules/lodash-es/_getMapData.js","../node_modules/lodash-es/_mapCacheDelete.js","../node_modules/lodash-es/_mapCacheGet.js","../node_modules/lodash-es/_mapCacheHas.js","../node_modules/lodash-es/_mapCacheSet.js","../node_modules/lodash-es/_MapCache.js","../node_modules/lodash-es/_arrayPush.js","../node_modules/lodash-es/_getPrototype.js","../node_modules/lodash-es/_stackClear.js","../node_modules/lodash-es/_stackDelete.js","../node_modules/lodash-es/_stackGet.js","../node_modules/lodash-es/_stackHas.js","../node_modules/lodash-es/_stackSet.js","../node_modules/lodash-es/_Stack.js","../node_modules/lodash-es/_baseAssign.js","../node_modules/lodash-es/_baseAssignIn.js","../node_modules/lodash-es/_cloneBuffer.js","../node_modules/lodash-es/_arrayFilter.js","../node_modules/lodash-es/stubArray.js","../node_modules/lodash-es/_getSymbols.js","../node_modules/lodash-es/_copySymbols.js","../node_modules/lodash-es/_getSymbolsIn.js","../node_modules/lodash-es/_copySymbolsIn.js","../node_modules/lodash-es/_baseGetAllKeys.js","../node_modules/lodash-es/_getAllKeys.js","../node_modules/lodash-es/_getAllKeysIn.js","../node_modules/lodash-es/_DataView.js","../node_modules/lodash-es/_Promise.js","../node_modules/lodash-es/_Set.js","../node_modules/lodash-es/_getTag.js","../node_modules/lodash-es/_initCloneArray.js","../node_modules/lodash-es/_Uint8Array.js","../node_modules/lodash-es/_cloneArrayBuffer.js","../node_modules/lodash-es/_cloneDataView.js","../node_modules/lodash-es/_cloneRegExp.js","../node_modules/lodash-es/_cloneSymbol.js","../node_modules/lodash-es/_cloneTypedArray.js","../node_modules/lodash-es/_initCloneByTag.js","../node_modules/lodash-es/_initCloneObject.js","../node_modules/lodash-es/_baseIsMap.js","../node_modules/lodash-es/isMap.js","../node_modules/lodash-es/_baseIsSet.js","../node_modules/lodash-es/isSet.js","../node_modules/lodash-es/_baseClone.js","../node_modules/lodash-es/cloneDeep.js","../src/vim-loader/vimSettings.ts","../src/vim-loader/g3d.ts","../src/vim-loader/document.ts","../src/vim-loader/object.ts","../src/vim-loader/vim.ts","../src/vim-loader/loader.ts","../src/vim-loader/bfast.ts","../src/vim-webgl-viewer/viewer.ts"],"sourcesContent":["'use strict';\n\nvar isMergeableObject = function isMergeableObject(value) {\n\treturn isNonNullObject(value)\n\t\t&& !isSpecial(value)\n};\n\nfunction isNonNullObject(value) {\n\treturn !!value && typeof value === 'object'\n}\n\nfunction isSpecial(value) {\n\tvar stringValue = Object.prototype.toString.call(value);\n\n\treturn stringValue === '[object RegExp]'\n\t\t|| stringValue === '[object Date]'\n\t\t|| isReactElement(value)\n}\n\n// see https://github.com/facebook/react/blob/b5ac963fb791d1298e7f396236383bc955f916c1/src/isomorphic/classic/element/ReactElement.js#L21-L25\nvar canUseSymbol = typeof Symbol === 'function' && Symbol.for;\nvar REACT_ELEMENT_TYPE = canUseSymbol ? Symbol.for('react.element') : 0xeac7;\n\nfunction isReactElement(value) {\n\treturn value.$$typeof === REACT_ELEMENT_TYPE\n}\n\nfunction emptyTarget(val) {\n\treturn Array.isArray(val) ? [] : {}\n}\n\nfunction cloneUnlessOtherwiseSpecified(value, options) {\n\treturn (options.clone !== false && options.isMergeableObject(value))\n\t\t? deepmerge(emptyTarget(value), value, options)\n\t\t: value\n}\n\nfunction defaultArrayMerge(target, source, options) {\n\treturn target.concat(source).map(function(element) {\n\t\treturn cloneUnlessOtherwiseSpecified(element, options)\n\t})\n}\n\nfunction getMergeFunction(key, options) {\n\tif (!options.customMerge) {\n\t\treturn deepmerge\n\t}\n\tvar customMerge = options.customMerge(key);\n\treturn typeof customMerge === 'function' ? customMerge : deepmerge\n}\n\nfunction getEnumerableOwnPropertySymbols(target) {\n\treturn Object.getOwnPropertySymbols\n\t\t? Object.getOwnPropertySymbols(target).filter(function(symbol) {\n\t\t\treturn target.propertyIsEnumerable(symbol)\n\t\t})\n\t\t: []\n}\n\nfunction getKeys(target) {\n\treturn Object.keys(target).concat(getEnumerableOwnPropertySymbols(target))\n}\n\nfunction propertyIsOnObject(object, property) {\n\ttry {\n\t\treturn property in object\n\t} catch(_) {\n\t\treturn false\n\t}\n}\n\n// Protects from prototype poisoning and unexpected merging up the prototype chain.\nfunction propertyIsUnsafe(target, key) {\n\treturn propertyIsOnObject(target, key) // Properties are safe to merge if they don't exist in the target yet,\n\t\t&& !(Object.hasOwnProperty.call(target, key) // unsafe if they exist up the prototype chain,\n\t\t\t&& Object.propertyIsEnumerable.call(target, key)) // and also unsafe if they're nonenumerable.\n}\n\nfunction mergeObject(target, source, options) {\n\tvar destination = {};\n\tif (options.isMergeableObject(target)) {\n\t\tgetKeys(target).forEach(function(key) {\n\t\t\tdestination[key] = cloneUnlessOtherwiseSpecified(target[key], options);\n\t\t});\n\t}\n\tgetKeys(source).forEach(function(key) {\n\t\tif (propertyIsUnsafe(target, key)) {\n\t\t\treturn\n\t\t}\n\n\t\tif (propertyIsOnObject(target, key) && options.isMergeableObject(source[key])) {\n\t\t\tdestination[key] = getMergeFunction(key, options)(target[key], source[key], options);\n\t\t} else {\n\t\t\tdestination[key] = cloneUnlessOtherwiseSpecified(source[key], options);\n\t\t}\n\t});\n\treturn destination\n}\n\nfunction deepmerge(target, source, options) {\n\toptions = options || {};\n\toptions.arrayMerge = options.arrayMerge || defaultArrayMerge;\n\toptions.isMergeableObject = options.isMergeableObject || isMergeableObject;\n\t// cloneUnlessOtherwiseSpecified is added to `options` so that custom arrayMerge()\n\t// implementations can use it. The caller may not replace it.\n\toptions.cloneUnlessOtherwiseSpecified = cloneUnlessOtherwiseSpecified;\n\n\tvar sourceIsArray = Array.isArray(source);\n\tvar targetIsArray = Array.isArray(target);\n\tvar sourceAndTargetTypesMatch = sourceIsArray === targetIsArray;\n\n\tif (!sourceAndTargetTypesMatch) {\n\t\treturn cloneUnlessOtherwiseSpecified(source, options)\n\t} else if (sourceIsArray) {\n\t\treturn options.arrayMerge(target, source, options)\n\t} else {\n\t\treturn mergeObject(target, source, options)\n\t}\n}\n\ndeepmerge.all = function deepmergeAll(array, options) {\n\tif (!Array.isArray(array)) {\n\t\tthrow new Error('first argument should be an array')\n\t}\n\n\treturn array.reduce(function(prev, next) {\n\t\treturn deepmerge(prev, next, options)\n\t}, {})\n};\n\nvar deepmerge_1 = deepmerge;\n\nmodule.exports = deepmerge_1;\n","/**\r\n @module viw-webgl-viewer\r\n*/\r\n\r\nimport * as THREE from 'three'\r\nimport deepmerge from 'deepmerge'\r\nimport { VimOptions } from '../vim-loader/vimSettings'\r\n\r\nexport namespace ViewerOptions {\r\n  export type ColorRGB = {\r\n    r: number\r\n    g: number\r\n    b: number\r\n  }\r\n\r\n  export type ColorHSL = {\r\n    h: number\r\n    s: number\r\n    l: number\r\n  }\r\n\r\n  /**\r\n   * Plane under Scene related options\r\n   */\r\n  export type GroundPlane = {\r\n    /** Enables/Disables plane under scene */\r\n    show: boolean\r\n    /** Local or remote texture url for plane */\r\n    texture: string\r\n    /** Opacity of the plane */\r\n    opacity: number\r\n    /** Color of the plane */\r\n    color: ColorRGB\r\n    /** Actual size is SceneRadius*size */\r\n    size: number\r\n  }\r\n\r\n  /** Dom canvas related options */\r\n  export type Canvas = {\r\n    /** Canvas dom model id. If none provided a new canvas will be created */\r\n    id: string\r\n    /** Limits how often canvas will be resized if window is resized. */\r\n    resizeDelay: number\r\n  }\r\n\r\n  /** Camera controls related options */\r\n  export type CameraControls = {\r\n    /**\r\n     * <p>Set true to start in orbit mode.</p>\r\n     * <p>Camera has two modes: First person and orbit</p>\r\n     * <p>First person allows to moves the camera around freely</p>\r\n     * <p>Orbit rotates the camera around a focus point</p>\r\n     */\r\n    orbit: boolean\r\n    /** Camera speed is scaled according to SceneRadius/sceneReferenceSize */\r\n    vimReferenceSize: number\r\n    /** Camera rotation speed factor */\r\n    rotateSpeed: number\r\n    orbitSpeed: number\r\n    /** Camera movement speed factor */\r\n    moveSpeed: number\r\n  }\r\n\r\n  /** Camera Gizmo related options */\r\n  export type CameraGizmo = {\r\n    enable: boolean\r\n    size: number\r\n    color: ColorRGB\r\n    opacity: number\r\n    opacityAlways: number\r\n  }\r\n\r\n  /** Camera related options */\r\n  export type Camera = {\r\n    /** Near clipping plane distance */\r\n    near: number\r\n    /** Far clipping plane distance */\r\n    far: number\r\n    /** Fov angle in degrees */\r\n    fov: number\r\n    /** Zoom level */\r\n    zoom: number\r\n    /** See ControlOptions */\r\n    controls: Partial<CameraControls>\r\n    /** See CameraGizmo */\r\n    gizmo: Partial<CameraGizmo>\r\n  }\r\n\r\n  export type SunLight = {\r\n    position: VimOptions.Vector3\r\n    color: ColorHSL\r\n    intensity: number\r\n  }\r\n\r\n  export type SkyLight = {\r\n    skyColor: ColorHSL\r\n    groundColor: ColorHSL\r\n    intensity: number\r\n  }\r\n\r\n  export type Highlight = {\r\n    color: ColorRGB\r\n    opacity: number\r\n  }\r\n\r\n  /** Viewer related options independant from vims */\r\n  export type Root = {\r\n    /**\r\n     * Webgl canvas related options\r\n     */\r\n    canvas: Partial<Canvas>\r\n    /**\r\n     * Three.js camera related options\r\n     */\r\n    camera: Partial<Camera>\r\n    // background: Partial<BackgroundOptions>\r\n    /**\r\n     * Plane under scene related options\r\n     */\r\n    groundPlane: Partial<GroundPlane>\r\n    /**\r\n     * Skylight (hemisphere light) options\r\n     */\r\n    skylight: Partial<SkyLight>\r\n    /**\r\n     * Sunlight (directional light) options\r\n     */\r\n    sunLight: Partial<SunLight>\r\n\r\n    /**\r\n     * Object highlight on click options\r\n     */\r\n    highlight: Partial<Highlight>\r\n  }\r\n}\r\n\r\n/**\r\n * <p>Wrapper around Viewer Options</p>\r\n * <p>Casts options values into related THREE.js type</p>\r\n * <p>Provides default values for options</p>\r\n */\r\nexport class ViewerSettings {\r\n  public options: ViewerOptions.Root\r\n\r\n  constructor (options?: Partial<ViewerOptions.Root>) {\r\n    const fallback: ViewerOptions.Root = {\r\n      canvas: {\r\n        id: undefined,\r\n        resizeDelay: 200\r\n      },\r\n      camera: {\r\n        near: 0.01,\r\n        far: 15000,\r\n        fov: 50,\r\n        zoom: 1,\r\n        controls: {\r\n          orbit: true,\r\n          vimReferenceSize: 1,\r\n          rotateSpeed: 1,\r\n          orbitSpeed: 1,\r\n          moveSpeed: 1\r\n        },\r\n        gizmo: {\r\n          enable: true,\r\n          size: 0.005,\r\n          color: { r: 0xff, g: 0xff, b: 0xff },\r\n          opacity: 0.5,\r\n          opacityAlways: 0.125\r\n        }\r\n      },\r\n      groundPlane: {\r\n        show: false,\r\n        texture: undefined,\r\n        opacity: 1,\r\n        color: { r: 0xff, g: 0xff, b: 0xff },\r\n        size: 3\r\n      },\r\n      skylight: {\r\n        // skyColor: { h: 1, s: 1, l: 1 },\r\n        skyColor: { h: 0.6, s: 1, l: 0.6 },\r\n        groundColor: { h: 0.095, s: 1, l: 0.75 },\r\n        // groundColor: { h: 1, s: 1, l: 1 },\r\n        intensity: 0.6\r\n        // intensity: 1\r\n      },\r\n      sunLight: {\r\n        position: { x: -47.0, y: 22, z: -45 },\r\n        // position: { x: 0, y: 0, z: -1000 },\r\n        color: { h: 0.1, s: 1, l: 0.95 },\r\n        // color: { h: 1, s: 1, l: 1 },\r\n        intensity: 1\r\n      },\r\n      highlight: {\r\n        color: { r: 0x6a, g: 0xd2, b: 0xff },\r\n        opacity: 0.5\r\n      }\r\n    }\r\n\r\n    this.options = options ? deepmerge(fallback, options, undefined) : fallback\r\n  }\r\n\r\n  // Canvas\r\n  getCanvasResizeDelay = () => this.options.canvas.resizeDelay\r\n  getCanvasId = () => this.options.canvas.id\r\n\r\n  // Plane\r\n  getGroundPlaneShow = () => this.options.groundPlane.show\r\n  getGroundPlaneColor = () => toRGBColor(this.options.groundPlane.color!)\r\n  getGroundPlaneTextureUrl = () => this.options.groundPlane.texture\r\n  getGroundPlaneOpacity = () => this.options.groundPlane.opacity\r\n  getGroundPlaneSize = () => this.options.groundPlane.size\r\n\r\n  // Skylight\r\n  getSkylightColor = () => toHSLColor(this.options.skylight.skyColor!)\r\n  getSkylightGroundColor = () => toHSLColor(this.options.skylight.groundColor!)\r\n\r\n  getSkylightIntensity = () => this.options.skylight.intensity\r\n\r\n  // Sunlight\r\n  getSunlightColor = () => toHSLColor(this.options.sunLight.color!)\r\n  getSunlightPosition = () => toVec(this.options.sunLight.position!)\r\n  getSunlightIntensity = () => this.options.sunLight.intensity\r\n\r\n  getHighlightColor = () => toRGBColor(this.options.highlight.color)\r\n  getHighlightOpacity = () => this.options.highlight.opacity\r\n\r\n  // Camera\r\n  private get camera () {\r\n    return this.options.camera\r\n  }\r\n\r\n  getCameraNear = () => this.camera.near\r\n  getCameraFar = () => this.camera.far\r\n  getCameraFov = () => this.camera.fov\r\n  getCameraZoom = () => this.camera.zoom\r\n  getCameraGizmoEnable = () => this.camera.gizmo.enable\r\n  getCameraGizmoSize = () => this.camera.gizmo.size\r\n  getCameraGizmoColor = () => toRGBColor(this.camera.gizmo.color)\r\n  getCameraGizmoOpacity = () => this.camera.gizmo.opacity\r\n  getCameraGizmoOpacityAlways = () => this.camera.gizmo.opacityAlways\r\n\r\n  // Camera Controls\r\n  private get cameraControls () {\r\n    return this.camera.controls!\r\n  }\r\n\r\n  getCameraIsOrbit = () => this.cameraControls.orbit\r\n  getCameraMoveSpeed = () => this.cameraControls.moveSpeed\r\n  getCameraRotateSpeed = () => this.cameraControls.rotateSpeed\r\n  getCameraOrbitSpeed = () => this.cameraControls.orbitSpeed\r\n  getCameraReferenceVimSize = () => this.cameraControls.vimReferenceSize\r\n}\r\n\r\nfunction toRGBColor (c: ViewerOptions.ColorRGB): THREE.Color {\r\n  return new THREE.Color(c.r / 255, c.g / 255, c.b / 255)\r\n}\r\n\r\nfunction toHSLColor (obj: ViewerOptions.ColorHSL): THREE.Color {\r\n  return new THREE.Color().setHSL(obj.h, obj.s, obj.l)\r\n}\r\n\r\nfunction toVec (obj: VimOptions.Vector3): THREE.Vector3 {\r\n  return new THREE.Vector3(obj.x, obj.y, obj.z)\r\n}\r\n","/**\r\n @module viw-webgl-viewer\r\n*/\r\n\r\nimport * as THREE from 'three'\r\nimport { CameraGizmo } from './gizmos'\r\nimport { Viewport } from './viewport'\r\nimport { ViewerSettings } from './viewerSettings'\r\nimport { Object } from '../vim'\r\nimport { RenderScene } from './renderScene'\r\n\r\nexport const DIRECTIONS = {\r\n  forward: new THREE.Vector3(0, 0, -1),\r\n  back: new THREE.Vector3(0, 0, 1),\r\n  left: new THREE.Vector3(-1, 0, 0),\r\n  right: new THREE.Vector3(1, 0, 0),\r\n  up: new THREE.Vector3(0, 1, 0),\r\n  down: new THREE.Vector3(0, -1, 0)\r\n}\r\n\r\nexport interface ICamera {\r\n  /**\r\n   * Wrapped Three.js camera\r\n   */\r\n  camera: THREE.Camera\r\n  /**\r\n   * Multiplier for camera movements.\r\n   */\r\n  speed: number\r\n\r\n  /**\r\n   * True: Camera orbit around target mode.\r\n   * False: First person free camera mode.\r\n   */\r\n  orbitMode: boolean\r\n\r\n  /**\r\n   * True: Orthographic camera.\r\n   * False: Perspective camera.\r\n   */\r\n  orthographic: boolean\r\n\r\n  /**\r\n   * Current local velocity\r\n   */\r\n  localVelocity: THREE.Vector3\r\n  /**\r\n   * Rotates the camera around the X or Y axis or both\r\n   * @param vector where coordinates are in relative screen size. ie [-1, 1]\r\n   */\r\n\r\n  /**\r\n   * Nudges the camera in given direction for a short distance.\r\n   * @param impulse impulse vector in camera local space.\r\n   */\r\n  addImpulse(impulse: THREE.Vector3): void\r\n\r\n  /**\r\n   * Moves the camera closer or farther away from orbit target.\r\n   * @param amount movement size.\r\n   */\r\n  zoom(amount: number): void\r\n\r\n  /**\r\n   * Moves the camera along all three axes.\r\n   */\r\n  move3(vector: THREE.Vector3): void\r\n\r\n  /**\r\n   * Moves the camera along two axes.\r\n   */\r\n  move2(vector: THREE.Vector2, axes: 'XY' | 'XZ'): void\r\n\r\n  /**\r\n   * Moves the camera along one axis.\r\n   */\r\n  move1(amount: number, axis: 'X' | 'Y' | 'Z'): void\r\n\r\n  /**\r\n   * Rotates the camera around the X or Y axis or both\r\n   * @param vector where coordinates in range [-1, 1] for rotations of [-180, 180] degrees\r\n   */\r\n  rotate(vector: THREE.Vector2): void\r\n\r\n  /**\r\n   * Sets orbit mode target and moves camera accordingly\r\n   */\r\n  target(target: Object | THREE.Vector3): void\r\n\r\n  /**\r\n   * Rotates the camera to look at target\r\n   */\r\n  lookAt(target: Object | THREE.Vector3)\r\n\r\n  /**\r\n   * Moves and rotates the camera so that target is well framed.\r\n   * if center is true -> camera.y = target.y\r\n   */\r\n  frame(target: Object | THREE.Sphere | 'all', center?: boolean): void\r\n}\r\n\r\n/**\r\n * Manages viewer camera movement and position\r\n */\r\nexport class Camera implements ICamera {\r\n  camera: THREE.PerspectiveCamera | THREE.OrthographicCamera\r\n  gizmo: CameraGizmo\r\n  private _viewport: Viewport\r\n  private _scene: RenderScene\r\n\r\n  private _inputVelocity: THREE.Vector3\r\n  private _velocity: THREE.Vector3\r\n  private _impulse: THREE.Vector3\r\n  speed: number\r\n\r\n  private _orbitalTarget: THREE.Vector3\r\n  private _minOrbitalDistance: number = 0.05\r\n  private _currentOrbitalDistance: number\r\n  private _orbitalTargetDistance: number\r\n\r\n  private _lerpSecondsDuration: number\r\n  private _lerpMsEndtime: number\r\n\r\n  private _orbitMode: boolean = false\r\n\r\n  // Settings\r\n  private _vimReferenceSize: number\r\n  private _sceneSizeMultiplier: number = 1\r\n  private _velocityBlendFactor: number = 0.0001\r\n  private _moveSpeed: number = 0.8\r\n  private _rotateSpeed: number = 1\r\n  private _orbitSpeed: number = 1\r\n  private _zoomSpeed: number = 0.2\r\n\r\n  constructor (\r\n    scene: RenderScene,\r\n    viewport: Viewport,\r\n    settings: ViewerSettings\r\n  ) {\r\n    this.camera = new THREE.PerspectiveCamera()\r\n    this.camera.position.set(0, 0, -1000)\r\n    this.camera.lookAt(0, 0, 0)\r\n    this._scene = scene\r\n    this._viewport = viewport\r\n    this._viewport.onResize(() => {\r\n      this.updateProjection(this._scene.getBoundingSphere())\r\n    })\r\n    this.applySettings(settings)\r\n\r\n    this._inputVelocity = new THREE.Vector3(0, 0, 0)\r\n    this._velocity = new THREE.Vector3(0, 0, 0)\r\n    this._impulse = new THREE.Vector3(0, 0, 0)\r\n    this.speed = 0\r\n    this._sceneSizeMultiplier = 1\r\n    this._orbitalTarget = new THREE.Vector3(0, 0, 0)\r\n    this._currentOrbitalDistance = this.camera.position\r\n      .clone()\r\n      .sub(this._orbitalTarget)\r\n      .length()\r\n    this._orbitalTargetDistance = this._currentOrbitalDistance\r\n  }\r\n\r\n  dispose () {\r\n    this.gizmo?.dispose()\r\n    this.gizmo = undefined\r\n  }\r\n\r\n  /**\r\n   * Resets camera to default state.\r\n   */\r\n  reset () {\r\n    this.camera.position.set(0, 0, -5)\r\n    this.camera.lookAt(0, 0, 1)\r\n\r\n    this._inputVelocity.set(0, 0, 0)\r\n    this._velocity.set(0, 0, 0)\r\n    this._impulse.set(0, 0, 0)\r\n\r\n    this._currentOrbitalDistance = 5\r\n    this._orbitalTarget.set(0, 0, 0)\r\n    this._orbitalTargetDistance = this._currentOrbitalDistance\r\n  }\r\n\r\n  get localVelocity () {\r\n    const result = this._velocity.clone()\r\n    result.applyQuaternion(this.camera.quaternion.clone().invert())\r\n    result.setZ(-result.z)\r\n    result.multiplyScalar((1 / this.getSpeedMultiplier()) * this._moveSpeed)\r\n    return result\r\n  }\r\n\r\n  /**\r\n   * Set current velocity of the camera.\r\n   */\r\n  set localVelocity (vector: THREE.Vector3) {\r\n    const move = vector.clone()\r\n    move.setZ(-move.z)\r\n    move.applyQuaternion(this.camera.quaternion)\r\n    move.multiplyScalar(this.getSpeedMultiplier() * this._moveSpeed)\r\n\r\n    this._inputVelocity.copy(move)\r\n  }\r\n\r\n  /**\r\n   * True: Camera orbit around target mode.\r\n   * False: First person free camera mode.\r\n   */\r\n  public get orbitMode () {\r\n    return this._orbitMode\r\n  }\r\n\r\n  /**\r\n   * True: Camera orbit around target mode.\r\n   * False: First person free camera mode.\r\n   */\r\n  public set orbitMode (value: boolean) {\r\n    this._orbitMode = value\r\n    this.gizmo?.show(value)\r\n  }\r\n\r\n  /**\r\n   * Sets Orbit mode target and moves camera accordingly\r\n   */\r\n  target (target: Object | THREE.Vector3) {\r\n    const position =\r\n      target instanceof THREE.Vector3 ? target : target.getCenter()\r\n    this._orbitalTarget = position\r\n    this.startLerp(0.4)\r\n    this.gizmo?.show(true)\r\n  }\r\n\r\n  frame (target: Object | THREE.Sphere | 'all', center: boolean = false) {\r\n    if (target === 'all') {\r\n      this.frameSphere(this._scene.getBoundingSphere(), center)\r\n    }\r\n    if (target instanceof Object) {\r\n      this.frameSphere(target.getBoundingSphere(), center)\r\n    }\r\n    if (target instanceof THREE.Sphere) {\r\n      this.frameSphere(target, center)\r\n    }\r\n    this.gizmo?.show(true)\r\n  }\r\n\r\n  /**\r\n   * Rotates the camera to look at target\r\n   */\r\n  lookAt (target: Object | THREE.Vector3) {\r\n    const position =\r\n      target instanceof THREE.Vector3 ? target : target.getCenter()\r\n    this.camera.lookAt(position)\r\n  }\r\n\r\n  applySettings (settings: ViewerSettings) {\r\n    // Mode\r\n    this.orbitMode = settings.getCameraIsOrbit()\r\n\r\n    // Camera\r\n    if (this.camera instanceof THREE.PerspectiveCamera) {\r\n      this.camera.fov = settings.getCameraFov()\r\n      this.camera.zoom = settings.getCameraZoom()\r\n      this.camera.near = settings.getCameraNear()\r\n      this.camera.far = settings.getCameraFar()\r\n      this.camera.updateProjectionMatrix()\r\n    }\r\n\r\n    // Controls\r\n    this._moveSpeed = settings.getCameraMoveSpeed()\r\n    this._rotateSpeed = settings.getCameraRotateSpeed()\r\n    this._orbitSpeed = settings.getCameraOrbitSpeed()\r\n\r\n    // Values\r\n    this._vimReferenceSize = settings.getCameraReferenceVimSize()\r\n  }\r\n\r\n  /**\r\n   * Adapts camera speed to be faster for large model and slower for small models.\r\n   */\r\n  adaptToContent () {\r\n    const sphere = this._scene.getBoundingSphere()\r\n    this._sceneSizeMultiplier = sphere\r\n      ? sphere.radius / this._vimReferenceSize\r\n      : 1\r\n  }\r\n\r\n  /**\r\n   * Moves the camera closer or farther away from orbit target.\r\n   * @param amount movement size.\r\n   */\r\n  zoom (amount: number) {\r\n    if (this.camera instanceof THREE.PerspectiveCamera) {\r\n      const multiplier =\r\n        this._zoomSpeed *\r\n        this.getBaseMultiplier() *\r\n        (this._orbitalTargetDistance / this._vimReferenceSize)\r\n\r\n      const next = this._orbitalTargetDistance + amount * multiplier\r\n      this._orbitalTargetDistance = Math.max(next, this._minOrbitalDistance)\r\n      this.gizmo?.show()\r\n    } else {\r\n      const multiplier = this._zoomSpeed * this.getBaseMultiplier()\r\n      const padX = (this.camera.right - this.camera.left) * amount * multiplier\r\n      const padY = (this.camera.top - this.camera.bottom) * amount * multiplier\r\n\r\n      this.camera.left -= padX\r\n      this.camera.right += padX\r\n      this.camera.bottom -= padY\r\n      this.camera.top += padY\r\n      this.camera.updateProjectionMatrix()\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Smoothly moves the camera in given direction for a short distance.\r\n   */\r\n  addImpulse (impulse: THREE.Vector3) {\r\n    const localImpulse = impulse\r\n      .clone()\r\n      .multiplyScalar(this.getSpeedMultiplier() * this._zoomSpeed)\r\n    localImpulse.applyQuaternion(this.camera.quaternion)\r\n    this._impulse.add(localImpulse)\r\n  }\r\n\r\n  /**\r\n   * Moves the camera along all three axes.\r\n   */\r\n  move3 (vector: THREE.Vector3) {\r\n    const v = vector.clone()\r\n    v.applyQuaternion(this.camera.quaternion)\r\n    v.multiplyScalar(this.getSpeedMultiplier() * this._moveSpeed)\r\n\r\n    this._orbitalTarget.add(v)\r\n    this.gizmo?.show()\r\n    if (!this.orbitMode) {\r\n      this.camera.position.add(v)\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Moves the camera along two axis\r\n   */\r\n  move2 (vector: THREE.Vector2, axes: 'XY' | 'XZ') {\r\n    const direction =\r\n      axes === 'XY'\r\n        ? new THREE.Vector3(-vector.x, vector.y, 0)\r\n        : axes === 'XZ'\r\n          ? new THREE.Vector3(-vector.x, 0, vector.y)\r\n          : undefined\r\n\r\n    this.move3(direction)\r\n  }\r\n\r\n  /**\r\n   * Moves the camera along one axis\r\n   */\r\n  move1 (amount: number, axis: 'X' | 'Y' | 'Z') {\r\n    const direction = new THREE.Vector3(\r\n      axis === 'X' ? -amount : 0,\r\n      axis === 'Y' ? amount : 0,\r\n      axis === 'Z' ? amount : 0\r\n    )\r\n\r\n    this._currentOrbitalDistance += direction.z\r\n\r\n    this.move3(direction)\r\n  }\r\n\r\n  /**\r\n   * Rotates the camera around the X or Y axis or both\r\n   * @param vector where coordinates in range [-1, 1] for rotations of [-180, 180] degrees\r\n   */\r\n  rotate (vector: THREE.Vector2) {\r\n    if (this.isLerping()) return\r\n    const euler = new THREE.Euler(0, 0, 0, 'YXZ')\r\n    euler.setFromQuaternion(this.camera.quaternion)\r\n\r\n    // When moving the mouse one full sreen\r\n    // Orbit will rotate 180 degree around the scene\r\n    // Basic will rotate 180 degrees on itself\r\n    const factor = this.orbitMode\r\n      ? Math.PI * this._orbitSpeed\r\n      : Math.PI * this._rotateSpeed\r\n\r\n    euler.y -= vector.x * factor\r\n    euler.x -= vector.y * factor\r\n    euler.z = 0\r\n\r\n    // Clamp X rotation to prevent performing a loop.\r\n    const max = Math.PI * 0.48\r\n    euler.x = Math.max(-max, Math.min(max, euler.x))\r\n\r\n    this.camera.quaternion.setFromEuler(euler)\r\n\r\n    if (!this.orbitMode) {\r\n      const offset = new THREE.Vector3(0, 0, 1)\r\n        .applyQuaternion(this.camera.quaternion)\r\n        .multiplyScalar(this._currentOrbitalDistance)\r\n\r\n      this._orbitalTarget = this.camera.position.clone().sub(offset)\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Apply the camera frame update\r\n   */\r\n  update (deltaTime: number) {\r\n    const targetVelocity = this._inputVelocity.clone()\r\n\r\n    // Update the camera velocity and position\r\n    const invBlendFactor = Math.pow(this._velocityBlendFactor, deltaTime)\r\n    const blendFactor = 1.0 - invBlendFactor\r\n\r\n    this._velocity.multiplyScalar(invBlendFactor)\r\n    targetVelocity.multiplyScalar(blendFactor)\r\n    this._velocity.add(targetVelocity)\r\n\r\n    this._currentOrbitalDistance =\r\n      this._currentOrbitalDistance * invBlendFactor +\r\n      this._orbitalTargetDistance * blendFactor\r\n\r\n    const positionDelta = this._velocity.clone().multiplyScalar(deltaTime)\r\n    const impulse = this._impulse.clone().multiplyScalar(blendFactor)\r\n    positionDelta.add(impulse)\r\n\r\n    const orbitDelta = positionDelta.clone()\r\n\r\n    this._impulse.multiplyScalar(invBlendFactor)\r\n    this.camera.position.add(positionDelta)\r\n    this._orbitalTarget.add(orbitDelta)\r\n\r\n    if (this.orbitMode) {\r\n      const target = new THREE.Vector3(0, 0, this._currentOrbitalDistance)\r\n      target.applyQuaternion(this.camera.quaternion)\r\n      target.add(this._orbitalTarget)\r\n\r\n      if (this.isLerping()) {\r\n        const frames = this._lerpSecondsDuration / deltaTime\r\n        const alpha = 1 - Math.pow(0.01, 1 / frames)\r\n        this.camera.position.lerp(target, alpha)\r\n      } else {\r\n        this.camera.position.copy(target)\r\n        if (this.isSignificant(positionDelta)) {\r\n          this.gizmo?.show()\r\n        }\r\n      }\r\n    }\r\n\r\n    this.gizmo?.setPosition(this._orbitalTarget)\r\n  }\r\n\r\n  /**\r\n   * Rotates the camera so that it looks at sphere\r\n   * Adjusts distance so that the sphere is well framed\r\n   */\r\n  private frameSphere (sphere: THREE.Sphere, center: boolean) {\r\n    if (!sphere) {\r\n      this.reset()\r\n      return\r\n    }\r\n\r\n    if (center) {\r\n      this.camera.position.setY(sphere.center.y)\r\n    }\r\n\r\n    this.camera.lookAt(sphere.center)\r\n    this._currentOrbitalDistance = sphere.radius * 3\r\n    this._orbitalTargetDistance = sphere.radius * 3\r\n    this._orbitalTarget = sphere.center\r\n    this.updateProjection(sphere)\r\n  }\r\n\r\n  updateProjection (sphere: THREE.Sphere) {\r\n    const aspect = this._viewport.getAspectRatio()\r\n    if (this.camera instanceof THREE.PerspectiveCamera) {\r\n      this.camera.aspect = aspect\r\n    } else {\r\n      this.camera.left = -sphere.radius * aspect\r\n      this.camera.right = sphere.radius * aspect\r\n      this.camera.top = sphere.radius\r\n      this.camera.bottom = -sphere.radius\r\n      this.camera.near = 0.1\r\n      this.camera.far = sphere.radius * 10\r\n    }\r\n    this.camera.updateProjectionMatrix()\r\n  }\r\n\r\n  get orthographic () {\r\n    return this.camera instanceof THREE.OrthographicCamera\r\n  }\r\n\r\n  set orthographic (value: boolean) {\r\n    if (value === this.orthographic) return\r\n\r\n    const cam = value\r\n      ? new THREE.OrthographicCamera(-1, 1, 1, -1, -1, 1)\r\n      : new THREE.PerspectiveCamera()\r\n\r\n    cam.position.copy(this.camera.position)\r\n    cam.rotation.copy(this.camera.rotation)\r\n    this.camera = cam\r\n\r\n    this.updateProjection(this._scene.getBoundingSphere())\r\n  }\r\n\r\n  private getBaseMultiplier () {\r\n    return Math.pow(1.25, this.speed)\r\n  }\r\n\r\n  private getSpeedMultiplier () {\r\n    return (\r\n      this.getBaseMultiplier() *\r\n      // (dist / size) * (size / ref). Size gets canceled.\r\n      (this._orbitalTargetDistance / this._vimReferenceSize)\r\n    )\r\n  }\r\n\r\n  private getDistanceMultiplier () {}\r\n\r\n  private isLerping () {\r\n    return new Date().getTime() < this._lerpMsEndtime\r\n  }\r\n\r\n  private startLerp (seconds: number) {\r\n    this._lerpMsEndtime = new Date().getTime() + seconds * 1000\r\n    this._lerpSecondsDuration = seconds\r\n  }\r\n\r\n  private isSignificant (vector: THREE.Vector3) {\r\n    // One hundreth of standard scene size per frame\r\n    const min = (0.01 * this._sceneSizeMultiplier) / 60\r\n    return (\r\n      Math.abs(vector.x) > min ||\r\n      Math.abs(vector.y) > min ||\r\n      Math.abs(vector.z) > min\r\n    )\r\n  }\r\n}\r\n","/**\r\n * @module viw-webgl-viewer\r\n */\r\n\r\nimport * as THREE from 'three'\r\nimport { Viewer } from './viewer'\r\n\r\nexport const KEYS = {\r\n  KEY_0: 48,\r\n  KEY_1: 49,\r\n  KEY_2: 50,\r\n  KEY_3: 51,\r\n  KEY_4: 52,\r\n  KEY_5: 53,\r\n  KEY_6: 54,\r\n  KEY_7: 55,\r\n  KEY_8: 56,\r\n  KEY_9: 57,\r\n\r\n  KEY_LEFT: 0x25,\r\n  KEY_RIGHT: 0x27,\r\n  KEY_UP: 0x26,\r\n  KEY_DOWN: 0x28,\r\n  KEY_CTRL: 0x11,\r\n  KEY_SHIFT: 0x10,\r\n  KEY_ENTER: 0x0d,\r\n  KEY_SPACE: 0x20,\r\n  KEY_TAB: 0x09,\r\n  KEY_ESCAPE: 0x1b,\r\n  KEY_BACKSPACE: 0x08,\r\n  KEY_HOME: 0x24,\r\n  KEY_END: 0x23,\r\n  KEY_INSERT: 0x2d,\r\n  KEY_DELETE: 0x2e,\r\n  KEY_ALT: 0x12,\r\n\r\n  KEY_F1: 0x70,\r\n  KEY_F2: 0x71,\r\n  KEY_F3: 0x72,\r\n  KEY_F4: 0x73,\r\n  KEY_F5: 0x74,\r\n  KEY_F6: 0x75,\r\n  KEY_F7: 0x76,\r\n  KEY_F8: 0x77,\r\n  KEY_F9: 0x78,\r\n  KEY_F10: 0x79,\r\n  KEY_F11: 0x7a,\r\n  KEY_F12: 0x7b,\r\n\r\n  KEY_NUMPAD0: 0x60,\r\n  KEY_NUMPAD1: 0x61,\r\n  KEY_NUMPAD2: 0x62,\r\n  KEY_NUMPAD3: 0x63,\r\n  KEY_NUMPAD4: 0x64,\r\n  KEY_NUMPAD5: 0x65,\r\n  KEY_NUMPAD6: 0x66,\r\n  KEY_NUMPAD7: 0x67,\r\n  KEY_NUMPAD8: 0x68,\r\n  KEY_NUMPAD9: 0x69,\r\n\r\n  KEY_ADD: 0x6b,\r\n  KEY_SUBTRACT: 0x6d,\r\n  KEY_MULTIPLY: 0x6a,\r\n  KEY_DIVIDE: 0x6f,\r\n  KEY_SEPARATOR: 0x6c,\r\n  KEY_DECIMAL: 0x6e,\r\n\r\n  KEY_OEM_PLUS: 0xbb,\r\n  KEY_OEM_MINUS: 0xbd,\r\n\r\n  KEY_A: 65,\r\n  KEY_B: 66,\r\n  KEY_C: 67,\r\n  KEY_D: 68,\r\n  KEY_E: 69,\r\n  KEY_F: 70,\r\n  KEY_G: 71,\r\n  KEY_H: 72,\r\n  KEY_I: 73,\r\n  KEY_J: 74,\r\n  KEY_K: 75,\r\n  KEY_L: 76,\r\n  KEY_M: 77,\r\n  KEY_N: 78,\r\n  KEY_O: 79,\r\n  KEY_P: 80,\r\n  KEY_Q: 81,\r\n  KEY_R: 82,\r\n  KEY_S: 83,\r\n  KEY_T: 84,\r\n  KEY_U: 85,\r\n  KEY_V: 86,\r\n  KEY_W: 87,\r\n  KEY_X: 88,\r\n  KEY_Y: 89,\r\n  KEY_Z: 90\r\n}\r\n\r\n/**\r\n * Manages keyboard user inputs\r\n */\r\nexport class Keyboard {\r\n  // Settings\r\n  private SHIFT_MULTIPLIER: number = 3.0\r\n\r\n  // Dependencies\r\n  private _viewer: Viewer\r\n\r\n  private get camera () {\r\n    return this._viewer.camera\r\n  }\r\n\r\n  private get selection () {\r\n    return this._viewer.selection\r\n  }\r\n\r\n  // State\r\n  isUpPressed: boolean\r\n  isDownPressed: boolean\r\n  isLeftPressed: boolean\r\n  isRightPressed: boolean\r\n  isEPressed: boolean\r\n  isQPressed: boolean\r\n  isShiftPressed: boolean = false\r\n  isCtrlPressed: boolean\r\n\r\n  constructor (viewer: Viewer) {\r\n    this._viewer = viewer\r\n  }\r\n\r\n  reset = () => {\r\n    this.isUpPressed = false\r\n    this.isDownPressed = false\r\n    this.isLeftPressed = false\r\n    this.isRightPressed = false\r\n    this.isEPressed = false\r\n    this.isQPressed = false\r\n    this.isShiftPressed = false\r\n    this.isCtrlPressed = false\r\n  }\r\n\r\n  onKeyUp = (event: any) => {\r\n    this.onKey(event, false)\r\n  }\r\n\r\n  onKeyDown = (event: any) => {\r\n    this.onKey(event, true)\r\n  }\r\n\r\n  onKey = (event: any, keyDown: boolean) => {\r\n    // Buttons that activate once on key up\r\n    if (!keyDown) {\r\n      switch (event.keyCode) {\r\n        case KEYS.KEY_ADD:\r\n        case KEYS.KEY_OEM_PLUS:\r\n          this.camera.speed += 1\r\n          event.preventDefault()\r\n          break\r\n        case KEYS.KEY_SUBTRACT:\r\n        case KEYS.KEY_OEM_MINUS:\r\n          this.camera.speed -= 1\r\n          event.preventDefault()\r\n          break\r\n        case KEYS.KEY_F8:\r\n        case KEYS.KEY_SPACE:\r\n          this.camera.orbitMode = !this.camera.orbitMode\r\n          event.preventDefault()\r\n          break\r\n        case KEYS.KEY_HOME:\r\n          this.camera.frame('all', true)\r\n          event.preventDefault()\r\n          break\r\n        // Selection\r\n        case KEYS.KEY_ESCAPE:\r\n          this.selection.clear()\r\n          event.preventDefault()\r\n          break\r\n        case KEYS.KEY_Z:\r\n        case KEYS.KEY_F:\r\n          this.camera.frame(this.selection.object)\r\n          event.preventDefault()\r\n          break\r\n      }\r\n    }\r\n\r\n    // Camera Movement, Buttons that need constant state refresh\r\n    switch (event.keyCode) {\r\n      case KEYS.KEY_W:\r\n      case KEYS.KEY_UP:\r\n        this.isUpPressed = keyDown\r\n        this.applyMove()\r\n        event.preventDefault()\r\n        break\r\n      case KEYS.KEY_S:\r\n      case KEYS.KEY_DOWN:\r\n        this.isDownPressed = keyDown\r\n        this.applyMove()\r\n        event.preventDefault()\r\n        break\r\n      case KEYS.KEY_D:\r\n      case KEYS.KEY_RIGHT:\r\n        this.isRightPressed = keyDown\r\n        this.applyMove()\r\n        event.preventDefault()\r\n        break\r\n      case KEYS.KEY_A:\r\n      case KEYS.KEY_LEFT:\r\n        this.isLeftPressed = keyDown\r\n        this.applyMove()\r\n        event.preventDefault()\r\n        break\r\n      case KEYS.KEY_E:\r\n        this.isEPressed = keyDown\r\n        this.applyMove()\r\n        event.preventDefault()\r\n        break\r\n      case KEYS.KEY_Q:\r\n        this.isQPressed = keyDown\r\n        this.applyMove()\r\n        event.preventDefault()\r\n        break\r\n      case KEYS.KEY_SHIFT:\r\n        this.isShiftPressed = keyDown\r\n        this.applyMove()\r\n        event.preventDefault()\r\n        break\r\n      case KEYS.KEY_CTRL:\r\n        this.isCtrlPressed = keyDown\r\n        console.log('Control:' + keyDown)\r\n        event.preventDefault()\r\n        break\r\n    }\r\n  }\r\n\r\n  private applyMove = () => {\r\n    const move = new THREE.Vector3(\r\n      (this.isRightPressed ? 1 : 0) - (this.isLeftPressed ? 1 : 0),\r\n      (this.isEPressed ? 1 : 0) - (this.isQPressed ? 1 : 0),\r\n      (this.isUpPressed ? 1 : 0) - (this.isDownPressed ? 1 : 0)\r\n    )\r\n    const speed = this.isShiftPressed ? this.SHIFT_MULTIPLIER : 1\r\n    move.multiplyScalar(speed)\r\n    this.camera.localVelocity = move\r\n  }\r\n}\r\n","/**\r\n * @module viw-webgl-viewer\r\n */\r\n\r\nimport * as THREE from 'three'\r\nimport { Mouse } from './mouse'\r\nimport { Viewer } from './viewer'\r\n\r\n/**\r\n * Manages user touch inputs.\r\n */\r\nexport class Touch {\r\n  TAP_DURATION_MS: number = 500\r\n\r\n  // Dependencies\r\n  private _viewer: Viewer\r\n  private _mouse: Mouse\r\n\r\n  private get camera () {\r\n    return this._viewer.camera\r\n  }\r\n\r\n  private get viewport () {\r\n    return this._viewer.viewport\r\n  }\r\n\r\n  // State\r\n  private _touchStart: THREE.Vector2 | undefined = undefined // When one touch occurs this is the value, when two or more touches occur it is the average of the first two.\r\n  private _touchStart1: THREE.Vector2 | undefined = undefined // The first touch when multiple touches occur, otherwise left undefined\r\n  private _touchStart2: THREE.Vector2 | undefined = undefined // The second touch when multiple touches occur, otherwise left undefined\r\n  private _touchStartTime: number | undefined = undefined // In ms since epoch\r\n\r\n  constructor (viewer: Viewer, mouse: Mouse) {\r\n    this._viewer = viewer\r\n    this._mouse = mouse\r\n  }\r\n\r\n  reset = () => {\r\n    this._touchStart =\r\n      this._touchStart1 =\r\n      this._touchStart2 =\r\n      this._touchStartTime =\r\n        undefined\r\n  }\r\n\r\n  private onTap = (position: THREE.Vector2) => {\r\n    this._mouse.onMouseClick(position, false)\r\n  }\r\n\r\n  onTouchStart = (event: any) => {\r\n    event.preventDefault() // prevent scrolling\r\n    if (!event || !event.touches || !event.touches.length) {\r\n      return\r\n    }\r\n    this._touchStartTime = new Date().getTime()\r\n\r\n    if (event.touches.length === 1) {\r\n      this._touchStart = this.touchToVector(event.touches[0])\r\n      this._touchStart1 = this._touchStart2 = undefined\r\n    } else if (event.touches.length === 2) {\r\n      this._touchStart1 = this.touchToVector(event.touches[0])\r\n      this._touchStart2 = this.touchToVector(event.touches[1])\r\n      this._touchStart = this.average(this._touchStart1, this._touchStart2)\r\n    }\r\n  }\r\n\r\n  onDrag = (delta: THREE.Vector2) => {\r\n    this.camera.rotate(delta)\r\n  }\r\n\r\n  onDoubleDrag = (delta: THREE.Vector2) => {\r\n    this.camera.move2(delta, 'XY')\r\n  }\r\n\r\n  onPinchOrSpread = (delta: number) => {\r\n    this.camera.move1(delta, 'Z')\r\n  }\r\n\r\n  onTouchMove = (event: any) => {\r\n    event.preventDefault()\r\n    if (!event || !event.touches || !event.touches.length) return\r\n    if (!this._touchStart) return\r\n\r\n    if (event.touches.length === 1) {\r\n      const pos = this.touchToVector(event.touches[0])\r\n      const [width, height] = this.viewport.getSize()\r\n      const delta = pos\r\n        .clone()\r\n        .sub(this._touchStart)\r\n        .multiply(new THREE.Vector2(1 / width, 1 / height))\r\n\r\n      this._touchStart = pos\r\n      this.onDrag(delta)\r\n      return\r\n    }\r\n\r\n    if (!this._touchStart1 || !this._touchStart2) return\r\n    if (event.touches.length >= 2) {\r\n      const p1 = this.touchToVector(event.touches[0])\r\n      const p2 = this.touchToVector(event.touches[1])\r\n      const p = this.average(p1, p2)\r\n      const [width, height] = this.viewport.getSize()\r\n      const moveDelta = this._touchStart\r\n        .clone()\r\n        .sub(p)\r\n        .multiply(\r\n          // -1 to invert movement\r\n          new THREE.Vector2(-1 / width, -1 / height)\r\n        )\r\n\r\n      const zoom = p1.distanceTo(p2)\r\n      const prevZoom = this._touchStart1.distanceTo(this._touchStart2)\r\n      const min = Math.min(width, height)\r\n      // -1 to invert movement\r\n      const zoomDelta = (zoom - prevZoom) / -min\r\n\r\n      this._touchStart = p\r\n      this._touchStart1 = p1\r\n      this._touchStart2 = p2\r\n\r\n      if (moveDelta.length() > Math.abs(zoomDelta)) {\r\n        this.onDoubleDrag(moveDelta)\r\n      } else {\r\n        this.onPinchOrSpread(zoomDelta)\r\n      }\r\n    }\r\n  }\r\n\r\n  onTouchEnd = (_: any) => {\r\n    if (this.isSingleTouch()) {\r\n      const touchDurationMs = new Date().getTime() - this._touchStartTime!\r\n      if (touchDurationMs < this.TAP_DURATION_MS) {\r\n        this.onTap(this._touchStart!)\r\n      }\r\n    }\r\n    this.reset()\r\n  }\r\n\r\n  private isSingleTouch (): boolean {\r\n    return (\r\n      this._touchStart !== undefined &&\r\n      this._touchStartTime !== undefined &&\r\n      this._touchStart1 === undefined &&\r\n      this._touchStart2 === undefined\r\n    )\r\n  }\r\n\r\n  private touchToVector (touch: any) {\r\n    return new THREE.Vector2(touch.pageX, touch.pageY)\r\n  }\r\n\r\n  private average (p1: THREE.Vector2, p2: THREE.Vector2): THREE.Vector2 {\r\n    return p1.clone().lerp(p2, 0.5)\r\n  }\r\n}\r\n","/**\r\n * @module viw-webgl-viewer\r\n */\r\n\r\nimport * as THREE from 'three'\r\nimport { Viewer } from './viewer'\r\nimport { Raycaster } from './raycaster'\r\nimport { Keyboard } from './keyboard'\r\n\r\n/**\r\n * Manages mouse user inputs\r\n */\r\nexport class Mouse {\r\n  // Dependencies\r\n  private _viewer: Viewer\r\n  private _raycaster: Raycaster\r\n  private _inputKeyboard: Keyboard\r\n\r\n  private get camera () {\r\n    return this._viewer.camera\r\n  }\r\n\r\n  private get viewport () {\r\n    return this._viewer.viewport\r\n  }\r\n\r\n  // State\r\n  isMouseDown: Boolean = false\r\n  hasMouseMoved: Boolean = false\r\n\r\n  constructor (viewer: Viewer, keyboard: Keyboard) {\r\n    this._viewer = viewer\r\n    this._raycaster = this._viewer.raycaster\r\n    this._inputKeyboard = keyboard\r\n  }\r\n\r\n  reset = () => {\r\n    this.isMouseDown = this.hasMouseMoved = false\r\n  }\r\n\r\n  onMouseOut = (_: any) => {\r\n    this.isMouseDown = this.hasMouseMoved = false\r\n  }\r\n\r\n  onMouseMove = (event: any) => {\r\n    if (!this.isMouseDown) {\r\n      return\r\n    }\r\n\r\n    event.preventDefault()\r\n\r\n    // https://github.com/mrdoob/three.js/blob/master/examples/jsm/controls/PointerLockControls.js\r\n    const deltaX =\r\n      event.movementX || event.mozMovementX || event.webkitMovementX || 0\r\n    const deltaY =\r\n      event.movementY || event.mozMovementY || event.webkitMovementY || 0\r\n    const [width, height] = this.viewport.getSize()\r\n    const delta = new THREE.Vector2(deltaX / width, deltaY / height)\r\n\r\n    this.hasMouseMoved =\r\n      this.hasMouseMoved || Math.abs(deltaX) + Math.abs(deltaY) > 3\r\n\r\n    if (event.buttons & 2) {\r\n      // right button\r\n      this.camera.move2(delta, 'XY')\r\n    } else if (event.buttons & 4) {\r\n      // Midle button\r\n      this.camera.move2(delta, 'XZ')\r\n    } else {\r\n      // left button\r\n      this.camera.rotate(delta)\r\n    }\r\n  }\r\n\r\n  onMouseWheel = (event: any) => {\r\n    event.preventDefault()\r\n    event.stopPropagation()\r\n\r\n    // Value of event.deltaY will change from browser to browser\r\n    // https://stackoverflow.com/questions/38942821/wheel-event-javascript-give-inconsistent-values\r\n    // Thus we only use the direction of the value\r\n    const scrollValue = Math.sign(event.deltaY)\r\n\r\n    if (this._inputKeyboard.isCtrlPressed) {\r\n      this.camera.speed -= scrollValue\r\n    } else if (this.camera.orbitMode) {\r\n      this.camera.zoom(scrollValue)\r\n    } else {\r\n      const impulse = new THREE.Vector3(0, 0, scrollValue)\r\n      this.camera.addImpulse(impulse)\r\n    }\r\n  }\r\n\r\n  onMouseDown = (event: any) => {\r\n    event.preventDefault()\r\n    this.isMouseDown = true\r\n    this.hasMouseMoved = false\r\n\r\n    // Manually set the focus since calling preventDefault above\r\n    // prevents the browser from setting it automatically.\r\n    this.viewport.canvas.focus()\r\n  }\r\n\r\n  onMouseUp = (event: any) => {\r\n    if (this.isMouseDown && !this.hasMouseMoved) {\r\n      this.onMouseClick(new THREE.Vector2(event.offsetX, event.offsetY), false)\r\n    }\r\n    this.isMouseDown = false\r\n    event.preventDefault()\r\n  }\r\n\r\n  onDoubleClick = (event: any) => {\r\n    this.onMouseClick(new THREE.Vector2(event.offsetX, event.offsetY), true)\r\n  }\r\n\r\n  onMouseClick = (position: THREE.Vector2, doubleClick: boolean) => {\r\n    const result = this._raycaster.screenRaycast(position)\r\n    result.doubleClick = doubleClick\r\n    this._viewer.onMouseClick(result)\r\n  }\r\n}\r\n","/**\r\n * @module viw-webgl-viewer\r\n */\r\n\r\nimport { Viewer } from './viewer'\r\nimport { Keyboard } from './keyboard'\r\nimport { Touch } from './touch'\r\nimport { Mouse } from './mouse'\r\n\r\n/**\r\n * Manages and registers all viewer user inputs for mouse, keyboard and touch\r\n */\r\nexport class Input {\r\n  // Dependencies\r\n  private _canvas: HTMLCanvasElement\r\n\r\n  // State\r\n  private _unregisters: Function[]\r\n  private _touch: Touch\r\n  private _mouse: Mouse\r\n  private _keyboard: Keyboard\r\n\r\n  constructor (viewer: Viewer) {\r\n    this._canvas = viewer.viewport.canvas\r\n    this._unregisters = []\r\n\r\n    this._keyboard = new Keyboard(viewer)\r\n    this._mouse = new Mouse(viewer, this._keyboard)\r\n    this._touch = new Touch(viewer, this._mouse)\r\n  }\r\n\r\n  private reg = (\r\n    // eslint-disable-next-line no-undef\r\n    handler: DocumentAndElementEventHandlers,\r\n    type: string,\r\n    listener: (event: any) => void\r\n  ) => {\r\n    handler.addEventListener(type, listener)\r\n    this._unregisters.push(() => handler.removeEventListener(type, listener))\r\n  }\r\n\r\n  /**\r\n   * Register inputs handlers for default viewer behavior\r\n   */\r\n  register () {\r\n    // mouse\r\n    this.reg(this._canvas, 'mousedown', this._mouse.onMouseDown)\r\n    this.reg(this._canvas, 'wheel', this._mouse.onMouseWheel)\r\n    this.reg(this._canvas, 'mousemove', this._mouse.onMouseMove)\r\n    this.reg(this._canvas, 'mouseup', this._mouse.onMouseUp)\r\n    this.reg(this._canvas, 'mouseout', this._mouse.onMouseOut)\r\n    this.reg(this._canvas, 'dblclick', this._mouse.onDoubleClick)\r\n\r\n    // touch\r\n    this.reg(this._canvas, 'touchstart', this._touch.onTouchStart)\r\n    this.reg(this._canvas, 'touchend', this._touch.onTouchEnd)\r\n    this.reg(this._canvas, 'touchmove', this._touch.onTouchMove)\r\n\r\n    // keys\r\n    this.reg(document, 'keydown', this._keyboard.onKeyDown)\r\n    this.reg(document, 'keyup', this._keyboard.onKeyUp)\r\n\r\n    // Disable right click menu\r\n    this.reg(this._canvas, 'contextmenu', (e) => e.preventDefault())\r\n  }\r\n\r\n  /**\r\n   * Unregisters all input handlers\r\n   */\r\n  unregister = () => {\r\n    this._unregisters.forEach((f) => f())\r\n    this.reset()\r\n  }\r\n\r\n  /**\r\n   * Resets all input state\r\n   */\r\n  reset () {\r\n    this._mouse.reset()\r\n    this._keyboard.reset()\r\n    this._touch.reset()\r\n  }\r\n}\r\n","/**\r\n * @module viw-webgl-viewer\r\n */\r\n\r\nimport * as THREE from 'three'\r\nimport { Object } from '../vim-loader/object'\r\nimport { Renderer } from './renderer'\r\n\r\n// TODO: Fix circular dependency\r\n/**\r\n * Provides basic selection mechanic in viewer\r\n */\r\nexport class Selection {\r\n  // Dependencies\r\n  private _renderer: Renderer\r\n\r\n  // State\r\n  private _object: Object | undefined\r\n\r\n  // Disposable State\r\n  private _highligt: THREE.LineSegments | undefined\r\n\r\n  constructor (renderer: Renderer) {\r\n    this._renderer = renderer\r\n  }\r\n\r\n  /**\r\n   * Returns selected object.\r\n   */\r\n  get object () {\r\n    return this._object\r\n  }\r\n\r\n  /**\r\n   * Select given object\r\n   */\r\n  select (object: Object) {\r\n    this.clear()\r\n    if (object) {\r\n      this._object = object\r\n      this._highligt = object.createWireframe()\r\n      this._renderer.add(this._highligt)\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Clear selection and related highlights\r\n   */\r\n  clear () {\r\n    this._object = undefined\r\n\r\n    if (this._highligt) {\r\n      this._highligt.geometry.dispose()\r\n      this._renderer.remove(this._highligt)\r\n      this._highligt = undefined\r\n    }\r\n  }\r\n}\r\n","/**\r\n * @module viw-webgl-viewer\r\n */\r\n\r\nimport * as THREE from 'three'\r\nimport { ViewerSettings } from './viewerSettings'\r\nimport { Box3 } from 'three'\r\n\r\n/**\r\n * Manages the THREE.Mesh for the ground plane under the vims\r\n */\r\nexport class GroundPlane {\r\n  mesh: THREE.Mesh\r\n\r\n  private _source: string\r\n\r\n  private _size: number\r\n\r\n  // disposable\r\n  private _geometry: THREE.PlaneBufferGeometry\r\n  private _material: THREE.MeshBasicMaterial\r\n  private _texture: THREE.Texture\r\n\r\n  constructor () {\r\n    this._geometry = new THREE.PlaneBufferGeometry()\r\n    this._material = new THREE.MeshBasicMaterial({ transparent: true })\r\n    this.mesh = new THREE.Mesh(this._geometry, this._material)\r\n  }\r\n\r\n  applyViewerSettings (settings: ViewerSettings) {\r\n    this._size = settings.getGroundPlaneSize()\r\n    // Visibily\r\n    this.mesh.visible = settings.getGroundPlaneShow()\r\n\r\n    // Looks\r\n    this.applyTexture(settings.getGroundPlaneTextureUrl())\r\n    this._material.color.copy(settings.getGroundPlaneColor())\r\n    this._material.opacity = settings.getGroundPlaneOpacity()\r\n  }\r\n\r\n  adaptToContent (box: THREE.Box3) {\r\n    // Position\r\n    const center = box.getCenter(new THREE.Vector3())\r\n    const position = new THREE.Vector3(\r\n      center.x,\r\n      box.min.y - Math.abs(box.min.y) * 0.01,\r\n      center.z\r\n    )\r\n    this.mesh.position.copy(position)\r\n    // Rotation\r\n    // Face up, rotate by 270 degrees around x\r\n    this.mesh.quaternion.copy(\r\n      new THREE.Quaternion().setFromEuler(new THREE.Euler(1.5 * Math.PI, 0, 0))\r\n    )\r\n\r\n    // Scale\r\n    const sphere = box?.getBoundingSphere(new THREE.Sphere())\r\n    const size = (sphere?.radius ?? 1) * this._size\r\n    const scale = new THREE.Vector3(1, 1, 1).multiplyScalar(size)\r\n    this.mesh.scale.copy(scale)\r\n  }\r\n\r\n  applyTexture (texUrl: string) {\r\n    // Check for changes\r\n    if (texUrl === this._source) return\r\n    this._source = texUrl\r\n\r\n    // dispose previous texture\r\n    this._texture?.dispose()\r\n    this._texture = undefined\r\n\r\n    // Bail if new texture url, is no texture\r\n    if (!texUrl) return\r\n\r\n    // load texture\r\n    const loader = new THREE.TextureLoader()\r\n    this._texture = loader.load(texUrl)\r\n    if (!this._texture) {\r\n      console.error('Failed to load texture: ' + texUrl)\r\n      return\r\n    }\r\n\r\n    // Apply texture\r\n    this._material.map = this._texture\r\n  }\r\n\r\n  dispose () {\r\n    this._geometry?.dispose()\r\n    this._material?.dispose()\r\n    this._texture?.dispose()\r\n\r\n    this._geometry = undefined\r\n    this._material = undefined\r\n    this._texture = undefined\r\n  }\r\n}\r\n\r\n/**\r\n * Manages ground plane and lights that are part of the THREE.Scene to render but not part of the Vims.\r\n */\r\nexport class Environment {\r\n  skyLight: THREE.HemisphereLight\r\n  sunLight: THREE.DirectionalLight\r\n  private _groundPlane: GroundPlane\r\n\r\n  get groundPlane () {\r\n    return this._groundPlane.mesh\r\n  }\r\n\r\n  constructor (settings: ViewerSettings) {\r\n    this._groundPlane = new GroundPlane()\r\n    this.skyLight = new THREE.HemisphereLight()\r\n    this.sunLight = new THREE.DirectionalLight()\r\n    this.applySettings(settings)\r\n  }\r\n\r\n  /**\r\n   * Returns all three objects composing the environment\r\n   */\r\n  getObjects (): THREE.Object3D[] {\r\n    return [this._groundPlane.mesh, this.skyLight, this.sunLight]\r\n  }\r\n\r\n  applySettings (settings: ViewerSettings) {\r\n    // Plane\r\n    this._groundPlane.applyViewerSettings(settings)\r\n\r\n    // Skylight\r\n    this.skyLight.color.copy(settings.getSkylightColor())\r\n    this.skyLight.groundColor.copy(settings.getSkylightGroundColor())\r\n    this.skyLight.intensity = settings.getSkylightIntensity()\r\n\r\n    // Sunlight\r\n    this.sunLight.color.copy(settings.getSunlightColor())\r\n    this.sunLight.position.copy(settings.getSunlightPosition())\r\n    this.sunLight.intensity = settings.getSunlightIntensity()\r\n  }\r\n\r\n  /**\r\n   * Adjust scale so that it matches box dimensions.\r\n   */\r\n  adaptToContent (box: Box3) {\r\n    // Plane\r\n    this._groundPlane.adaptToContent(box)\r\n  }\r\n\r\n  dispose () {\r\n    this.sunLight.dispose()\r\n    this.skyLight.dispose()\r\n    this._groundPlane.dispose()\r\n\r\n    this.sunLight = undefined\r\n    this.skyLight = undefined\r\n    this._groundPlane = undefined\r\n  }\r\n}\r\n\r\nexport interface IEnvironment {\r\n  skyLight: THREE.HemisphereLight\r\n  sunLight: THREE.DirectionalLight\r\n  groundPlane: THREE.Mesh\r\n}\r\n","/**\r\n * @module viw-webgl-viewer\r\n */\r\n\r\nimport * as THREE from 'three'\r\nimport { Scene } from '../vim-loader/scene'\r\nimport { Viewport } from './viewport'\r\nimport { RenderScene } from './renderScene'\r\n\r\n/**\r\n * Manages how vim objects are added and removed from the THREE.Scene to be rendered\r\n */\r\nexport class Renderer {\r\n  renderer: THREE.WebGLRenderer\r\n  viewport: Viewport\r\n  scene: RenderScene\r\n\r\n  constructor (scene: RenderScene, viewport: Viewport) {\r\n    this.viewport = viewport\r\n\r\n    this.scene = scene\r\n    this.renderer = new THREE.WebGLRenderer({\r\n      canvas: viewport.canvas,\r\n      antialias: true,\r\n      precision: 'highp', // 'lowp', 'mediump', 'highp'\r\n      alpha: true,\r\n      stencil: false,\r\n      powerPreference: 'high-performance',\r\n      logarithmicDepthBuffer: true\r\n    })\r\n\r\n    this.fitViewport()\r\n    this.viewport.onResize(() => this.fitViewport())\r\n\r\n    this.renderer.setPixelRatio(window.devicePixelRatio)\r\n    this.renderer.shadowMap.enabled = false\r\n  }\r\n\r\n  dispose () {\r\n    this.clear()\r\n\r\n    this.renderer.clear()\r\n    this.renderer.forceContextLoss()\r\n    this.renderer.dispose()\r\n    this.renderer = undefined\r\n  }\r\n\r\n  /**\r\n   * Returns the bounding sphere encompasing all rendererd objects.\r\n   * @param target sphere in which to copy result, a new instance is created if undefined.\r\n   */\r\n  getBoundingSphere (target: THREE.Sphere = new THREE.Sphere()) {\r\n    return this.scene.getBoundingSphere(target)\r\n  }\r\n\r\n  /**\r\n   * Returns the bounding box encompasing all rendererd objects.\r\n   * @param target box in which to copy result, a new instance is created if undefined.\r\n   */\r\n  getBoundingBox (target: THREE.Box3 = new THREE.Box3()) {\r\n    return this.scene.getBoundingBox(target)\r\n  }\r\n\r\n  /**\r\n   * Render what is in camera.\r\n   */\r\n  render (camera: THREE.Camera) {\r\n    this.renderer.render(this.scene.scene, camera)\r\n  }\r\n\r\n  /**\r\n   * Add object to be rendered\r\n   */\r\n  add (target: Scene | THREE.Object3D) {\r\n    this.scene.add(target)\r\n  }\r\n\r\n  /**\r\n   * Remove object from rendering\r\n   */\r\n  remove (target: Scene | THREE.Object3D) {\r\n    this.scene.remove(target)\r\n  }\r\n\r\n  /**\r\n   * Removes all rendered objects\r\n   */\r\n  clear () {\r\n    this.scene.clear()\r\n  }\r\n\r\n  private fitViewport = () => {\r\n    const [width, height] = this.viewport.getParentSize()\r\n    this.renderer.setSize(width, height)\r\n  }\r\n}\r\n","/**\r\n * @module viw-webgl-viewer\r\n */\r\n\r\nimport * as THREE from 'three'\r\nimport { Object } from '../vim-loader/object'\r\nimport { Vim } from '../vim-loader/vim'\r\nimport { RenderScene } from './renderScene'\r\nimport { Viewport } from './viewport'\r\nimport { Camera } from './camera'\r\n\r\ntype ThreeIntersectionList = THREE.Intersection<THREE.Object3D<THREE.Event>>[]\r\n\r\n/**\r\n * Highlevel aggregate of information about a raycast result\r\n */\r\nexport class RaycastResult {\r\n  mousePosition: THREE.Vector2\r\n  doubleClick: boolean\r\n  object: Object\r\n  intersections: ThreeIntersectionList\r\n  firstHit: THREE.Intersection\r\n\r\n  constructor (\r\n    mousePosition: THREE.Vector2,\r\n    intersections: ThreeIntersectionList\r\n  ) {\r\n    this.mousePosition = mousePosition\r\n    this.intersections = intersections\r\n    const [hit, obj] = this.GetFirstVimHit(intersections)\r\n    this.firstHit = hit\r\n    this.object = obj\r\n  }\r\n\r\n  private GetFirstVimHit (\r\n    intersections: ThreeIntersectionList\r\n  ): [THREE.Intersection, Object] {\r\n    for (let i = 0; i < intersections.length; i++) {\r\n      const obj = this.getVimObjectFromHit(intersections[i])\r\n      if (obj?.visible) return [intersections[i], obj]\r\n    }\r\n    return [undefined, undefined]\r\n  }\r\n\r\n  private getVimObjectFromHit (hit: THREE.Intersection) {\r\n    const vim = hit.object.userData.vim as Vim\r\n    if (!vim) return\r\n\r\n    if (hit.object.userData.merged) {\r\n      const index = this.binarySearch(\r\n        hit.object.userData.submeshes,\r\n        hit.faceIndex * 3\r\n      )\r\n      const instance = hit.object.userData.instances[index]\r\n      return vim.getObjectFromInstance(instance)\r\n    } else if (hit.instanceId !== undefined) {\r\n      return vim.getObjectFromMesh(\r\n        hit.object as THREE.InstancedMesh,\r\n        hit.instanceId\r\n      )\r\n    }\r\n  }\r\n\r\n  private binarySearch (array: number[], element: number) {\r\n    let m = 0\r\n    let n = array.length - 1\r\n    while (m <= n) {\r\n      const k = (n + m) >> 1\r\n      const cmp = element - array[k]\r\n      if (cmp > 0) {\r\n        m = k + 1\r\n      } else if (cmp < 0) {\r\n        n = k - 1\r\n      } else {\r\n        return k\r\n      }\r\n    }\r\n    return m - 1\r\n  }\r\n\r\n  // Convenience functions and mnemonics\r\n  get isHit (): boolean {\r\n    return !!this.firstHit\r\n  }\r\n\r\n  get distance (): number {\r\n    return this.firstHit.distance\r\n  }\r\n\r\n  get position (): THREE.Vector3 {\r\n    return this.firstHit.point\r\n  }\r\n\r\n  get threeId (): number {\r\n    return this.firstHit.object.id\r\n  }\r\n\r\n  get faceIndex (): number {\r\n    return this.firstHit.faceIndex\r\n  }\r\n}\r\n\r\nexport class Raycaster {\r\n  private _viewport: Viewport\r\n  private _camera: Camera\r\n  private _scene: RenderScene\r\n\r\n  private _raycaster = new THREE.Raycaster()\r\n\r\n  constructor (viewport: Viewport, camera: Camera, scene: RenderScene) {\r\n    this._viewport = viewport\r\n    this._camera = camera\r\n    this._scene = scene\r\n  }\r\n\r\n  /**\r\n   * Raycast projecting a ray from camera position to screen position\r\n   */\r\n  screenRaycast (position: THREE.Vector2): RaycastResult {\r\n    console.time('raycast')\r\n    const intersections = this.raycast(position)\r\n    console.timeEnd('raycast')\r\n    const r = new RaycastResult(position, intersections)\r\n\r\n    const hit = r.firstHit\r\n\r\n    if (hit) {\r\n      const vim = hit.object.userData.vim as Vim\r\n\r\n      // Merged meshes have g3d intance index of each face encoded in uvs\r\n      if (hit.object.userData.merged && hit.uv !== undefined) {\r\n        const instance = Math.round(hit.uv.x)\r\n        r.object = vim.getObjectFromInstance(instance)\r\n      } else if (hit.instanceId !== undefined) {\r\n        r.object = vim.getObjectFromMesh(\r\n          hit.object as THREE.InstancedMesh,\r\n          hit.instanceId\r\n        )\r\n      }\r\n    }\r\n    return r\r\n  }\r\n\r\n  private raycast (position: THREE.Vector2): ThreeIntersectionList {\r\n    const [width, height] = this._viewport.getSize()\r\n    const x = (position.x / width) * 2 - 1\r\n    const y = -(position.y / height) * 2 + 1\r\n    this._raycaster.setFromCamera(new THREE.Vector2(x, y), this._camera.camera)\r\n    return this._raycaster.intersectObjects(this._scene.scene.children)\r\n  }\r\n}\r\n","/**\r\n * @module viw-webgl-viewer\r\n */\r\n\r\nimport * as THREE from 'three'\r\nimport { MathUtils } from 'three'\r\nimport { Renderer } from './renderer'\r\nimport { Camera } from './camera'\r\nimport { ViewerSettings } from './viewerSettings'\r\n\r\n/**\r\n * Manages the camera target gizmo\r\n */\r\nexport class CameraGizmo {\r\n  // Dependencies\r\n  private _renderer: Renderer\r\n  private _camera: Camera\r\n\r\n  // Settings\r\n  private _size: number = 0.01\r\n  private _fov: number = 50\r\n  private _color: THREE.Color = new THREE.Color('blue')\r\n  private _opacity: number\r\n  private _opacityAlways: number\r\n  private _fadeDurationMs: number = 200\r\n  private _showDurationMs: number = 1000\r\n\r\n  // Resources\r\n  private _box: THREE.BufferGeometry\r\n  private _wireframe: THREE.BufferGeometry\r\n  private _material: THREE.LineBasicMaterial\r\n  private _materialAlways: THREE.LineBasicMaterial\r\n  private _gizmos: THREE.Group\r\n\r\n  // State\r\n  private _timeout: ReturnType<typeof setTimeout>\r\n  private _fadeEnd: number\r\n  private _active: boolean\r\n\r\n  constructor (renderer: Renderer, camera: Camera, settings: ViewerSettings) {\r\n    this._renderer = renderer\r\n    this._camera = camera\r\n    this.applySettings(settings)\r\n  }\r\n\r\n  dispose () {\r\n    clearTimeout(this._timeout)\r\n\r\n    this._box.dispose()\r\n    this._wireframe.dispose()\r\n    this._material.dispose()\r\n    this._materialAlways.dispose()\r\n    this._box = undefined\r\n    this._wireframe = undefined\r\n    this._material = undefined\r\n    this._materialAlways = undefined\r\n\r\n    this._renderer.remove(this._gizmos)\r\n    this._gizmos = undefined\r\n  }\r\n\r\n  show (show: boolean = true) {\r\n    if (!this._active) return\r\n\r\n    if (!this._gizmos) {\r\n      this.createGizmo()\r\n    }\r\n\r\n    clearTimeout(this._timeout)\r\n    this._gizmos.visible = show\r\n    // Hide after one second since last request\r\n    if (show) {\r\n      this._timeout = setTimeout(() => this.fadeOut(), this._showDurationMs)\r\n    }\r\n  }\r\n\r\n  fadeOut (fading?: boolean) {\r\n    const now = new Date().getTime()\r\n\r\n    if (!fading) {\r\n      this._fadeEnd = now + this._fadeDurationMs\r\n    }\r\n\r\n    if (now > this._fadeEnd) {\r\n      // restore opacity values and hide for good\r\n      this._gizmos.visible = false\r\n      this._material.opacity = this._opacity\r\n      this._materialAlways.opacity = this._opacityAlways\r\n    } else {\r\n      // lerp and loop until fade is over\r\n      requestAnimationFrame(() => this.fadeOut(true))\r\n      const t = Math.pow((this._fadeEnd - now) / this._fadeDurationMs, 4)\r\n      this._material.opacity = MathUtils.lerp(0, this._opacity, t)\r\n      this._materialAlways.opacity = MathUtils.lerp(0, this._opacityAlways, t)\r\n    }\r\n  }\r\n\r\n  setPosition (position: THREE.Vector3) {\r\n    if (!this._gizmos) return\r\n    this._gizmos.position.copy(position)\r\n    this.updateScale()\r\n  }\r\n\r\n  setSize (size: number) {\r\n    this._size = size\r\n  }\r\n\r\n  setOpacity (opacity: number, opacityAlways: number) {\r\n    this._opacity = opacity\r\n    this._opacityAlways = opacityAlways\r\n    if (!this._gizmos) return\r\n    this._material.opacity = opacity\r\n    this._materialAlways.opacity = opacityAlways\r\n  }\r\n\r\n  setColor (color: THREE.Color) {\r\n    this._color = color\r\n    if (!this._gizmos) return\r\n    this._material.color = color\r\n    this._materialAlways.color = color\r\n  }\r\n\r\n  applySettings (settings: ViewerSettings) {\r\n    this._active = settings.getCameraGizmoEnable()\r\n    this._fov = settings.getCameraFov()\r\n    this.setColor(settings.getCameraGizmoColor())\r\n    this.setSize(settings.getCameraGizmoSize())\r\n    this.setOpacity(\r\n      settings.getCameraGizmoOpacity(),\r\n      settings.getCameraGizmoOpacityAlways()\r\n    )\r\n  }\r\n\r\n  private updateScale () {\r\n    const dist = this._camera.camera.position\r\n      .clone()\r\n      .distanceTo(this._gizmos.position)\r\n    // computes scale such that gizmo screen size remains constant\r\n    const h = dist * Math.tan(MathUtils.degToRad(this._fov) * this._size)\r\n    this._gizmos?.scale.set(h, h, h)\r\n  }\r\n\r\n  private createGizmo () {\r\n    this._box = new THREE.SphereGeometry(1)\r\n    this._wireframe = new THREE.WireframeGeometry(this._box)\r\n\r\n    this._material = new THREE.LineBasicMaterial({\r\n      depthTest: true,\r\n      opacity: this._opacity,\r\n      color: this._color,\r\n      transparent: true\r\n    })\r\n    this._materialAlways = new THREE.LineBasicMaterial({\r\n      depthTest: false,\r\n      opacity: this._opacityAlways,\r\n      color: this._color,\r\n      transparent: true\r\n    })\r\n\r\n    // Add to scene as group\r\n    this._gizmos = new THREE.Group()\r\n    this._gizmos.add(new THREE.LineSegments(this._wireframe, this._material))\r\n    this._gizmos.add(\r\n      new THREE.LineSegments(this._wireframe, this._materialAlways)\r\n    )\r\n    this._renderer.add(this._gizmos)\r\n    this.updateScale()\r\n  }\r\n}\r\n","/**\r\n * @module vim-loader\r\n */\r\n\r\nimport * as THREE from 'three'\r\nimport { G3d } from './g3d'\r\n\r\nexport namespace Transparency {\r\n  /**\r\n   * Determines how to draw (or not) transparent and opaque objects\r\n   */\r\n  export type Mode = 'opaqueOnly' | 'transparentOnly' | 'allAsOpaque' | 'all'\r\n\r\n  /**\r\n   * Returns true if the transparency mode is one of the valid values\r\n   */\r\n  export function isValid (value: string): value is Mode {\r\n    return ['all', 'opaqueOnly', 'transparentOnly', 'allAsOpaque'].includes(\r\n      value\r\n    )\r\n  }\r\n\r\n  /**\r\n   * Returns true if the transparency mode requires to use RGBA colors\r\n   */\r\n  export function requiresAlpha (mode: Mode) {\r\n    return mode === 'all' || mode === 'transparentOnly'\r\n  }\r\n\r\n  /**\r\n   * Returns true if the transparency mode requires using meshes of given opacity\r\n   */\r\n  export function match (mode: Mode, transparent: boolean) {\r\n    return (\r\n      mode === 'allAsOpaque' ||\r\n      mode === 'all' ||\r\n      (!transparent && mode === 'opaqueOnly') ||\r\n      (transparent && mode === 'transparentOnly')\r\n    )\r\n  }\r\n}\r\n\r\nexport namespace Geometry {\r\n  /**\r\n   * Creates a BufferGeometry with all given instances merged\r\n   * @param instances indices of the instances from the g3d to merge\r\n   * @returns a BufferGeometry\r\n   */\r\n  export function createGeometryFromInstances (g3d: G3d, instances: number[]) {\r\n    const merger = Merger.createFromInstances(g3d, instances, 'all')\r\n    return merger.toBufferGeometry()\r\n  }\r\n\r\n  /**\r\n   * Creates a BufferGeometry from a given mesh index in the g3d\r\n   * @param mesh g3d mesh index\r\n   * @param useAlpha specify to use RGB or RGBA for colors\r\n   */\r\n  export function createGeometryFromMesh (\r\n    g3d: G3d,\r\n    mesh: number,\r\n    useAlpha: boolean\r\n  ): THREE.BufferGeometry {\r\n    const colors = createVertexColors(g3d, mesh, useAlpha)\r\n\r\n    return createGeometryFromArrays(\r\n      g3d.positions.subarray(\r\n        g3d.getMeshVertexStart(mesh) * 3,\r\n        g3d.getMeshVertexEnd(mesh) * 3\r\n      ),\r\n      g3d.indices.subarray(\r\n        g3d.getMeshIndexStart(mesh),\r\n        g3d.getMeshIndexEnd(mesh)\r\n      ),\r\n      colors,\r\n      useAlpha ? 4 : 3\r\n    )\r\n  }\r\n  /**\r\n   * Expands submesh colors into vertex colors as RGB or RGBA\r\n   */\r\n  function createVertexColors (\r\n    g3d: G3d,\r\n    mesh: number,\r\n    useAlpha: boolean\r\n  ): Float32Array {\r\n    const colorSize = useAlpha ? 4 : 3\r\n    const result = new Float32Array(g3d.getMeshVertexCount(mesh) * colorSize)\r\n\r\n    const subStart = g3d.getMeshSubmeshStart(mesh)\r\n    const subEnd = g3d.getMeshSubmeshEnd(mesh)\r\n\r\n    for (let submesh = subStart; submesh < subEnd; submesh++) {\r\n      const color = g3d.getSubmeshColor(submesh)\r\n      const start = g3d.getSubmeshIndexStart(submesh)\r\n      const end = g3d.getSubmeshIndexEnd(submesh)\r\n\r\n      for (let i = start; i < end; i++) {\r\n        const v = g3d.indices[i] * colorSize\r\n        result[v] = color[0]\r\n        result[v + 1] = color[1]\r\n        result[v + 2] = color[2]\r\n        if (useAlpha) result[v + 3] = color[3]\r\n      }\r\n    }\r\n    return result\r\n  }\r\n\r\n  /**\r\n   * Helper to merge many instances/meshes from a g3d direcly into a BufferGeometry\r\n   */\r\n  export class Merger {\r\n    private _g3d: G3d\r\n    private _colorSize: number\r\n\r\n    private _meshes: number[]\r\n    private _indices: Uint32Array\r\n    private _vertices: Float32Array\r\n    private _colors: Float32Array\r\n    private _instances: number[]\r\n    private _submeshes: number[]\r\n\r\n    constructor (\r\n      g3d: G3d,\r\n      transparency: Transparency.Mode,\r\n      instances: number[],\r\n      meshes: number[],\r\n      indexCount: number,\r\n      vertexCount: number\r\n    ) {\r\n      this._g3d = g3d\r\n      this._colorSize = Transparency.requiresAlpha(transparency) ? 4 : 3\r\n      this._instances = instances\r\n      this._meshes = meshes\r\n\r\n      // allocate all memory required for merge\r\n      this._indices = new Uint32Array(indexCount)\r\n      this._vertices = new Float32Array(vertexCount * this._g3d.POSITION_SIZE)\r\n      this._colors = new Float32Array(vertexCount * this._colorSize)\r\n      this._submeshes = new Array(this._instances.length)\r\n    }\r\n\r\n    getInstances = () => this._instances\r\n    getSubmeshes = () => this._submeshes\r\n\r\n    /**\r\n     * Prepares a merge of all meshes referenced by only one instance.\r\n     */\r\n    static createFromUniqueMeshes (g3d: G3d, transparency: Transparency.Mode) {\r\n      let vertexCount = 0\r\n      let indexCount = 0\r\n      const instances = []\r\n      const meshes = []\r\n\r\n      const meshCount = g3d.getMeshCount()\r\n      for (let mesh = 0; mesh < meshCount; mesh++) {\r\n        const meshInstances = g3d.meshInstances[mesh]\r\n        if (!meshInstances || meshInstances.length !== 1) continue\r\n        if (!Transparency.match(transparency, g3d.meshTransparent[mesh])) {\r\n          continue\r\n        }\r\n\r\n        vertexCount += g3d.getMeshVertexCount(mesh)\r\n        indexCount += g3d.getMeshIndexCount(mesh)\r\n        instances.push(meshInstances[0])\r\n        meshes.push(mesh)\r\n      }\r\n      return new Merger(\r\n        g3d,\r\n        transparency,\r\n        instances,\r\n        meshes,\r\n        indexCount,\r\n        vertexCount\r\n      )\r\n    }\r\n\r\n    /**\r\n     * Prepares a merge of all meshes referenced by given instances.\r\n     */\r\n    static createFromInstances (\r\n      g3d: G3d,\r\n      instances: number[],\r\n      transparency: Transparency.Mode\r\n    ) {\r\n      let vertexCount = 0\r\n      let indexCount = 0\r\n      const instancesFiltered = []\r\n      const meshes = []\r\n      for (let i = 0; i < instances.length; i++) {\r\n        const instance = instances[i]\r\n        const mesh = g3d.instanceMeshes[instance]\r\n        if (mesh < 0) continue\r\n        if (!Transparency.match(transparency, g3d.meshTransparent[mesh])) {\r\n          continue\r\n        }\r\n\r\n        vertexCount += g3d.getMeshVertexCount(mesh)\r\n        indexCount += g3d.getMeshIndexCount(mesh)\r\n        instancesFiltered.push(instance)\r\n        meshes.push(mesh)\r\n      }\r\n\r\n      return new Merger(\r\n        g3d,\r\n        transparency,\r\n        instancesFiltered,\r\n        meshes,\r\n        indexCount,\r\n        vertexCount\r\n      )\r\n    }\r\n\r\n    /**\r\n     * Concatenates the arrays of each of the (instance,matrix) pairs into large arrays\r\n     * Vertex position is transformed with the relevent matrix at it is copied\r\n     * Index is offset to match the vertices in the concatenated vertex buffer\r\n     * Color is expanded from submehes to vertex color into a concatenated array\r\n     * Returns a BufferGeometry from the concatenated array\r\n     */\r\n    private merge () {\r\n      let index = 0\r\n      let vertex = 0\r\n      let offset = 0\r\n\r\n      // matrix and vector is reused to avoid needless allocations\r\n      const matrix = new THREE.Matrix4()\r\n      const vector = new THREE.Vector3()\r\n\r\n      for (let i = 0; i < this._instances.length; i++) {\r\n        const mesh = this._meshes[i]\r\n        const instance = this._instances[i]\r\n        this._submeshes[i] = index\r\n\r\n        // Copy all indices to merge array\r\n        const indexStart = this._g3d.getMeshIndexStart(mesh)\r\n        const indexEnd = this._g3d.getMeshIndexEnd(mesh)\r\n        for (let i = indexStart; i < indexEnd; i++) {\r\n          this._indices[index++] = this._g3d.indices[i] + offset\r\n        }\r\n\r\n        // Copy all colors to merged array\r\n        const subStart = this._g3d.getMeshSubmeshStart(mesh)\r\n        const subEnd = this._g3d.getMeshSubmeshEnd(mesh)\r\n        for (let sub = subStart; sub < subEnd; sub++) {\r\n          const startIndex = this._g3d.getSubmeshIndexStart(sub)\r\n          const endIndex = this._g3d.getSubmeshIndexEnd(sub)\r\n\r\n          const subColor = this._g3d.getSubmeshColor(sub)\r\n          for (let i = startIndex; i < endIndex; i++) {\r\n            const v = (this._g3d.indices[i] + offset) * this._colorSize\r\n            this._colors[v] = subColor[0]\r\n            this._colors[v + 1] = subColor[1]\r\n            this._colors[v + 2] = subColor[2]\r\n            if (this._colorSize > 3) {\r\n              this._colors[v + 3] = subColor[3]\r\n            }\r\n          }\r\n        }\r\n\r\n        // Apply Matrices and copy vertices to merged array\r\n        getInstanceMatrix(this._g3d, instance, matrix)\r\n        const vertexStart = this._g3d.getMeshVertexStart(mesh)\r\n        const vertexEnd = this._g3d.getMeshVertexEnd(mesh)\r\n\r\n        for (let p = vertexStart; p < vertexEnd; p++) {\r\n          vector.fromArray(this._g3d.positions, p * this._g3d.POSITION_SIZE)\r\n          vector.applyMatrix4(matrix)\r\n          vector.toArray(this._vertices, vertex)\r\n\r\n          vertex += this._g3d.POSITION_SIZE\r\n        }\r\n\r\n        // Keep offset for next mesh\r\n        offset += vertexEnd - vertexStart\r\n      }\r\n    }\r\n\r\n    /**\r\n     * Runs the merge process and return the resulting BufferGeometry\r\n     */\r\n    toBufferGeometry () {\r\n      this.merge()\r\n\r\n      const geometry = createGeometryFromArrays(\r\n        this._vertices,\r\n        this._indices,\r\n        this._colors,\r\n        this._colorSize\r\n      )\r\n      return geometry\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Creates a BufferGeometry from given geometry data arrays\r\n   * @param vertices vertex data with 3 number per vertex (XYZ)\r\n   * @param indices index data with 3 indices per face\r\n   * @param vertexColors color data with 3 or 4 number per vertex. RBG or RGBA\r\n   * @param colorSize specify whether to treat colors as RGB or RGBA\r\n   * @returns a BufferGeometry\r\n   */\r\n  export function createGeometryFromArrays (\r\n    vertices: Float32Array,\r\n    indices: Uint32Array,\r\n    vertexColors: Float32Array | undefined = undefined,\r\n    colorSize: number = 3\r\n  ): THREE.BufferGeometry {\r\n    const geometry = new THREE.BufferGeometry()\r\n\r\n    // Vertices\r\n    geometry.setAttribute('position', new THREE.BufferAttribute(vertices, 3))\r\n\r\n    // Indices\r\n    geometry.setIndex(new THREE.Uint32BufferAttribute(indices, 1))\r\n\r\n    // Colors with alpha if transparent\r\n    if (vertexColors) {\r\n      geometry.setAttribute(\r\n        'color',\r\n        new THREE.BufferAttribute(vertexColors, colorSize)\r\n      )\r\n    }\r\n\r\n    return geometry\r\n  }\r\n\r\n  /**\r\n   * Returns a THREE.Matrix4 from the g3d for given instance\r\n   * @param instance g3d instance index\r\n   * @param target matrix where the data will be copied, a new matrix will be created if none provided.\r\n   */\r\n  export function getInstanceMatrix (\r\n    g3d: G3d,\r\n    instance: number,\r\n    target: THREE.Matrix4 = new THREE.Matrix4()\r\n  ): THREE.Matrix4 {\r\n    const matrixAsArray = g3d.getInstanceMatrix(instance)\r\n    target.fromArray(matrixAsArray)\r\n    return target\r\n  }\r\n}\r\n","/**\r\n * @module vim-loader\r\n */\r\n\r\nimport * as THREE from 'three'\r\n\r\nexport namespace Materials {\r\n  /**\r\n   * Defines the materials to be used by the vim loader and allows for material injection.\r\n   */\r\n  export class Library {\r\n    opaque: THREE.Material\r\n    transparent: THREE.Material | undefined\r\n    wireframe: THREE.LineBasicMaterial | undefined\r\n\r\n    constructor (\r\n      opaque?: THREE.Material,\r\n      transparent?: THREE.Material,\r\n      wireframe?: THREE.LineBasicMaterial\r\n    ) {\r\n      this.opaque = opaque ?? createOpaque()\r\n      this.transparent = transparent ?? createTransparent()\r\n      this.wireframe = wireframe ?? createWireframe()\r\n    }\r\n\r\n    dispose () {\r\n      this.opaque.dispose()\r\n      this.transparent.dispose()\r\n      this.wireframe.dispose()\r\n\r\n      this.opaque = undefined\r\n      this.transparent = undefined\r\n      this.wireframe = undefined\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Creates a non-custom instance of phong material as used by the vim loader\r\n   * @returns a THREE.MeshPhongMaterial\r\n   */\r\n  export function createBase () {\r\n    return new THREE.MeshPhongMaterial({\r\n      color: 0x999999,\r\n      vertexColors: true,\r\n      flatShading: true,\r\n      side: THREE.DoubleSide,\r\n      shininess: 70\r\n    })\r\n  }\r\n\r\n  /**\r\n   * Creates a new instance of the default opaque material used by the vim-loader\r\n   * @returns a THREE.MeshPhongMaterial\r\n   */\r\n  export function createOpaque () {\r\n    const mat = createBase()\r\n    patchMaterial(mat)\r\n    return mat\r\n  }\r\n\r\n  /**\r\n   * Creates a new instance of the default loader transparent material\r\n   * @returns a THREE.MeshPhongMaterial\r\n   */\r\n  export function createTransparent () {\r\n    const mat = createBase()\r\n    mat.transparent = true\r\n    patchMaterial(mat)\r\n    return mat\r\n  }\r\n\r\n  /**\r\n   * Adds feature to default three material to support color change.\r\n   * Developed and tested for Phong material, but might work for other materials.\r\n   */\r\n  export function patchMaterial (material: THREE.Material) {\r\n    material.onBeforeCompile = (shader) => {\r\n      patchShader(shader)\r\n      material.userData.shader = shader\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Patches phong shader to be able to control when lighting should be applied to resulting color.\r\n   * Instanced meshes ignore light when InstanceColor is defined\r\n   * Instanced meshes ignore vertex color when instance attribute useVertexColor is 0\r\n   * Regular meshes ignore light in favor of vertex color when uv.y = 0\r\n   */\r\n  export function patchShader (shader: THREE.Shader) {\r\n    shader.vertexShader = shader.vertexShader\r\n      // Adding declarations for attributes and varying for visibility and coloring.\r\n      .replace(\r\n        '#include <color_pars_vertex>',\r\n        `\r\n        #include <color_pars_vertex>\r\n        \r\n        // COLORING\r\n\r\n        // attribute for color override\r\n        // merged meshes use it as vertex attribute\r\n        // instanced meshes use it as an instance attribute\r\n        attribute float colored;\r\n\r\n        // There seems to be an issue where setting mehs.instanceColor\r\n        // doesn't properly set USE_INSTANCING_COLOR\r\n        // so we always use it as a fix\r\n        #ifndef USE_INSTANCING_COLOR\r\n        attribute vec3 instanceColor;\r\n        #endif\r\n\r\n        // Passed to fragment to ignore phong model\r\n        varying float vColored;\r\n        \r\n        // VISIBILITY\r\n\r\n        // Instance or vertex attribute to hide objects \r\n        #ifdef USE_INSTANCING\r\n          attribute float ignoreInstance;\r\n        #else\r\n          attribute float ignoreVertex;\r\n        #endif\r\n\r\n        // Passed to fragment to discard them\r\n        varying float vIgnore;\r\n\r\n        `\r\n      )\r\n      // Adding vertex shader logic for visility and coloring\r\n      .replace(\r\n        '#include <color_vertex>',\r\n        `\r\n          vColor = color;\r\n          vColored = colored;\r\n\r\n          // COLORING\r\n\r\n          // colored == 1 -> instance color\r\n          // colored == 0 -> vertex color\r\n          #ifdef USE_INSTANCING\r\n            vColor.xyz = colored * instanceColor.xyz + (1.0f - colored) * color.xyz;\r\n          #endif\r\n\r\n\r\n          // VISIBILITY\r\n\r\n          // Set frag ignore from instance or vertex attribute\r\n          #ifdef USE_INSTANCING\r\n            vIgnore = ignoreInstance;\r\n          #else\r\n            vIgnore = ignoreVertex;\r\n          #endif\r\n\r\n        `\r\n      )\r\n\r\n    shader.fragmentShader = shader.fragmentShader\r\n      // Adding declarations for varying defined in vertex shader\r\n      .replace(\r\n        '#include <clipping_planes_pars_fragment>',\r\n        `\r\n        #include <clipping_planes_pars_fragment>\r\n        varying float vIgnore;\r\n        varying float vColored;\r\n        `\r\n      )\r\n      // Adding fragment shader logic for visibility and coloring.\r\n      .replace(\r\n        '#include <output_fragment>',\r\n        `\r\n          // VISIBILITY\r\n          if (vIgnore > 0.0f)\r\n            discard;\r\n         \r\n          // COLORING\r\n          // vColored == 1 -> Vertex Color * light \r\n          // vColored == 0 -> Phong Color \r\n          float d = length(outgoingLight);\r\n          gl_FragColor = vec4(vColored * vColor.xyz * d + (1.0f - vColored) * outgoingLight.xyz, diffuseColor.a);\r\n        `\r\n      )\r\n    return shader\r\n  }\r\n\r\n  /**\r\n   * Creates a new instance of the default wireframe material\r\n   * @returns a THREE.LineBasicMaterial\r\n   */\r\n  export function createWireframe () {\r\n    const material = new THREE.LineBasicMaterial({\r\n      depthTest: false,\r\n      opacity: 1,\r\n      color: new THREE.Color(0x0000ff),\r\n      transparent: true\r\n    })\r\n    return material\r\n  }\r\n  let materials: Library\r\n\r\n  /**\r\n   * Get or create a singleton material library with default materials\r\n   */\r\n  export function getDefaultLibrary () {\r\n    materials = materials ?? new Library()\r\n    return materials\r\n  }\r\n\r\n  /**\r\n   * Disposes the singleton material library\r\n   */\r\n  export function dispose () {\r\n    materials.dispose()\r\n    materials = undefined\r\n  }\r\n}\r\n","/**\r\n * @module vim-loader\r\n */\r\n\r\nimport * as THREE from 'three'\r\nimport { G3d } from './g3d'\r\nimport { Geometry, Transparency } from './geometry'\r\nimport { Materials } from './materials'\r\n\r\nexport namespace Mesh {\r\n  /**\r\n   * Builds meshes from the g3d and BufferGeometry\r\n   * Allows to reuse the same material for all new built meshes\r\n   */\r\n  export class Builder {\r\n    materials: Materials.Library\r\n\r\n    constructor (materials: Materials.Library = undefined) {\r\n      this.materials = materials ?? Materials.getDefaultLibrary()\r\n    }\r\n\r\n    /**\r\n     * Creates Instanced Meshes from the g3d data\r\n     * @param transparency Specify wheter color is RBG or RGBA and whether material is opaque or transparent\r\n     * @param instances instance indices from the g3d for which meshes will be created.\r\n     *  If undefined, all multireferenced meshes will be created.\r\n     * @returns an array of THREE.InstancedMesh\r\n     */\r\n    createInstancedMeshes (\r\n      g3d: G3d,\r\n      transparency: Transparency.Mode,\r\n      instances?: number[]\r\n    ): THREE.InstancedMesh[] {\r\n      const result: THREE.InstancedMesh[] = []\r\n      const set = instances ? new Set(instances) : undefined\r\n      for (let mesh = 0; mesh < g3d.getMeshCount(); mesh++) {\r\n        let meshInstances = g3d.meshInstances[mesh]\r\n        if (!meshInstances) continue\r\n        meshInstances = set\r\n          ? meshInstances.filter((i) => set.has(i))\r\n          : meshInstances\r\n        if (meshInstances.length <= 1) continue\r\n        if (!Transparency.match(transparency, g3d.meshTransparent[mesh])) {\r\n          continue\r\n        }\r\n\r\n        const useAlpha =\r\n          Transparency.requiresAlpha(transparency) && g3d.meshTransparent[mesh]\r\n        const geometry = Geometry.createGeometryFromMesh(g3d, mesh, useAlpha)\r\n        const resultMesh = this.createInstancedMesh(\r\n          geometry,\r\n          g3d,\r\n          meshInstances,\r\n          useAlpha\r\n        )\r\n\r\n        result.push(resultMesh)\r\n      }\r\n\r\n      return result\r\n    }\r\n\r\n    /**\r\n     * Creates a InstancedMesh from g3d data and given instance indices\r\n     * @param geometry Geometry to use in the mesh\r\n     * @param instances Instance indices for which matrices will be applied to the mesh\r\n     * @param useAlpha Specify whether to use RGB or RGBA\r\n     * @returns a THREE.InstancedMesh\r\n     */\r\n    createInstancedMesh (\r\n      geometry: THREE.BufferGeometry,\r\n      g3d: G3d,\r\n      instances: number[],\r\n      useAlpha: boolean\r\n    ) {\r\n      const material = useAlpha\r\n        ? this.materials.transparent\r\n        : this.materials.opaque\r\n\r\n      const result = new THREE.InstancedMesh(\r\n        geometry,\r\n        material,\r\n        instances.length\r\n      )\r\n\r\n      for (let i = 0; i < instances.length; i++) {\r\n        const matrix = Geometry.getInstanceMatrix(g3d, instances[i])\r\n        result.setMatrixAt(i, matrix)\r\n      }\r\n      result.userData.instances = instances\r\n      return result\r\n    }\r\n\r\n    /**\r\n     * Create a merged mesh from g3d instance indices\r\n     * @param transparency Specify wheter color is RBG or RGBA and whether material is opaque or transparent\r\n     * @param instances g3d instance indices to be included in the merged mesh. All mergeable meshes if undefined.\r\n     * @returns a THREE.Mesh\r\n     */\r\n    createMergedMesh (\r\n      g3d: G3d,\r\n      transparency: Transparency.Mode,\r\n      instances?: number[]\r\n    ): THREE.Mesh {\r\n      const merger = instances\r\n        ? Geometry.Merger.createFromInstances(g3d, instances, transparency)\r\n        : Geometry.Merger.createFromUniqueMeshes(g3d, transparency)\r\n\r\n      const geometry = merger.toBufferGeometry()\r\n      const material = Transparency.requiresAlpha(transparency)\r\n        ? this.materials.transparent\r\n        : this.materials.opaque\r\n\r\n      const mesh = new THREE.Mesh(geometry, material)\r\n      mesh.userData.merged = true\r\n      mesh.userData.instances = merger.getInstances()\r\n      mesh.userData.submeshes = merger.getSubmeshes()\r\n\r\n      return mesh\r\n    }\r\n\r\n    /**\r\n     * Create a wireframe mesh from g3d instance indices\r\n     * @param instances g3d instance indices to be included in the merged mesh. All mergeable meshes if undefined.\r\n     * @returns a THREE.Mesh\r\n     */\r\n    createWireframe (g3d: G3d, instances: number[]) {\r\n      const geometry = Geometry.createGeometryFromInstances(g3d, instances)\r\n      const wireframe = new THREE.WireframeGeometry(geometry)\r\n      return new THREE.LineSegments(wireframe, this.materials.wireframe)\r\n    }\r\n  }\r\n\r\n  let defaultBuilder: Builder\r\n  export function getDefaultBuilder () {\r\n    return defaultBuilder ?? (defaultBuilder = new Builder())\r\n  }\r\n\r\n  export function dispose () {\r\n    defaultBuilder = undefined\r\n  }\r\n}\r\n","/**\r\n * @module vim-loader\r\n */\r\n\r\nimport * as THREE from 'three'\r\nimport { G3d } from './g3d'\r\nimport { Transparency } from './geometry'\r\nimport { Mesh } from './mesh'\r\nimport { Vim } from './vim'\r\n\r\n/**\r\n * A Scene regroups many THREE.Meshes\r\n * It keep tracks of the global bounding box as Meshes are added\r\n * It keeps a map from g3d instance indices to THREE.Mesh and vice versa\r\n */\r\nexport class Scene {\r\n  meshes: THREE.Mesh[] = []\r\n  boundingBox: THREE.Box3 = new THREE.Box3()\r\n  private _instanceToThreeMesh: Map<number, [THREE.Mesh, number]> = new Map()\r\n  private _threeMeshIdToInstances: Map<number, number[]> = new Map()\r\n\r\n  /**\r\n   * Returns the THREE.Mesh in which this instance is represented along with index\r\n   * For merged mesh, index refers to submesh index\r\n   * For instanced mesh, index refers to instance index.\r\n   */\r\n  getMeshFromInstance (instance: number) {\r\n    return this._instanceToThreeMesh.has(instance)\r\n      ? this._instanceToThreeMesh.get(instance)\r\n      : []\r\n  }\r\n\r\n  /**\r\n   * Returns the index of the g3d instance that from which this mesh instance was created\r\n   * @param mesh a mesh created by the vim loader\r\n   * @param index if merged mesh the index into the merged mesh, if instance mesh the instance index.\r\n   * @returns a g3d instance index.\r\n   */\r\n  getInstanceFromMesh (mesh: THREE.Mesh, index: number): number {\r\n    if (!mesh || index < 0) return -1\r\n    const instances = this._threeMeshIdToInstances.get(mesh.id)\r\n    if (!instances) return -1\r\n    return instances[index]\r\n  }\r\n\r\n  /**\r\n   * Applies given transform matrix to all THREE.Meshes and bounding box.\r\n   */\r\n  applyMatrix4 (matrix: THREE.Matrix4) {\r\n    for (let m = 0; m < this.meshes.length; m++) {\r\n      this.meshes[m].matrixAutoUpdate = false\r\n      this.meshes[m].matrix.copy(matrix)\r\n    }\r\n    this.boundingBox.applyMatrix4(matrix)\r\n  }\r\n\r\n  /**\r\n   * Sets vim index for this scene and all its THREE.Meshes.\r\n   */\r\n  setVim (vim: Vim) {\r\n    for (let m = 0; m < this.meshes.length; m++) {\r\n      this.meshes[m].userData.vim = vim\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Add an instanced mesh to the Scene and recomputes fields as needed.\r\n   * @param mesh Is expected to have userData.instances = number[]\r\n   * where numbers are the indices of the g3d instances that went into creating the mesh\r\n   */\r\n  addMergedMesh (mesh: THREE.Mesh) {\r\n    const instances = mesh.userData.instances\r\n    if (!instances) {\r\n      throw new Error('Expected mesh to have userdata instances : number[]')\r\n    }\r\n\r\n    for (let i = 0; i < instances.length; i++) {\r\n      this._instanceToThreeMesh.set(instances[i], [mesh, i])\r\n    }\r\n\r\n    mesh.geometry.computeBoundingBox()\r\n    const box = mesh.geometry.boundingBox!\r\n    this.boundingBox = this.boundingBox?.union(box) ?? box.clone()\r\n\r\n    this._threeMeshIdToInstances.set(mesh.id, instances)\r\n    this.meshes.push(mesh)\r\n    return this\r\n  }\r\n\r\n  /**\r\n   * Add an instanced mesh to the Scene and recomputes fields as needed.\r\n   * @param mesh Is expected to have userData.instances = number[]\r\n   * where numbers are the indices of the g3d instances that went into creating the mesh\r\n   */\r\n  addInstancedMesh (mesh: THREE.InstancedMesh) {\r\n    this.registerInstancedMesh(mesh)\r\n    this.meshes.push(mesh)\r\n    return this\r\n  }\r\n\r\n  /**\r\n   * Creates a Scene from given mesh array. Keeps a reference to the array.\r\n   * @param meshes members are expected to have userData.instances = number[]\r\n   * where numbers are the indices of the g3d instances that went into creating each mesh\r\n   */\r\n  static createFromInstancedMeshes (meshes: THREE.InstancedMesh[]) {\r\n    const scene = new Scene()\r\n\r\n    for (let m = 0; m < meshes.length; m++) {\r\n      scene.registerInstancedMesh(meshes[m])\r\n    }\r\n    scene.meshes = meshes\r\n    return scene\r\n  }\r\n\r\n  private registerInstancedMesh (mesh: THREE.InstancedMesh) {\r\n    const instances = mesh.userData.instances as number[]\r\n    if (!instances || instances.length === 0) {\r\n      throw new Error(\r\n        'Expected mesh to have userdata instances : number[] with at least one member'\r\n      )\r\n    }\r\n    if (mesh.count === 0) {\r\n      throw new Error('Expected mesh to have at least one instance')\r\n    }\r\n\r\n    for (let i = 0; i < instances.length; i++) {\r\n      this._instanceToThreeMesh.set(instances[i], [mesh, i])\r\n    }\r\n    const box = this.computeIntancedMeshBoundingBox(mesh)!\r\n    this.boundingBox = this.boundingBox?.union(box) ?? box.clone()\r\n    this._threeMeshIdToInstances.set(mesh.id, instances)\r\n  }\r\n\r\n  /**\r\n   * Adds the content of other Scene to this Scene and recomputes fields as needed.\r\n   */\r\n  merge (other: Scene) {\r\n    other.meshes.forEach((mesh) => this.meshes.push(mesh))\r\n    other._instanceToThreeMesh.forEach((value, key) => {\r\n      this._instanceToThreeMesh.set(key, value)\r\n    })\r\n    other._threeMeshIdToInstances.forEach((value, key) => {\r\n      this._threeMeshIdToInstances.set(key, value)\r\n    })\r\n    this.boundingBox =\r\n      this.boundingBox?.union(other.boundingBox) ?? other.boundingBox.clone()\r\n    return this\r\n  }\r\n\r\n  dispose () {\r\n    for (let i = 0; i < this.meshes.length; i++) {\r\n      this.meshes[i].geometry.dispose()\r\n    }\r\n    this.meshes.length = 0\r\n    this._instanceToThreeMesh.clear()\r\n    this._threeMeshIdToInstances.clear()\r\n  }\r\n\r\n  /**\r\n   * Computes the bounding box around all instances in world position of an InstancedMesh.\r\n   */\r\n  private computeIntancedMeshBoundingBox (mesh: THREE.InstancedMesh) {\r\n    let result\r\n    const matrix = new THREE.Matrix4()\r\n    const box = new THREE.Box3()\r\n    mesh.geometry.computeBoundingBox()\r\n    for (let i = 0; i < mesh.count; i++) {\r\n      mesh.getMatrixAt(i, matrix)\r\n      box.copy(mesh.geometry.boundingBox!)\r\n      box.applyMatrix4(matrix)\r\n      result = result ? result.union(box) : box.clone()\r\n    }\r\n    return result\r\n  }\r\n\r\n  /**\r\n   * Creates a new Scene from a g3d by merging mergeble meshes and instancing instantiable meshes\r\n   * @param transparency Specify whether color is RBG or RGBA and whether material is opaque or transparent\r\n   * @param instances g3d instance indices to be included in the Scene. All if undefined.\r\n   */\r\n  static createFromG3d (\r\n    g3d: G3d,\r\n    transparency: Transparency.Mode = 'all',\r\n    instances: number[] | undefined = undefined\r\n  ): Scene {\r\n    const scene = new Scene()\r\n\r\n    // Add shared geometry\r\n    const shared = Scene.createFromInstanciableMeshes(\r\n      g3d,\r\n      transparency,\r\n      instances\r\n    )\r\n    scene.merge(shared)\r\n\r\n    // Add opaque geometry\r\n    if (transparency !== 'transparentOnly') {\r\n      const opaque = Scene.createFromMergeableMeshes(\r\n        g3d,\r\n        transparency === 'allAsOpaque' ? 'allAsOpaque' : 'opaqueOnly',\r\n        instances\r\n      )\r\n      scene.merge(opaque)\r\n    }\r\n\r\n    // Add transparent geometry\r\n    if (Transparency.requiresAlpha(transparency)) {\r\n      const transparent = Scene.createFromMergeableMeshes(\r\n        g3d,\r\n        'transparentOnly',\r\n        instances\r\n      )\r\n      scene.merge(transparent)\r\n    }\r\n\r\n    return scene\r\n  }\r\n\r\n  /**\r\n   * Creates a Scene from instantiable meshes from the g3d\r\n   * @param transparency Specify whether color is RBG or RGBA and whether material is opaque or transparent\r\n   * @param instances g3d instance indices to be included in the Scene. All if undefined.\r\n   * @param builder optional builder to reuse the same materials\r\n   */\r\n  static createFromInstanciableMeshes (\r\n    g3d: G3d,\r\n    transparency: Transparency.Mode,\r\n    instances: number[] | undefined = undefined,\r\n    builder: Mesh.Builder = Mesh.getDefaultBuilder()\r\n  ) {\r\n    const meshes = builder.createInstancedMeshes(g3d, transparency, instances)\r\n    return Scene.createFromInstancedMeshes(meshes)\r\n  }\r\n\r\n  // g3d instance indices to be included in the merged mesh. All mergeable meshes if undefined.\r\n  /**\r\n   * Creates a Scene from mergeable meshes from the g3d\r\n   * @param transparency Specify whether color is RBG or RGBA and whether material is opaque or transparent\r\n   * @param instances g3d instance indices to be included in the Scene. All if undefined.\r\n   * @param builder optional builder to reuse the same materials\r\n   */\r\n  static createFromMergeableMeshes (\r\n    g3d: G3d,\r\n    transparency: Transparency.Mode,\r\n    instances: number[] | undefined = undefined,\r\n    builder: Mesh.Builder = Mesh.getDefaultBuilder()\r\n  ) {\r\n    const mesh = builder.createMergedMesh(g3d, transparency, instances)\r\n    return new Scene().addMergedMesh(mesh)\r\n  }\r\n}\r\n","import * as THREE from 'three'\r\nimport { Scene } from '../vim-loader/scene'\r\n\r\nexport class RenderScene {\r\n  scene: THREE.Scene\r\n\r\n  // state\r\n  private _scenes: Scene[] = []\r\n  private _boundingBox: THREE.Box3\r\n\r\n  constructor () {\r\n    this.scene = new THREE.Scene()\r\n  }\r\n\r\n  /**\r\n   * Returns the bounding sphere encompasing all rendererd objects.\r\n   * @param target sphere in which to copy result, a new instance is created if undefined.\r\n   */\r\n  getBoundingSphere (target: THREE.Sphere = new THREE.Sphere()) {\r\n    return this._boundingBox?.getBoundingSphere(target)\r\n  }\r\n\r\n  /**\r\n   * Returns the bounding box encompasing all rendererd objects.\r\n   * @param target box in which to copy result, a new instance is created if undefined.\r\n   */\r\n  getBoundingBox (target: THREE.Box3 = new THREE.Box3()) {\r\n    return target?.copy(this._boundingBox)\r\n  }\r\n\r\n  /**\r\n   * Add object to be rendered\r\n   */\r\n  add (target: Scene | THREE.Object3D) {\r\n    if (target instanceof Scene) {\r\n      this.addScene(target)\r\n    } else {\r\n      this.scene.add(target)\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Remove object from rendering\r\n   */\r\n  remove (target: Scene | THREE.Object3D) {\r\n    if (target instanceof Scene) {\r\n      this.removeScene(target)\r\n    } else {\r\n      this.scene.remove(target)\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Removes all rendered objects\r\n   */\r\n  clear () {\r\n    this.scene.clear()\r\n    this._boundingBox = undefined\r\n  }\r\n\r\n  private addScene (scene: Scene) {\r\n    this._scenes.push(scene)\r\n    scene.meshes.forEach((m) => {\r\n      this.scene.add(m)\r\n    })\r\n\r\n    // Recompute bounding box\r\n    this._boundingBox = this._boundingBox\r\n      ? this._boundingBox.union(scene.boundingBox)\r\n      : scene.boundingBox.clone()\r\n  }\r\n\r\n  private removeScene (scene: Scene) {\r\n    // Remove from array\r\n    this._scenes = this._scenes.filter((f) => f !== scene)\r\n\r\n    // Remove all meshes from three scene\r\n    for (let i = 0; i < scene.meshes.length; i++) {\r\n      this.scene.remove(scene.meshes[i])\r\n    }\r\n\r\n    // Recompute bounding box\r\n    this._boundingBox =\r\n      this._scenes.length > 0\r\n        ? this._scenes\r\n          .map((s) => s.boundingBox.clone())\r\n          .reduce((b1, b2) => b1.union(b2))\r\n        : undefined\r\n  }\r\n}\r\n","import { ViewerSettings } from './viewerSettings'\r\n\r\nexport class Viewport {\r\n  canvas: HTMLCanvasElement\r\n  private _unregisterResize: Function\r\n  private _ownedCanvas: boolean\r\n  private _resizeCallbacks: (() => void)[] = []\r\n\r\n  constructor (settings: ViewerSettings) {\r\n    const [canvas, owned] = Viewport.getOrCreateCanvas(settings.getCanvasId())\r\n    this.canvas = canvas\r\n    this._ownedCanvas = owned\r\n    this.registerResize(settings.getCanvasResizeDelay())\r\n  }\r\n\r\n  /**\r\n   * Either returns html canvas at provided Id or creates a canvas at root level\r\n   */\r\n  private static getOrCreateCanvas (\r\n    canvasId?: string\r\n  ): [HTMLCanvasElement, boolean] {\r\n    let canvas = canvasId\r\n      ? (document.getElementById(canvasId) as HTMLCanvasElement)\r\n      : undefined\r\n\r\n    if (canvas) return [canvas, false]\r\n\r\n    canvas = document.createElement('canvas')\r\n    document.body.appendChild(canvas)\r\n    return [canvas, true]\r\n  }\r\n\r\n  dispose () {\r\n    this._unregisterResize()\r\n    this._unregisterResize = undefined\r\n\r\n    if (this._ownedCanvas) this.canvas.remove()\r\n  }\r\n\r\n  /**\r\n   * Returns the pixel size of the canvas.\r\n   */\r\n  getParentSize (): [width: number, height: number] {\r\n    return [\r\n      this.canvas.parentElement.clientWidth,\r\n      this.canvas.parentElement.clientHeight\r\n    ]\r\n  }\r\n\r\n  /**\r\n   * Returns the pixel size of the canvas.\r\n   */\r\n  getSize (): [width: number, height: number] {\r\n    return [this.canvas.clientWidth, this.canvas.clientHeight]\r\n  }\r\n\r\n  getAspectRatio () {\r\n    return (\r\n      this.canvas.parentElement.clientWidth /\r\n      this.canvas.parentElement.clientHeight\r\n    )\r\n  }\r\n\r\n  onResize (callback: () => void) {\r\n    console.log('register callbakc')\r\n    this._resizeCallbacks.push(callback)\r\n  }\r\n\r\n  /**\r\n   * Set a callback for canvas resize with debouncing\r\n   * https://stackoverflow.com/questions/5825447/javascript-event-for-canvas-resize/30688151\r\n   * @param callback code to be called\r\n   * @param timeout time after the last resize before code will be called\r\n   */\r\n  private registerResize (timeout) {\r\n    let timerId\r\n    const onResize = () => {\r\n      if (timerId !== undefined) {\r\n        clearTimeout(timerId)\r\n        timerId = undefined\r\n      }\r\n      timerId = setTimeout(() => {\r\n        timerId = undefined\r\n        this._resizeCallbacks.forEach((cb) => cb())\r\n      }, timeout)\r\n    }\r\n    window.addEventListener('resize', onResize)\r\n    this._unregisterResize = () =>\r\n      window.removeEventListener('resize', onResize)\r\n  }\r\n}\r\n","/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\nexport default freeGlobal;\n","import freeGlobal from './_freeGlobal.js';\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\nexport default root;\n","import root from './_root.js';\n\n/** Built-in value references. */\nvar Symbol = root.Symbol;\n\nexport default Symbol;\n","import Symbol from './_Symbol.js';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\nfunction getRawTag(value) {\n  var isOwn = hasOwnProperty.call(value, symToStringTag),\n      tag = value[symToStringTag];\n\n  try {\n    value[symToStringTag] = undefined;\n    var unmasked = true;\n  } catch (e) {}\n\n  var result = nativeObjectToString.call(value);\n  if (unmasked) {\n    if (isOwn) {\n      value[symToStringTag] = tag;\n    } else {\n      delete value[symToStringTag];\n    }\n  }\n  return result;\n}\n\nexport default getRawTag;\n","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\nfunction objectToString(value) {\n  return nativeObjectToString.call(value);\n}\n\nexport default objectToString;\n","import Symbol from './_Symbol.js';\nimport getRawTag from './_getRawTag.js';\nimport objectToString from './_objectToString.js';\n\n/** `Object#toString` result references. */\nvar nullTag = '[object Null]',\n    undefinedTag = '[object Undefined]';\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n  if (value == null) {\n    return value === undefined ? undefinedTag : nullTag;\n  }\n  return (symToStringTag && symToStringTag in Object(value))\n    ? getRawTag(value)\n    : objectToString(value);\n}\n\nexport default baseGetTag;\n","/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return value != null && typeof value == 'object';\n}\n\nexport default isObjectLike;\n","/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\n\nexport default isArray;\n","/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return value != null && (type == 'object' || type == 'function');\n}\n\nexport default isObject;\n","import baseGetTag from './_baseGetTag.js';\nimport isObject from './isObject.js';\n\n/** `Object#toString` result references. */\nvar asyncTag = '[object AsyncFunction]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    proxyTag = '[object Proxy]';\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  if (!isObject(value)) {\n    return false;\n  }\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 9 which returns 'object' for typed arrays and other constructors.\n  var tag = baseGetTag(value);\n  return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;\n}\n\nexport default isFunction;\n","import root from './_root.js';\n\n/** Used to detect overreaching core-js shims. */\nvar coreJsData = root['__core-js_shared__'];\n\nexport default coreJsData;\n","import coreJsData from './_coreJsData.js';\n\n/** Used to detect methods masquerading as native. */\nvar maskSrcKey = (function() {\n  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n  return uid ? ('Symbol(src)_1.' + uid) : '';\n}());\n\n/**\n * Checks if `func` has its source masked.\n *\n * @private\n * @param {Function} func The function to check.\n * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n */\nfunction isMasked(func) {\n  return !!maskSrcKey && (maskSrcKey in func);\n}\n\nexport default isMasked;\n","/** Used for built-in method references. */\nvar funcProto = Function.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/**\n * Converts `func` to its source code.\n *\n * @private\n * @param {Function} func The function to convert.\n * @returns {string} Returns the source code.\n */\nfunction toSource(func) {\n  if (func != null) {\n    try {\n      return funcToString.call(func);\n    } catch (e) {}\n    try {\n      return (func + '');\n    } catch (e) {}\n  }\n  return '';\n}\n\nexport default toSource;\n","import isFunction from './isFunction.js';\nimport isMasked from './_isMasked.js';\nimport isObject from './isObject.js';\nimport toSource from './_toSource.js';\n\n/**\n * Used to match `RegExp`\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n */\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g;\n\n/** Used to detect host constructors (Safari). */\nvar reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n/** Used for built-in method references. */\nvar funcProto = Function.prototype,\n    objectProto = Object.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Used to detect if a method is native. */\nvar reIsNative = RegExp('^' +\n  funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n  .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n);\n\n/**\n * The base implementation of `_.isNative` without bad shim checks.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a native function,\n *  else `false`.\n */\nfunction baseIsNative(value) {\n  if (!isObject(value) || isMasked(value)) {\n    return false;\n  }\n  var pattern = isFunction(value) ? reIsNative : reIsHostCtor;\n  return pattern.test(toSource(value));\n}\n\nexport default baseIsNative;\n","/**\n * Gets the value at `key` of `object`.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {string} key The key of the property to get.\n * @returns {*} Returns the property value.\n */\nfunction getValue(object, key) {\n  return object == null ? undefined : object[key];\n}\n\nexport default getValue;\n","import baseIsNative from './_baseIsNative.js';\nimport getValue from './_getValue.js';\n\n/**\n * Gets the native function at `key` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the method to get.\n * @returns {*} Returns the function if it's native, else `undefined`.\n */\nfunction getNative(object, key) {\n  var value = getValue(object, key);\n  return baseIsNative(value) ? value : undefined;\n}\n\nexport default getNative;\n","import getNative from './_getNative.js';\nimport root from './_root.js';\n\n/* Built-in method references that are verified to be native. */\nvar WeakMap = getNative(root, 'WeakMap');\n\nexport default WeakMap;\n","import isObject from './isObject.js';\n\n/** Built-in value references. */\nvar objectCreate = Object.create;\n\n/**\n * The base implementation of `_.create` without support for assigning\n * properties to the created object.\n *\n * @private\n * @param {Object} proto The object to inherit from.\n * @returns {Object} Returns the new object.\n */\nvar baseCreate = (function() {\n  function object() {}\n  return function(proto) {\n    if (!isObject(proto)) {\n      return {};\n    }\n    if (objectCreate) {\n      return objectCreate(proto);\n    }\n    object.prototype = proto;\n    var result = new object;\n    object.prototype = undefined;\n    return result;\n  };\n}());\n\nexport default baseCreate;\n","/**\n * Copies the values of `source` to `array`.\n *\n * @private\n * @param {Array} source The array to copy values from.\n * @param {Array} [array=[]] The array to copy values to.\n * @returns {Array} Returns `array`.\n */\nfunction copyArray(source, array) {\n  var index = -1,\n      length = source.length;\n\n  array || (array = Array(length));\n  while (++index < length) {\n    array[index] = source[index];\n  }\n  return array;\n}\n\nexport default copyArray;\n","import getNative from './_getNative.js';\n\nvar defineProperty = (function() {\n  try {\n    var func = getNative(Object, 'defineProperty');\n    func({}, '', {});\n    return func;\n  } catch (e) {}\n}());\n\nexport default defineProperty;\n","/**\n * A specialized version of `_.forEach` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns `array`.\n */\nfunction arrayEach(array, iteratee) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    if (iteratee(array[index], index, array) === false) {\n      break;\n    }\n  }\n  return array;\n}\n\nexport default arrayEach;\n","/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/** Used to detect unsigned integer values. */\nvar reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n/**\n * Checks if `value` is a valid array-like index.\n *\n * @private\n * @param {*} value The value to check.\n * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n */\nfunction isIndex(value, length) {\n  var type = typeof value;\n  length = length == null ? MAX_SAFE_INTEGER : length;\n\n  return !!length &&\n    (type == 'number' ||\n      (type != 'symbol' && reIsUint.test(value))) &&\n        (value > -1 && value % 1 == 0 && value < length);\n}\n\nexport default isIndex;\n","import defineProperty from './_defineProperty.js';\n\n/**\n * The base implementation of `assignValue` and `assignMergeValue` without\n * value checks.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\nfunction baseAssignValue(object, key, value) {\n  if (key == '__proto__' && defineProperty) {\n    defineProperty(object, key, {\n      'configurable': true,\n      'enumerable': true,\n      'value': value,\n      'writable': true\n    });\n  } else {\n    object[key] = value;\n  }\n}\n\nexport default baseAssignValue;\n","/**\n * Performs a\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * comparison between two values to determine if they are equivalent.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.eq(object, object);\n * // => true\n *\n * _.eq(object, other);\n * // => false\n *\n * _.eq('a', 'a');\n * // => true\n *\n * _.eq('a', Object('a'));\n * // => false\n *\n * _.eq(NaN, NaN);\n * // => true\n */\nfunction eq(value, other) {\n  return value === other || (value !== value && other !== other);\n}\n\nexport default eq;\n","import baseAssignValue from './_baseAssignValue.js';\nimport eq from './eq.js';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Assigns `value` to `key` of `object` if the existing value is not equivalent\n * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * for equality comparisons.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\nfunction assignValue(object, key, value) {\n  var objValue = object[key];\n  if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||\n      (value === undefined && !(key in object))) {\n    baseAssignValue(object, key, value);\n  }\n}\n\nexport default assignValue;\n","import assignValue from './_assignValue.js';\nimport baseAssignValue from './_baseAssignValue.js';\n\n/**\n * Copies properties of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy properties from.\n * @param {Array} props The property identifiers to copy.\n * @param {Object} [object={}] The object to copy properties to.\n * @param {Function} [customizer] The function to customize copied values.\n * @returns {Object} Returns `object`.\n */\nfunction copyObject(source, props, object, customizer) {\n  var isNew = !object;\n  object || (object = {});\n\n  var index = -1,\n      length = props.length;\n\n  while (++index < length) {\n    var key = props[index];\n\n    var newValue = customizer\n      ? customizer(object[key], source[key], key, object, source)\n      : undefined;\n\n    if (newValue === undefined) {\n      newValue = source[key];\n    }\n    if (isNew) {\n      baseAssignValue(object, key, newValue);\n    } else {\n      assignValue(object, key, newValue);\n    }\n  }\n  return object;\n}\n\nexport default copyObject;\n","/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This method is loosely based on\n * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n * @example\n *\n * _.isLength(3);\n * // => true\n *\n * _.isLength(Number.MIN_VALUE);\n * // => false\n *\n * _.isLength(Infinity);\n * // => false\n *\n * _.isLength('3');\n * // => false\n */\nfunction isLength(value) {\n  return typeof value == 'number' &&\n    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\nexport default isLength;\n","import isFunction from './isFunction.js';\nimport isLength from './isLength.js';\n\n/**\n * Checks if `value` is array-like. A value is considered array-like if it's\n * not a function and has a `value.length` that's an integer greater than or\n * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n * @example\n *\n * _.isArrayLike([1, 2, 3]);\n * // => true\n *\n * _.isArrayLike(document.body.children);\n * // => true\n *\n * _.isArrayLike('abc');\n * // => true\n *\n * _.isArrayLike(_.noop);\n * // => false\n */\nfunction isArrayLike(value) {\n  return value != null && isLength(value.length) && !isFunction(value);\n}\n\nexport default isArrayLike;\n","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Checks if `value` is likely a prototype object.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n */\nfunction isPrototype(value) {\n  var Ctor = value && value.constructor,\n      proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;\n\n  return value === proto;\n}\n\nexport default isPrototype;\n","/**\n * The base implementation of `_.times` without support for iteratee shorthands\n * or max array length checks.\n *\n * @private\n * @param {number} n The number of times to invoke `iteratee`.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the array of results.\n */\nfunction baseTimes(n, iteratee) {\n  var index = -1,\n      result = Array(n);\n\n  while (++index < n) {\n    result[index] = iteratee(index);\n  }\n  return result;\n}\n\nexport default baseTimes;\n","import baseGetTag from './_baseGetTag.js';\nimport isObjectLike from './isObjectLike.js';\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]';\n\n/**\n * The base implementation of `_.isArguments`.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n */\nfunction baseIsArguments(value) {\n  return isObjectLike(value) && baseGetTag(value) == argsTag;\n}\n\nexport default baseIsArguments;\n","import baseIsArguments from './_baseIsArguments.js';\nimport isObjectLike from './isObjectLike.js';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Built-in value references. */\nvar propertyIsEnumerable = objectProto.propertyIsEnumerable;\n\n/**\n * Checks if `value` is likely an `arguments` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n *  else `false`.\n * @example\n *\n * _.isArguments(function() { return arguments; }());\n * // => true\n *\n * _.isArguments([1, 2, 3]);\n * // => false\n */\nvar isArguments = baseIsArguments(function() { return arguments; }()) ? baseIsArguments : function(value) {\n  return isObjectLike(value) && hasOwnProperty.call(value, 'callee') &&\n    !propertyIsEnumerable.call(value, 'callee');\n};\n\nexport default isArguments;\n","/**\n * This method returns `false`.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {boolean} Returns `false`.\n * @example\n *\n * _.times(2, _.stubFalse);\n * // => [false, false]\n */\nfunction stubFalse() {\n  return false;\n}\n\nexport default stubFalse;\n","import root from './_root.js';\nimport stubFalse from './stubFalse.js';\n\n/** Detect free variable `exports`. */\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/** Built-in value references. */\nvar Buffer = moduleExports ? root.Buffer : undefined;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined;\n\n/**\n * Checks if `value` is a buffer.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\n * @example\n *\n * _.isBuffer(new Buffer(2));\n * // => true\n *\n * _.isBuffer(new Uint8Array(2));\n * // => false\n */\nvar isBuffer = nativeIsBuffer || stubFalse;\n\nexport default isBuffer;\n","import baseGetTag from './_baseGetTag.js';\nimport isLength from './isLength.js';\nimport isObjectLike from './isObjectLike.js';\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    objectTag = '[object Object]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    weakMapTag = '[object WeakMap]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/** Used to identify `toStringTag` values of typed arrays. */\nvar typedArrayTags = {};\ntypedArrayTags[float32Tag] = typedArrayTags[float64Tag] =\ntypedArrayTags[int8Tag] = typedArrayTags[int16Tag] =\ntypedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =\ntypedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =\ntypedArrayTags[uint32Tag] = true;\ntypedArrayTags[argsTag] = typedArrayTags[arrayTag] =\ntypedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =\ntypedArrayTags[dataViewTag] = typedArrayTags[dateTag] =\ntypedArrayTags[errorTag] = typedArrayTags[funcTag] =\ntypedArrayTags[mapTag] = typedArrayTags[numberTag] =\ntypedArrayTags[objectTag] = typedArrayTags[regexpTag] =\ntypedArrayTags[setTag] = typedArrayTags[stringTag] =\ntypedArrayTags[weakMapTag] = false;\n\n/**\n * The base implementation of `_.isTypedArray` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n */\nfunction baseIsTypedArray(value) {\n  return isObjectLike(value) &&\n    isLength(value.length) && !!typedArrayTags[baseGetTag(value)];\n}\n\nexport default baseIsTypedArray;\n","/**\n * The base implementation of `_.unary` without support for storing metadata.\n *\n * @private\n * @param {Function} func The function to cap arguments for.\n * @returns {Function} Returns the new capped function.\n */\nfunction baseUnary(func) {\n  return function(value) {\n    return func(value);\n  };\n}\n\nexport default baseUnary;\n","import freeGlobal from './_freeGlobal.js';\n\n/** Detect free variable `exports`. */\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/** Detect free variable `process` from Node.js. */\nvar freeProcess = moduleExports && freeGlobal.process;\n\n/** Used to access faster Node.js helpers. */\nvar nodeUtil = (function() {\n  try {\n    // Use `util.types` for Node.js 10+.\n    var types = freeModule && freeModule.require && freeModule.require('util').types;\n\n    if (types) {\n      return types;\n    }\n\n    // Legacy `process.binding('util')` for Node.js < 10.\n    return freeProcess && freeProcess.binding && freeProcess.binding('util');\n  } catch (e) {}\n}());\n\nexport default nodeUtil;\n","import baseIsTypedArray from './_baseIsTypedArray.js';\nimport baseUnary from './_baseUnary.js';\nimport nodeUtil from './_nodeUtil.js';\n\n/* Node.js helper references. */\nvar nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;\n\n/**\n * Checks if `value` is classified as a typed array.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n * @example\n *\n * _.isTypedArray(new Uint8Array);\n * // => true\n *\n * _.isTypedArray([]);\n * // => false\n */\nvar isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;\n\nexport default isTypedArray;\n","import baseTimes from './_baseTimes.js';\nimport isArguments from './isArguments.js';\nimport isArray from './isArray.js';\nimport isBuffer from './isBuffer.js';\nimport isIndex from './_isIndex.js';\nimport isTypedArray from './isTypedArray.js';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Creates an array of the enumerable property names of the array-like `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @param {boolean} inherited Specify returning inherited property names.\n * @returns {Array} Returns the array of property names.\n */\nfunction arrayLikeKeys(value, inherited) {\n  var isArr = isArray(value),\n      isArg = !isArr && isArguments(value),\n      isBuff = !isArr && !isArg && isBuffer(value),\n      isType = !isArr && !isArg && !isBuff && isTypedArray(value),\n      skipIndexes = isArr || isArg || isBuff || isType,\n      result = skipIndexes ? baseTimes(value.length, String) : [],\n      length = result.length;\n\n  for (var key in value) {\n    if ((inherited || hasOwnProperty.call(value, key)) &&\n        !(skipIndexes && (\n           // Safari 9 has enumerable `arguments.length` in strict mode.\n           key == 'length' ||\n           // Node.js 0.10 has enumerable non-index properties on buffers.\n           (isBuff && (key == 'offset' || key == 'parent')) ||\n           // PhantomJS 2 has enumerable non-index properties on typed arrays.\n           (isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset')) ||\n           // Skip index properties.\n           isIndex(key, length)\n        ))) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nexport default arrayLikeKeys;\n","/**\n * Creates a unary function that invokes `func` with its argument transformed.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {Function} transform The argument transform.\n * @returns {Function} Returns the new function.\n */\nfunction overArg(func, transform) {\n  return function(arg) {\n    return func(transform(arg));\n  };\n}\n\nexport default overArg;\n","import overArg from './_overArg.js';\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeKeys = overArg(Object.keys, Object);\n\nexport default nativeKeys;\n","import isPrototype from './_isPrototype.js';\nimport nativeKeys from './_nativeKeys.js';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction baseKeys(object) {\n  if (!isPrototype(object)) {\n    return nativeKeys(object);\n  }\n  var result = [];\n  for (var key in Object(object)) {\n    if (hasOwnProperty.call(object, key) && key != 'constructor') {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nexport default baseKeys;\n","import arrayLikeKeys from './_arrayLikeKeys.js';\nimport baseKeys from './_baseKeys.js';\nimport isArrayLike from './isArrayLike.js';\n\n/**\n * Creates an array of the own enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects. See the\n * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * for more details.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keys(new Foo);\n * // => ['a', 'b'] (iteration order is not guaranteed)\n *\n * _.keys('hi');\n * // => ['0', '1']\n */\nfunction keys(object) {\n  return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);\n}\n\nexport default keys;\n","/**\n * This function is like\n * [`Object.keys`](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * except that it includes inherited enumerable properties.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction nativeKeysIn(object) {\n  var result = [];\n  if (object != null) {\n    for (var key in Object(object)) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nexport default nativeKeysIn;\n","import isObject from './isObject.js';\nimport isPrototype from './_isPrototype.js';\nimport nativeKeysIn from './_nativeKeysIn.js';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * The base implementation of `_.keysIn` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction baseKeysIn(object) {\n  if (!isObject(object)) {\n    return nativeKeysIn(object);\n  }\n  var isProto = isPrototype(object),\n      result = [];\n\n  for (var key in object) {\n    if (!(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nexport default baseKeysIn;\n","import arrayLikeKeys from './_arrayLikeKeys.js';\nimport baseKeysIn from './_baseKeysIn.js';\nimport isArrayLike from './isArrayLike.js';\n\n/**\n * Creates an array of the own and inherited enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keysIn(new Foo);\n * // => ['a', 'b', 'c'] (iteration order is not guaranteed)\n */\nfunction keysIn(object) {\n  return isArrayLike(object) ? arrayLikeKeys(object, true) : baseKeysIn(object);\n}\n\nexport default keysIn;\n","import getNative from './_getNative.js';\n\n/* Built-in method references that are verified to be native. */\nvar nativeCreate = getNative(Object, 'create');\n\nexport default nativeCreate;\n","import nativeCreate from './_nativeCreate.js';\n\n/**\n * Removes all key-value entries from the hash.\n *\n * @private\n * @name clear\n * @memberOf Hash\n */\nfunction hashClear() {\n  this.__data__ = nativeCreate ? nativeCreate(null) : {};\n  this.size = 0;\n}\n\nexport default hashClear;\n","/**\n * Removes `key` and its value from the hash.\n *\n * @private\n * @name delete\n * @memberOf Hash\n * @param {Object} hash The hash to modify.\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction hashDelete(key) {\n  var result = this.has(key) && delete this.__data__[key];\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\nexport default hashDelete;\n","import nativeCreate from './_nativeCreate.js';\n\n/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Gets the hash value for `key`.\n *\n * @private\n * @name get\n * @memberOf Hash\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction hashGet(key) {\n  var data = this.__data__;\n  if (nativeCreate) {\n    var result = data[key];\n    return result === HASH_UNDEFINED ? undefined : result;\n  }\n  return hasOwnProperty.call(data, key) ? data[key] : undefined;\n}\n\nexport default hashGet;\n","import nativeCreate from './_nativeCreate.js';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Checks if a hash value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Hash\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction hashHas(key) {\n  var data = this.__data__;\n  return nativeCreate ? (data[key] !== undefined) : hasOwnProperty.call(data, key);\n}\n\nexport default hashHas;\n","import nativeCreate from './_nativeCreate.js';\n\n/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/**\n * Sets the hash `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Hash\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the hash instance.\n */\nfunction hashSet(key, value) {\n  var data = this.__data__;\n  this.size += this.has(key) ? 0 : 1;\n  data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;\n  return this;\n}\n\nexport default hashSet;\n","import hashClear from './_hashClear.js';\nimport hashDelete from './_hashDelete.js';\nimport hashGet from './_hashGet.js';\nimport hashHas from './_hashHas.js';\nimport hashSet from './_hashSet.js';\n\n/**\n * Creates a hash object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Hash(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n// Add methods to `Hash`.\nHash.prototype.clear = hashClear;\nHash.prototype['delete'] = hashDelete;\nHash.prototype.get = hashGet;\nHash.prototype.has = hashHas;\nHash.prototype.set = hashSet;\n\nexport default Hash;\n","/**\n * Removes all key-value entries from the list cache.\n *\n * @private\n * @name clear\n * @memberOf ListCache\n */\nfunction listCacheClear() {\n  this.__data__ = [];\n  this.size = 0;\n}\n\nexport default listCacheClear;\n","import eq from './eq.js';\n\n/**\n * Gets the index at which the `key` is found in `array` of key-value pairs.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} key The key to search for.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction assocIndexOf(array, key) {\n  var length = array.length;\n  while (length--) {\n    if (eq(array[length][0], key)) {\n      return length;\n    }\n  }\n  return -1;\n}\n\nexport default assocIndexOf;\n","import assocIndexOf from './_assocIndexOf.js';\n\n/** Used for built-in method references. */\nvar arrayProto = Array.prototype;\n\n/** Built-in value references. */\nvar splice = arrayProto.splice;\n\n/**\n * Removes `key` and its value from the list cache.\n *\n * @private\n * @name delete\n * @memberOf ListCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction listCacheDelete(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    return false;\n  }\n  var lastIndex = data.length - 1;\n  if (index == lastIndex) {\n    data.pop();\n  } else {\n    splice.call(data, index, 1);\n  }\n  --this.size;\n  return true;\n}\n\nexport default listCacheDelete;\n","import assocIndexOf from './_assocIndexOf.js';\n\n/**\n * Gets the list cache value for `key`.\n *\n * @private\n * @name get\n * @memberOf ListCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction listCacheGet(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  return index < 0 ? undefined : data[index][1];\n}\n\nexport default listCacheGet;\n","import assocIndexOf from './_assocIndexOf.js';\n\n/**\n * Checks if a list cache value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf ListCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction listCacheHas(key) {\n  return assocIndexOf(this.__data__, key) > -1;\n}\n\nexport default listCacheHas;\n","import assocIndexOf from './_assocIndexOf.js';\n\n/**\n * Sets the list cache `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf ListCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the list cache instance.\n */\nfunction listCacheSet(key, value) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    ++this.size;\n    data.push([key, value]);\n  } else {\n    data[index][1] = value;\n  }\n  return this;\n}\n\nexport default listCacheSet;\n","import listCacheClear from './_listCacheClear.js';\nimport listCacheDelete from './_listCacheDelete.js';\nimport listCacheGet from './_listCacheGet.js';\nimport listCacheHas from './_listCacheHas.js';\nimport listCacheSet from './_listCacheSet.js';\n\n/**\n * Creates an list cache object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction ListCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n// Add methods to `ListCache`.\nListCache.prototype.clear = listCacheClear;\nListCache.prototype['delete'] = listCacheDelete;\nListCache.prototype.get = listCacheGet;\nListCache.prototype.has = listCacheHas;\nListCache.prototype.set = listCacheSet;\n\nexport default ListCache;\n","import getNative from './_getNative.js';\nimport root from './_root.js';\n\n/* Built-in method references that are verified to be native. */\nvar Map = getNative(root, 'Map');\n\nexport default Map;\n","import Hash from './_Hash.js';\nimport ListCache from './_ListCache.js';\nimport Map from './_Map.js';\n\n/**\n * Removes all key-value entries from the map.\n *\n * @private\n * @name clear\n * @memberOf MapCache\n */\nfunction mapCacheClear() {\n  this.size = 0;\n  this.__data__ = {\n    'hash': new Hash,\n    'map': new (Map || ListCache),\n    'string': new Hash\n  };\n}\n\nexport default mapCacheClear;\n","/**\n * Checks if `value` is suitable for use as unique object key.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n */\nfunction isKeyable(value) {\n  var type = typeof value;\n  return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')\n    ? (value !== '__proto__')\n    : (value === null);\n}\n\nexport default isKeyable;\n","import isKeyable from './_isKeyable.js';\n\n/**\n * Gets the data for `map`.\n *\n * @private\n * @param {Object} map The map to query.\n * @param {string} key The reference key.\n * @returns {*} Returns the map data.\n */\nfunction getMapData(map, key) {\n  var data = map.__data__;\n  return isKeyable(key)\n    ? data[typeof key == 'string' ? 'string' : 'hash']\n    : data.map;\n}\n\nexport default getMapData;\n","import getMapData from './_getMapData.js';\n\n/**\n * Removes `key` and its value from the map.\n *\n * @private\n * @name delete\n * @memberOf MapCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction mapCacheDelete(key) {\n  var result = getMapData(this, key)['delete'](key);\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\nexport default mapCacheDelete;\n","import getMapData from './_getMapData.js';\n\n/**\n * Gets the map value for `key`.\n *\n * @private\n * @name get\n * @memberOf MapCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction mapCacheGet(key) {\n  return getMapData(this, key).get(key);\n}\n\nexport default mapCacheGet;\n","import getMapData from './_getMapData.js';\n\n/**\n * Checks if a map value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf MapCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction mapCacheHas(key) {\n  return getMapData(this, key).has(key);\n}\n\nexport default mapCacheHas;\n","import getMapData from './_getMapData.js';\n\n/**\n * Sets the map `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf MapCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the map cache instance.\n */\nfunction mapCacheSet(key, value) {\n  var data = getMapData(this, key),\n      size = data.size;\n\n  data.set(key, value);\n  this.size += data.size == size ? 0 : 1;\n  return this;\n}\n\nexport default mapCacheSet;\n","import mapCacheClear from './_mapCacheClear.js';\nimport mapCacheDelete from './_mapCacheDelete.js';\nimport mapCacheGet from './_mapCacheGet.js';\nimport mapCacheHas from './_mapCacheHas.js';\nimport mapCacheSet from './_mapCacheSet.js';\n\n/**\n * Creates a map cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction MapCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n// Add methods to `MapCache`.\nMapCache.prototype.clear = mapCacheClear;\nMapCache.prototype['delete'] = mapCacheDelete;\nMapCache.prototype.get = mapCacheGet;\nMapCache.prototype.has = mapCacheHas;\nMapCache.prototype.set = mapCacheSet;\n\nexport default MapCache;\n","/**\n * Appends the elements of `values` to `array`.\n *\n * @private\n * @param {Array} array The array to modify.\n * @param {Array} values The values to append.\n * @returns {Array} Returns `array`.\n */\nfunction arrayPush(array, values) {\n  var index = -1,\n      length = values.length,\n      offset = array.length;\n\n  while (++index < length) {\n    array[offset + index] = values[index];\n  }\n  return array;\n}\n\nexport default arrayPush;\n","import overArg from './_overArg.js';\n\n/** Built-in value references. */\nvar getPrototype = overArg(Object.getPrototypeOf, Object);\n\nexport default getPrototype;\n","import ListCache from './_ListCache.js';\n\n/**\n * Removes all key-value entries from the stack.\n *\n * @private\n * @name clear\n * @memberOf Stack\n */\nfunction stackClear() {\n  this.__data__ = new ListCache;\n  this.size = 0;\n}\n\nexport default stackClear;\n","/**\n * Removes `key` and its value from the stack.\n *\n * @private\n * @name delete\n * @memberOf Stack\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction stackDelete(key) {\n  var data = this.__data__,\n      result = data['delete'](key);\n\n  this.size = data.size;\n  return result;\n}\n\nexport default stackDelete;\n","/**\n * Gets the stack value for `key`.\n *\n * @private\n * @name get\n * @memberOf Stack\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction stackGet(key) {\n  return this.__data__.get(key);\n}\n\nexport default stackGet;\n","/**\n * Checks if a stack value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Stack\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction stackHas(key) {\n  return this.__data__.has(key);\n}\n\nexport default stackHas;\n","import ListCache from './_ListCache.js';\nimport Map from './_Map.js';\nimport MapCache from './_MapCache.js';\n\n/** Used as the size to enable large array optimizations. */\nvar LARGE_ARRAY_SIZE = 200;\n\n/**\n * Sets the stack `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Stack\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the stack cache instance.\n */\nfunction stackSet(key, value) {\n  var data = this.__data__;\n  if (data instanceof ListCache) {\n    var pairs = data.__data__;\n    if (!Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {\n      pairs.push([key, value]);\n      this.size = ++data.size;\n      return this;\n    }\n    data = this.__data__ = new MapCache(pairs);\n  }\n  data.set(key, value);\n  this.size = data.size;\n  return this;\n}\n\nexport default stackSet;\n","import ListCache from './_ListCache.js';\nimport stackClear from './_stackClear.js';\nimport stackDelete from './_stackDelete.js';\nimport stackGet from './_stackGet.js';\nimport stackHas from './_stackHas.js';\nimport stackSet from './_stackSet.js';\n\n/**\n * Creates a stack cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Stack(entries) {\n  var data = this.__data__ = new ListCache(entries);\n  this.size = data.size;\n}\n\n// Add methods to `Stack`.\nStack.prototype.clear = stackClear;\nStack.prototype['delete'] = stackDelete;\nStack.prototype.get = stackGet;\nStack.prototype.has = stackHas;\nStack.prototype.set = stackSet;\n\nexport default Stack;\n","import copyObject from './_copyObject.js';\nimport keys from './keys.js';\n\n/**\n * The base implementation of `_.assign` without support for multiple sources\n * or `customizer` functions.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @returns {Object} Returns `object`.\n */\nfunction baseAssign(object, source) {\n  return object && copyObject(source, keys(source), object);\n}\n\nexport default baseAssign;\n","import copyObject from './_copyObject.js';\nimport keysIn from './keysIn.js';\n\n/**\n * The base implementation of `_.assignIn` without support for multiple sources\n * or `customizer` functions.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @returns {Object} Returns `object`.\n */\nfunction baseAssignIn(object, source) {\n  return object && copyObject(source, keysIn(source), object);\n}\n\nexport default baseAssignIn;\n","import root from './_root.js';\n\n/** Detect free variable `exports`. */\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/** Built-in value references. */\nvar Buffer = moduleExports ? root.Buffer : undefined,\n    allocUnsafe = Buffer ? Buffer.allocUnsafe : undefined;\n\n/**\n * Creates a clone of  `buffer`.\n *\n * @private\n * @param {Buffer} buffer The buffer to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Buffer} Returns the cloned buffer.\n */\nfunction cloneBuffer(buffer, isDeep) {\n  if (isDeep) {\n    return buffer.slice();\n  }\n  var length = buffer.length,\n      result = allocUnsafe ? allocUnsafe(length) : new buffer.constructor(length);\n\n  buffer.copy(result);\n  return result;\n}\n\nexport default cloneBuffer;\n","/**\n * A specialized version of `_.filter` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {Array} Returns the new filtered array.\n */\nfunction arrayFilter(array, predicate) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      resIndex = 0,\n      result = [];\n\n  while (++index < length) {\n    var value = array[index];\n    if (predicate(value, index, array)) {\n      result[resIndex++] = value;\n    }\n  }\n  return result;\n}\n\nexport default arrayFilter;\n","/**\n * This method returns a new empty array.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {Array} Returns the new empty array.\n * @example\n *\n * var arrays = _.times(2, _.stubArray);\n *\n * console.log(arrays);\n * // => [[], []]\n *\n * console.log(arrays[0] === arrays[1]);\n * // => false\n */\nfunction stubArray() {\n  return [];\n}\n\nexport default stubArray;\n","import arrayFilter from './_arrayFilter.js';\nimport stubArray from './stubArray.js';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Built-in value references. */\nvar propertyIsEnumerable = objectProto.propertyIsEnumerable;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeGetSymbols = Object.getOwnPropertySymbols;\n\n/**\n * Creates an array of the own enumerable symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of symbols.\n */\nvar getSymbols = !nativeGetSymbols ? stubArray : function(object) {\n  if (object == null) {\n    return [];\n  }\n  object = Object(object);\n  return arrayFilter(nativeGetSymbols(object), function(symbol) {\n    return propertyIsEnumerable.call(object, symbol);\n  });\n};\n\nexport default getSymbols;\n","import copyObject from './_copyObject.js';\nimport getSymbols from './_getSymbols.js';\n\n/**\n * Copies own symbols of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy symbols from.\n * @param {Object} [object={}] The object to copy symbols to.\n * @returns {Object} Returns `object`.\n */\nfunction copySymbols(source, object) {\n  return copyObject(source, getSymbols(source), object);\n}\n\nexport default copySymbols;\n","import arrayPush from './_arrayPush.js';\nimport getPrototype from './_getPrototype.js';\nimport getSymbols from './_getSymbols.js';\nimport stubArray from './stubArray.js';\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeGetSymbols = Object.getOwnPropertySymbols;\n\n/**\n * Creates an array of the own and inherited enumerable symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of symbols.\n */\nvar getSymbolsIn = !nativeGetSymbols ? stubArray : function(object) {\n  var result = [];\n  while (object) {\n    arrayPush(result, getSymbols(object));\n    object = getPrototype(object);\n  }\n  return result;\n};\n\nexport default getSymbolsIn;\n","import copyObject from './_copyObject.js';\nimport getSymbolsIn from './_getSymbolsIn.js';\n\n/**\n * Copies own and inherited symbols of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy symbols from.\n * @param {Object} [object={}] The object to copy symbols to.\n * @returns {Object} Returns `object`.\n */\nfunction copySymbolsIn(source, object) {\n  return copyObject(source, getSymbolsIn(source), object);\n}\n\nexport default copySymbolsIn;\n","import arrayPush from './_arrayPush.js';\nimport isArray from './isArray.js';\n\n/**\n * The base implementation of `getAllKeys` and `getAllKeysIn` which uses\n * `keysFunc` and `symbolsFunc` to get the enumerable property names and\n * symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @param {Function} symbolsFunc The function to get the symbols of `object`.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction baseGetAllKeys(object, keysFunc, symbolsFunc) {\n  var result = keysFunc(object);\n  return isArray(object) ? result : arrayPush(result, symbolsFunc(object));\n}\n\nexport default baseGetAllKeys;\n","import baseGetAllKeys from './_baseGetAllKeys.js';\nimport getSymbols from './_getSymbols.js';\nimport keys from './keys.js';\n\n/**\n * Creates an array of own enumerable property names and symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction getAllKeys(object) {\n  return baseGetAllKeys(object, keys, getSymbols);\n}\n\nexport default getAllKeys;\n","import baseGetAllKeys from './_baseGetAllKeys.js';\nimport getSymbolsIn from './_getSymbolsIn.js';\nimport keysIn from './keysIn.js';\n\n/**\n * Creates an array of own and inherited enumerable property names and\n * symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction getAllKeysIn(object) {\n  return baseGetAllKeys(object, keysIn, getSymbolsIn);\n}\n\nexport default getAllKeysIn;\n","import getNative from './_getNative.js';\nimport root from './_root.js';\n\n/* Built-in method references that are verified to be native. */\nvar DataView = getNative(root, 'DataView');\n\nexport default DataView;\n","import getNative from './_getNative.js';\nimport root from './_root.js';\n\n/* Built-in method references that are verified to be native. */\nvar Promise = getNative(root, 'Promise');\n\nexport default Promise;\n","import getNative from './_getNative.js';\nimport root from './_root.js';\n\n/* Built-in method references that are verified to be native. */\nvar Set = getNative(root, 'Set');\n\nexport default Set;\n","import DataView from './_DataView.js';\nimport Map from './_Map.js';\nimport Promise from './_Promise.js';\nimport Set from './_Set.js';\nimport WeakMap from './_WeakMap.js';\nimport baseGetTag from './_baseGetTag.js';\nimport toSource from './_toSource.js';\n\n/** `Object#toString` result references. */\nvar mapTag = '[object Map]',\n    objectTag = '[object Object]',\n    promiseTag = '[object Promise]',\n    setTag = '[object Set]',\n    weakMapTag = '[object WeakMap]';\n\nvar dataViewTag = '[object DataView]';\n\n/** Used to detect maps, sets, and weakmaps. */\nvar dataViewCtorString = toSource(DataView),\n    mapCtorString = toSource(Map),\n    promiseCtorString = toSource(Promise),\n    setCtorString = toSource(Set),\n    weakMapCtorString = toSource(WeakMap);\n\n/**\n * Gets the `toStringTag` of `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nvar getTag = baseGetTag;\n\n// Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.\nif ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||\n    (Map && getTag(new Map) != mapTag) ||\n    (Promise && getTag(Promise.resolve()) != promiseTag) ||\n    (Set && getTag(new Set) != setTag) ||\n    (WeakMap && getTag(new WeakMap) != weakMapTag)) {\n  getTag = function(value) {\n    var result = baseGetTag(value),\n        Ctor = result == objectTag ? value.constructor : undefined,\n        ctorString = Ctor ? toSource(Ctor) : '';\n\n    if (ctorString) {\n      switch (ctorString) {\n        case dataViewCtorString: return dataViewTag;\n        case mapCtorString: return mapTag;\n        case promiseCtorString: return promiseTag;\n        case setCtorString: return setTag;\n        case weakMapCtorString: return weakMapTag;\n      }\n    }\n    return result;\n  };\n}\n\nexport default getTag;\n","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Initializes an array clone.\n *\n * @private\n * @param {Array} array The array to clone.\n * @returns {Array} Returns the initialized clone.\n */\nfunction initCloneArray(array) {\n  var length = array.length,\n      result = new array.constructor(length);\n\n  // Add properties assigned by `RegExp#exec`.\n  if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {\n    result.index = array.index;\n    result.input = array.input;\n  }\n  return result;\n}\n\nexport default initCloneArray;\n","import root from './_root.js';\n\n/** Built-in value references. */\nvar Uint8Array = root.Uint8Array;\n\nexport default Uint8Array;\n","import Uint8Array from './_Uint8Array.js';\n\n/**\n * Creates a clone of `arrayBuffer`.\n *\n * @private\n * @param {ArrayBuffer} arrayBuffer The array buffer to clone.\n * @returns {ArrayBuffer} Returns the cloned array buffer.\n */\nfunction cloneArrayBuffer(arrayBuffer) {\n  var result = new arrayBuffer.constructor(arrayBuffer.byteLength);\n  new Uint8Array(result).set(new Uint8Array(arrayBuffer));\n  return result;\n}\n\nexport default cloneArrayBuffer;\n","import cloneArrayBuffer from './_cloneArrayBuffer.js';\n\n/**\n * Creates a clone of `dataView`.\n *\n * @private\n * @param {Object} dataView The data view to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the cloned data view.\n */\nfunction cloneDataView(dataView, isDeep) {\n  var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;\n  return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);\n}\n\nexport default cloneDataView;\n","/** Used to match `RegExp` flags from their coerced string values. */\nvar reFlags = /\\w*$/;\n\n/**\n * Creates a clone of `regexp`.\n *\n * @private\n * @param {Object} regexp The regexp to clone.\n * @returns {Object} Returns the cloned regexp.\n */\nfunction cloneRegExp(regexp) {\n  var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));\n  result.lastIndex = regexp.lastIndex;\n  return result;\n}\n\nexport default cloneRegExp;\n","import Symbol from './_Symbol.js';\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;\n\n/**\n * Creates a clone of the `symbol` object.\n *\n * @private\n * @param {Object} symbol The symbol object to clone.\n * @returns {Object} Returns the cloned symbol object.\n */\nfunction cloneSymbol(symbol) {\n  return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};\n}\n\nexport default cloneSymbol;\n","import cloneArrayBuffer from './_cloneArrayBuffer.js';\n\n/**\n * Creates a clone of `typedArray`.\n *\n * @private\n * @param {Object} typedArray The typed array to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the cloned typed array.\n */\nfunction cloneTypedArray(typedArray, isDeep) {\n  var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;\n  return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);\n}\n\nexport default cloneTypedArray;\n","import cloneArrayBuffer from './_cloneArrayBuffer.js';\nimport cloneDataView from './_cloneDataView.js';\nimport cloneRegExp from './_cloneRegExp.js';\nimport cloneSymbol from './_cloneSymbol.js';\nimport cloneTypedArray from './_cloneTypedArray.js';\n\n/** `Object#toString` result references. */\nvar boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/**\n * Initializes an object clone based on its `toStringTag`.\n *\n * **Note:** This function only supports cloning values with tags of\n * `Boolean`, `Date`, `Error`, `Map`, `Number`, `RegExp`, `Set`, or `String`.\n *\n * @private\n * @param {Object} object The object to clone.\n * @param {string} tag The `toStringTag` of the object to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the initialized clone.\n */\nfunction initCloneByTag(object, tag, isDeep) {\n  var Ctor = object.constructor;\n  switch (tag) {\n    case arrayBufferTag:\n      return cloneArrayBuffer(object);\n\n    case boolTag:\n    case dateTag:\n      return new Ctor(+object);\n\n    case dataViewTag:\n      return cloneDataView(object, isDeep);\n\n    case float32Tag: case float64Tag:\n    case int8Tag: case int16Tag: case int32Tag:\n    case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:\n      return cloneTypedArray(object, isDeep);\n\n    case mapTag:\n      return new Ctor;\n\n    case numberTag:\n    case stringTag:\n      return new Ctor(object);\n\n    case regexpTag:\n      return cloneRegExp(object);\n\n    case setTag:\n      return new Ctor;\n\n    case symbolTag:\n      return cloneSymbol(object);\n  }\n}\n\nexport default initCloneByTag;\n","import baseCreate from './_baseCreate.js';\nimport getPrototype from './_getPrototype.js';\nimport isPrototype from './_isPrototype.js';\n\n/**\n * Initializes an object clone.\n *\n * @private\n * @param {Object} object The object to clone.\n * @returns {Object} Returns the initialized clone.\n */\nfunction initCloneObject(object) {\n  return (typeof object.constructor == 'function' && !isPrototype(object))\n    ? baseCreate(getPrototype(object))\n    : {};\n}\n\nexport default initCloneObject;\n","import getTag from './_getTag.js';\nimport isObjectLike from './isObjectLike.js';\n\n/** `Object#toString` result references. */\nvar mapTag = '[object Map]';\n\n/**\n * The base implementation of `_.isMap` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n */\nfunction baseIsMap(value) {\n  return isObjectLike(value) && getTag(value) == mapTag;\n}\n\nexport default baseIsMap;\n","import baseIsMap from './_baseIsMap.js';\nimport baseUnary from './_baseUnary.js';\nimport nodeUtil from './_nodeUtil.js';\n\n/* Node.js helper references. */\nvar nodeIsMap = nodeUtil && nodeUtil.isMap;\n\n/**\n * Checks if `value` is classified as a `Map` object.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n * @example\n *\n * _.isMap(new Map);\n * // => true\n *\n * _.isMap(new WeakMap);\n * // => false\n */\nvar isMap = nodeIsMap ? baseUnary(nodeIsMap) : baseIsMap;\n\nexport default isMap;\n","import getTag from './_getTag.js';\nimport isObjectLike from './isObjectLike.js';\n\n/** `Object#toString` result references. */\nvar setTag = '[object Set]';\n\n/**\n * The base implementation of `_.isSet` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n */\nfunction baseIsSet(value) {\n  return isObjectLike(value) && getTag(value) == setTag;\n}\n\nexport default baseIsSet;\n","import baseIsSet from './_baseIsSet.js';\nimport baseUnary from './_baseUnary.js';\nimport nodeUtil from './_nodeUtil.js';\n\n/* Node.js helper references. */\nvar nodeIsSet = nodeUtil && nodeUtil.isSet;\n\n/**\n * Checks if `value` is classified as a `Set` object.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n * @example\n *\n * _.isSet(new Set);\n * // => true\n *\n * _.isSet(new WeakSet);\n * // => false\n */\nvar isSet = nodeIsSet ? baseUnary(nodeIsSet) : baseIsSet;\n\nexport default isSet;\n","import Stack from './_Stack.js';\nimport arrayEach from './_arrayEach.js';\nimport assignValue from './_assignValue.js';\nimport baseAssign from './_baseAssign.js';\nimport baseAssignIn from './_baseAssignIn.js';\nimport cloneBuffer from './_cloneBuffer.js';\nimport copyArray from './_copyArray.js';\nimport copySymbols from './_copySymbols.js';\nimport copySymbolsIn from './_copySymbolsIn.js';\nimport getAllKeys from './_getAllKeys.js';\nimport getAllKeysIn from './_getAllKeysIn.js';\nimport getTag from './_getTag.js';\nimport initCloneArray from './_initCloneArray.js';\nimport initCloneByTag from './_initCloneByTag.js';\nimport initCloneObject from './_initCloneObject.js';\nimport isArray from './isArray.js';\nimport isBuffer from './isBuffer.js';\nimport isMap from './isMap.js';\nimport isObject from './isObject.js';\nimport isSet from './isSet.js';\nimport keys from './keys.js';\nimport keysIn from './keysIn.js';\n\n/** Used to compose bitmasks for cloning. */\nvar CLONE_DEEP_FLAG = 1,\n    CLONE_FLAT_FLAG = 2,\n    CLONE_SYMBOLS_FLAG = 4;\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    objectTag = '[object Object]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]',\n    weakMapTag = '[object WeakMap]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/** Used to identify `toStringTag` values supported by `_.clone`. */\nvar cloneableTags = {};\ncloneableTags[argsTag] = cloneableTags[arrayTag] =\ncloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] =\ncloneableTags[boolTag] = cloneableTags[dateTag] =\ncloneableTags[float32Tag] = cloneableTags[float64Tag] =\ncloneableTags[int8Tag] = cloneableTags[int16Tag] =\ncloneableTags[int32Tag] = cloneableTags[mapTag] =\ncloneableTags[numberTag] = cloneableTags[objectTag] =\ncloneableTags[regexpTag] = cloneableTags[setTag] =\ncloneableTags[stringTag] = cloneableTags[symbolTag] =\ncloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =\ncloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;\ncloneableTags[errorTag] = cloneableTags[funcTag] =\ncloneableTags[weakMapTag] = false;\n\n/**\n * The base implementation of `_.clone` and `_.cloneDeep` which tracks\n * traversed objects.\n *\n * @private\n * @param {*} value The value to clone.\n * @param {boolean} bitmask The bitmask flags.\n *  1 - Deep clone\n *  2 - Flatten inherited properties\n *  4 - Clone symbols\n * @param {Function} [customizer] The function to customize cloning.\n * @param {string} [key] The key of `value`.\n * @param {Object} [object] The parent object of `value`.\n * @param {Object} [stack] Tracks traversed objects and their clone counterparts.\n * @returns {*} Returns the cloned value.\n */\nfunction baseClone(value, bitmask, customizer, key, object, stack) {\n  var result,\n      isDeep = bitmask & CLONE_DEEP_FLAG,\n      isFlat = bitmask & CLONE_FLAT_FLAG,\n      isFull = bitmask & CLONE_SYMBOLS_FLAG;\n\n  if (customizer) {\n    result = object ? customizer(value, key, object, stack) : customizer(value);\n  }\n  if (result !== undefined) {\n    return result;\n  }\n  if (!isObject(value)) {\n    return value;\n  }\n  var isArr = isArray(value);\n  if (isArr) {\n    result = initCloneArray(value);\n    if (!isDeep) {\n      return copyArray(value, result);\n    }\n  } else {\n    var tag = getTag(value),\n        isFunc = tag == funcTag || tag == genTag;\n\n    if (isBuffer(value)) {\n      return cloneBuffer(value, isDeep);\n    }\n    if (tag == objectTag || tag == argsTag || (isFunc && !object)) {\n      result = (isFlat || isFunc) ? {} : initCloneObject(value);\n      if (!isDeep) {\n        return isFlat\n          ? copySymbolsIn(value, baseAssignIn(result, value))\n          : copySymbols(value, baseAssign(result, value));\n      }\n    } else {\n      if (!cloneableTags[tag]) {\n        return object ? value : {};\n      }\n      result = initCloneByTag(value, tag, isDeep);\n    }\n  }\n  // Check for circular references and return its corresponding clone.\n  stack || (stack = new Stack);\n  var stacked = stack.get(value);\n  if (stacked) {\n    return stacked;\n  }\n  stack.set(value, result);\n\n  if (isSet(value)) {\n    value.forEach(function(subValue) {\n      result.add(baseClone(subValue, bitmask, customizer, subValue, value, stack));\n    });\n  } else if (isMap(value)) {\n    value.forEach(function(subValue, key) {\n      result.set(key, baseClone(subValue, bitmask, customizer, key, value, stack));\n    });\n  }\n\n  var keysFunc = isFull\n    ? (isFlat ? getAllKeysIn : getAllKeys)\n    : (isFlat ? keysIn : keys);\n\n  var props = isArr ? undefined : keysFunc(value);\n  arrayEach(props || value, function(subValue, key) {\n    if (props) {\n      key = subValue;\n      subValue = value[key];\n    }\n    // Recursively populate clone (susceptible to call stack limits).\n    assignValue(result, key, baseClone(subValue, bitmask, customizer, key, value, stack));\n  });\n  return result;\n}\n\nexport default baseClone;\n","import baseClone from './_baseClone.js';\n\n/** Used to compose bitmasks for cloning. */\nvar CLONE_DEEP_FLAG = 1,\n    CLONE_SYMBOLS_FLAG = 4;\n\n/**\n * This method is like `_.clone` except that it recursively clones `value`.\n *\n * @static\n * @memberOf _\n * @since 1.0.0\n * @category Lang\n * @param {*} value The value to recursively clone.\n * @returns {*} Returns the deep cloned value.\n * @see _.clone\n * @example\n *\n * var objects = [{ 'a': 1 }, { 'b': 2 }];\n *\n * var deep = _.cloneDeep(objects);\n * console.log(deep[0] === objects[0]);\n * // => false\n */\nfunction cloneDeep(value) {\n  return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG);\n}\n\nexport default cloneDeep;\n","/**\r\n * @module vim-loader\r\n */\r\n\r\nimport deepmerge from 'deepmerge'\r\nimport { cloneDeep } from 'lodash-es'\r\nimport { Transparency } from './geometry'\r\nimport * as THREE from 'three'\r\n\r\nexport namespace VimOptions {\r\n  export type Vector3 = {\r\n    x: number\r\n    y: number\r\n    z: number\r\n  }\r\n\r\n  /**\r\n   * Config object for loading a vim\r\n   */\r\n  export type Root = {\r\n    /**\r\n     * Position offset for the vim\r\n     */\r\n    position?: Vector3\r\n    /**\r\n     * Rotation for the vim\r\n     */\r\n    rotation?: Vector3\r\n    /**\r\n     * Scale factor for the vim\r\n     */\r\n    scale?: number\r\n\r\n    /**\r\n     * Defines how to draw or not to draw objects according to their transparency\r\n     */\r\n    transparency?: Transparency.Mode\r\n\r\n    /**\r\n     * Forces the viewer to download the whole data at once.\r\n     * Otherwise bim data will be requested on per need basis.\r\n     */\r\n    forceDownload?: boolean\r\n  }\r\n}\r\n\r\n/**\r\n * <p>Wrapper around Vim Options.</p>\r\n * <p>Casts options values into related THREE.js type</p>\r\n * <p>Provides default values for options</p>\r\n */\r\nexport class VimSettings {\r\n  private options: VimOptions.Root\r\n\r\n  constructor (options?: Partial<VimOptions.Root>) {\r\n    const fallback: VimOptions.Root = {\r\n      position: { x: 0, y: 0, z: 0 },\r\n      rotation: { x: 0, y: 0, z: 0 },\r\n      scale: 1,\r\n      transparency: 'all',\r\n      forceDownload: false\r\n    }\r\n\r\n    this.options = options ? deepmerge(fallback, options, undefined) : fallback\r\n    this.options.transparency = Transparency.isValid(this.options.transparency!)\r\n      ? this.options.transparency\r\n      : 'all'\r\n  }\r\n\r\n  getOptions = () => cloneDeep(this.options) as VimOptions.Root\r\n\r\n  getPosition = () => toVec(this.options.position)\r\n  getRotation = () => toQuaternion(this.options.rotation)\r\n  getScale = () => scalarToVec(this.options.scale)\r\n  getMatrix = () =>\r\n    new THREE.Matrix4().compose(\r\n      this.getPosition(),\r\n      this.getRotation(),\r\n      this.getScale()\r\n    )\r\n\r\n  getTransparency = () => this.options.transparency!\r\n}\r\n\r\nfunction toVec (obj: VimOptions.Vector3): THREE.Vector3 {\r\n  return new THREE.Vector3(obj.x, obj.y, obj.z)\r\n}\r\n\r\nfunction toQuaternion (rot: VimOptions.Vector3): THREE.Quaternion {\r\n  return new THREE.Quaternion().setFromEuler(toEuler(toVec(rot)))\r\n}\r\n\r\nfunction scalarToVec (x: number): THREE.Vector3 {\r\n  return new THREE.Vector3(x, x, x)\r\n}\r\n\r\nfunction toEuler (rot: THREE.Vector3): THREE.Euler {\r\n  return new THREE.Euler(\r\n    (rot.x * Math.PI) / 180,\r\n    (rot.y * Math.PI) / 180,\r\n    (rot.z * Math.PI) / 180\r\n  )\r\n}\r\n","/**\r\n * @module vim-loader\r\n */\r\n\r\nimport { BFast } from './bfast'\r\n\r\nclass G3dAttributeDescriptor {\r\n  // original descriptor string\r\n  description: string\r\n  // Indicates the part of the geometry that this attribute is associated with\r\n  association: string\r\n  // the role of the attribute\r\n  semantic: string\r\n  // each attribute type should have it's own index ( you can have uv0, uv1, etc. )\r\n  attributeTypeIndex: string\r\n  // the type of individual values (e.g. int32, float64)\r\n  dataType: string\r\n  // how many values associated with each element (e.g. UVs might be 2, geometry might be 3, quaternions 4, matrices 9 or 16)\r\n  dataArity: number\r\n\r\n  constructor (\r\n    description: string,\r\n    association: string,\r\n    semantic: string,\r\n    attributeTypeIndex: string,\r\n    dataType: string,\r\n    dataArity: string\r\n  ) {\r\n    if (!description.startsWith('g3d:')) {\r\n      throw new Error(`${description} must start with 'g3d'`)\r\n    }\r\n\r\n    this.description = description\r\n    this.association = association\r\n    this.semantic = semantic\r\n    this.attributeTypeIndex = attributeTypeIndex\r\n    this.dataType = dataType\r\n    this.dataArity = parseInt(dataArity)\r\n  }\r\n\r\n  static fromString (descriptor: string): G3dAttributeDescriptor {\r\n    const desc = descriptor.split(':')\r\n\r\n    if (desc.length !== 6) {\r\n      throw new Error(`${descriptor}, must have 6 components delimited by ':'`)\r\n    }\r\n\r\n    return new this(descriptor, desc[1], desc[2], desc[3], desc[4], desc[5])\r\n  }\r\n\r\n  matches (other: G3dAttributeDescriptor) {\r\n    const match = (a: string, b: string) => a === '*' || b === '*' || a === b\r\n\r\n    return (\r\n      match(this.association, other.association) &&\r\n      match(this.semantic, other.semantic) &&\r\n      match(this.attributeTypeIndex, other.attributeTypeIndex) &&\r\n      match(this.dataType, other.dataType)\r\n    )\r\n  }\r\n}\r\n\r\nclass G3dAttribute {\r\n  descriptor: G3dAttributeDescriptor\r\n  bytes: Uint8Array\r\n  data: Uint8Array | Int16Array | Int32Array | Float32Array | Float64Array\r\n\r\n  constructor (descriptor: G3dAttributeDescriptor, bytes: Uint8Array) {\r\n    this.descriptor = descriptor\r\n    this.bytes = bytes\r\n    this.data = G3dAttribute.castData(bytes, descriptor.dataType)\r\n  }\r\n\r\n  static fromString (descriptor: string, buffer: Uint8Array): G3dAttribute {\r\n    return new this(G3dAttributeDescriptor.fromString(descriptor), buffer)\r\n  }\r\n\r\n  // Converts a VIM attribute into a typed array from its raw data\r\n  static castData (\r\n    bytes: Uint8Array,\r\n    dataType: string\r\n  ): Uint8Array | Int16Array | Int32Array | Float32Array | Float64Array {\r\n    // This is a UInt8 array\r\n\r\n    switch (dataType) {\r\n      case 'float32':\r\n        return new Float32Array(\r\n          bytes.buffer,\r\n          bytes.byteOffset,\r\n          bytes.byteLength / 4\r\n        )\r\n      case 'float64':\r\n        throw new Float64Array(\r\n          bytes.buffer,\r\n          bytes.byteOffset,\r\n          bytes.byteLength / 8\r\n        )\r\n      case 'int8':\r\n        return bytes\r\n      case 'int16':\r\n        return new Int16Array(\r\n          bytes.buffer,\r\n          bytes.byteOffset,\r\n          bytes.byteLength / 2\r\n        )\r\n      case 'int32':\r\n        return new Int32Array(\r\n          bytes.buffer,\r\n          bytes.byteOffset,\r\n          bytes.byteLength / 4\r\n        )\r\n      // case \"int64\": return new Int64Array(data.buffer, data.byteOffset, data.byteLength / 8);\r\n      default:\r\n        throw new Error('Unrecognized attribute data type ' + dataType)\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * G3D is a simple, efficient, generic binary format for storing and transmitting geometry.\r\n * The G3D format is designed to be used either as a serialization format or as an in-memory data structure.\r\n * See https://github.com/vimaec/g3d\r\n */\r\nclass AbstractG3d {\r\n  meta: string\r\n  attributes: G3dAttribute[]\r\n\r\n  constructor (meta: string, attributes: G3dAttribute[]) {\r\n    this.meta = meta\r\n    this.attributes = attributes\r\n  }\r\n\r\n  findAttribute (descriptor: string): G3dAttribute | undefined {\r\n    const filter = G3dAttributeDescriptor.fromString(descriptor)\r\n    for (let i = 0; i < this.attributes.length; ++i) {\r\n      const attribute = this.attributes[i]\r\n      if (attribute.descriptor.matches(filter)) return attribute\r\n    }\r\n  }\r\n\r\n  static createFromBfast (bfast: BFast) {\r\n    const attributes = VimAttributes.all.map((name) => \r\n      new G3dAttribute(G3dAttributeDescriptor.fromString(name), bfast.getBuffer(name)));\r\n    return new AbstractG3d('meta', attributes)\r\n  }\r\n}\r\n\r\n/**\r\n * See https://github.com/vimaec/vim#vim-geometry-attributes\r\n */\r\nclass VimAttributes {\r\n  static positions = 'g3d:vertex:position:0:float32:3'\r\n  static indices = 'g3d:corner:index:0:int32:1'\r\n  static instanceMeshes = 'g3d:instance:mesh:0:int32:1'\r\n  static instanceTransforms = 'g3d:instance:transform:0:float32:16'\r\n  static meshSubmeshes = 'g3d:mesh:submeshoffset:0:int32:1'\r\n  static submeshIndexOffsets = 'g3d:submesh:indexoffset:0:int32:1'\r\n  static submeshMaterials = 'g3d:submesh:material:0:int32:1'\r\n  static materialColors = 'g3d:material:color:0:float32:4'\r\n\r\n  static all = [\r\n    VimAttributes.positions,\r\n    VimAttributes.indices,\r\n    VimAttributes.instanceMeshes,\r\n    VimAttributes.instanceTransforms,\r\n    VimAttributes.meshSubmeshes,\r\n    VimAttributes.submeshIndexOffsets,\r\n    VimAttributes.submeshMaterials,\r\n    VimAttributes.materialColors\r\n  ]\r\n}\r\n\r\n/**\r\n * G3D is a simple, efficient, generic binary format for storing and transmitting geometry.\r\n * The G3D format is designed to be used either as a serialization format or as an in-memory data structure.\r\n * A G3d with specific attributes according to the VIM format specification.\r\n * See https://github.com/vimaec/vim#vim-geometry-attributes for the vim specification.\r\n * See https://github.com/vimaec/g3d for the g3d specification.\r\n */\r\nexport class G3d {\r\n  positions: Float32Array\r\n  indices: Uint32Array\r\n\r\n  instanceMeshes: Int32Array\r\n  instanceTransforms: Float32Array\r\n  meshSubmeshes: Int32Array\r\n  submeshIndexOffset: Int32Array\r\n  submeshMaterial: Int32Array\r\n  materialColors: Float32Array\r\n\r\n  // computed fields\r\n  meshVertexOffsets: Int32Array\r\n  meshInstances: Array<Array<number>>\r\n  meshTransparent: Array<boolean>\r\n\r\n  rawG3d: AbstractG3d\r\n\r\n  MATRIX_SIZE = 16\r\n  COLOR_SIZE = 4\r\n  POSITION_SIZE = 3\r\n  /**\r\n   * Opaque white\r\n   */\r\n  DEFAULT_COLOR = new Float32Array([1, 1, 1, 1])\r\n\r\n  constructor (g3d: AbstractG3d) {\r\n    this.rawG3d = g3d\r\n\r\n    this.positions = g3d.findAttribute(VimAttributes.positions)\r\n      ?.data as Float32Array\r\n\r\n    const tmp = g3d.findAttribute(VimAttributes.indices)?.data\r\n    this.indices = new Uint32Array(tmp.buffer, tmp.byteOffset, tmp.length)\r\n\r\n    this.meshSubmeshes = g3d.findAttribute(VimAttributes.meshSubmeshes)\r\n      ?.data as Int32Array\r\n\r\n    this.submeshIndexOffset = g3d.findAttribute(\r\n      VimAttributes.submeshIndexOffsets\r\n    )?.data as Int32Array\r\n\r\n    this.submeshMaterial = g3d.findAttribute(VimAttributes.submeshMaterials)\r\n      ?.data as Int32Array\r\n\r\n    this.materialColors = g3d.findAttribute(VimAttributes.materialColors)\r\n      ?.data as Float32Array\r\n\r\n    this.instanceMeshes = g3d.findAttribute(VimAttributes.instanceMeshes)\r\n      ?.data as Int32Array\r\n\r\n    this.instanceTransforms = g3d.findAttribute(\r\n      VimAttributes.instanceTransforms\r\n    )?.data as Float32Array\r\n\r\n    this.meshVertexOffsets = this.computeMeshVertexOffsets()\r\n    this.rebaseIndices()\r\n    this.meshInstances = this.computeMeshInstances()\r\n    this.meshTransparent = this.computeMeshIsTransparent()\r\n  }\r\n\r\n  /**\r\n   * Computes the index of the first vertex of each mesh\r\n   */\r\n  private computeMeshVertexOffsets (): Int32Array {\r\n    const result = new Int32Array(this.getMeshCount())\r\n    for (let m = 0; m < result.length; m++) {\r\n      let min = Number.MAX_SAFE_INTEGER\r\n      const start = this.getMeshIndexStart(m)\r\n      const end = this.getMeshIndexEnd(m)\r\n      for (let i = start; i < end; i++) {\r\n        min = Math.min(min, this.indices[i])\r\n      }\r\n      result[m] = min\r\n    }\r\n    return result\r\n  }\r\n\r\n  /**\r\n   * Rebase indices to be relative to its own mesh instead of to the whole g3d\r\n   */\r\n  private rebaseIndices () {\r\n    const count = this.getMeshCount()\r\n    for (let m = 0; m < count; m++) {\r\n      const offset = this.meshVertexOffsets[m]\r\n      const start = this.getMeshIndexStart(m)\r\n      const end = this.getMeshIndexEnd(m)\r\n      for (let i = start; i < end; i++) {\r\n        this.indices[i] -= offset\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Computes all instances pointing to each mesh.\r\n   */\r\n  private computeMeshInstances = (): number[][] => {\r\n    const result: number[][] = []\r\n\r\n    for (let i = 0; i < this.instanceMeshes.length; i++) {\r\n      const mesh = this.instanceMeshes[i]\r\n      if (mesh < 0) continue\r\n      const instanceIndices = result[mesh]\r\n      if (instanceIndices) instanceIndices.push(i)\r\n      else result[mesh] = [i]\r\n    }\r\n\r\n    return result\r\n  }\r\n\r\n  /**\r\n   * Computes an array where true if any of the materials used by a mesh has transparency.\r\n   */\r\n  private computeMeshIsTransparent (): Array<boolean> {\r\n    const result = new Array<boolean>(this.getMeshCount())\r\n    for (let m = 0; m < result.length; m++) {\r\n      const subStart = this.getMeshSubmeshStart(m)\r\n      const subEnd = this.getMeshSubmeshEnd(m)\r\n      // const [subStart, subEnd] = this.getMeshSubmeshRange(m)\r\n      for (let s = subStart; s < subEnd; s++) {\r\n        const material = this.submeshMaterial[s]\r\n        const alpha =\r\n          this.materialColors[material * this.COLOR_SIZE + this.COLOR_SIZE - 1]\r\n        result[m] = result[m] || alpha < 1\r\n      }\r\n    }\r\n    return result\r\n  }\r\n\r\n  // ------------- All -----------------\r\n  getVertexCount = () => this.positions.length / this.POSITION_SIZE\r\n\r\n  // ------------- Meshes -----------------\r\n  getMeshCount = () => this.meshSubmeshes.length\r\n\r\n  getMeshIndexStart (mesh: number): number {\r\n    const subStart = this.getMeshSubmeshStart(mesh)\r\n    return this.getSubmeshIndexStart(subStart)\r\n  }\r\n\r\n  getMeshIndexEnd (mesh: number): number {\r\n    const subEnd = this.getMeshSubmeshEnd(mesh)\r\n    return this.getSubmeshIndexEnd(subEnd - 1)\r\n  }\r\n\r\n  getMeshIndexCount (mesh: number): number {\r\n    return this.getMeshIndexEnd(mesh) - this.getMeshIndexStart(mesh)\r\n  }\r\n\r\n  getMeshVertexStart (mesh: number): number {\r\n    return this.meshVertexOffsets[mesh]\r\n  }\r\n\r\n  getMeshVertexEnd (mesh: number): number {\r\n    return mesh < this.meshVertexOffsets.length - 1\r\n      ? this.meshVertexOffsets[mesh + 1]\r\n      : this.getVertexCount()\r\n  }\r\n\r\n  getMeshVertexCount (mesh: number): number {\r\n    return this.getMeshVertexEnd(mesh) - this.getMeshVertexStart(mesh)\r\n  }\r\n\r\n  getMeshSubmeshStart (mesh: number): number {\r\n    return this.meshSubmeshes[mesh]\r\n  }\r\n\r\n  getMeshSubmeshEnd (mesh: number): number {\r\n    return mesh < this.meshSubmeshes.length - 1\r\n      ? this.meshSubmeshes[mesh + 1]\r\n      : this.submeshIndexOffset.length\r\n  }\r\n\r\n  getMeshSubmeshCount (mesh: number): number {\r\n    return this.getMeshSubmeshEnd(mesh) - this.getMeshSubmeshStart(mesh)\r\n  }\r\n\r\n  // ------------- Submeshes -----------------\r\n\r\n  getSubmeshIndexStart (submesh: number): number {\r\n    return this.submeshIndexOffset[submesh]\r\n  }\r\n\r\n  getSubmeshIndexEnd (submesh: number): number {\r\n    return submesh < this.submeshIndexOffset.length - 1\r\n      ? this.submeshIndexOffset[submesh + 1]\r\n      : this.indices.length\r\n  }\r\n\r\n  getSubmeshIndexCount (submesh: number): number {\r\n    return this.getSubmeshIndexEnd(submesh) - this.getSubmeshIndexStart(submesh)\r\n  }\r\n\r\n  /**\r\n   * Returns color of given submesh as a 4-number array (RGBA)\r\n   * @param submesh g3d submesh index\r\n   */\r\n  getSubmeshColor (submesh: number): Float32Array {\r\n    return this.getMaterialColor(this.submeshMaterial[submesh])\r\n  }\r\n\r\n  // ------------- Instances -----------------\r\n  getInstanceCount = () => this.instanceMeshes.length\r\n\r\n  /**\r\n   * Returns an 16 number array representation of the matrix for given instance\r\n   * @param instance g3d instance index\r\n   */\r\n  getInstanceMatrix (instance: number): Float32Array {\r\n    return this.instanceTransforms.subarray(\r\n      instance * this.MATRIX_SIZE,\r\n      (instance + 1) * this.MATRIX_SIZE\r\n    )\r\n  }\r\n\r\n  // ------------- Material -----------------\r\n\r\n  getMaterialCount = () => this.materialColors.length / this.COLOR_SIZE\r\n\r\n  /**\r\n   * Returns color of given material as a 4-number array (RGBA)\r\n   * @param material g3d material index\r\n   */\r\n  getMaterialColor (material: number): Float32Array {\r\n    if (material < 0) return this.DEFAULT_COLOR\r\n    return this.materialColors.subarray(\r\n      material * this.COLOR_SIZE,\r\n      (material + 1) * this.COLOR_SIZE\r\n    )\r\n  }\r\n\r\n  static createFromBfast (bfast: BFast) {\r\n    return new G3d(AbstractG3d.createFromBfast(bfast));\r\n  }\r\n\r\n  validate () {\r\n    const isPresent = (attribute: any, label: string) => {\r\n      if (!attribute) {\r\n        throw new Error(`Missing Attribute Buffer: ${label}`)\r\n      }\r\n    }\r\n    isPresent(this.positions, 'position')\r\n    isPresent(this.indices, 'indices')\r\n    isPresent(this.instanceMeshes, 'instanceMeshes')\r\n    isPresent(this.instanceTransforms, 'instanceTransforms')\r\n    isPresent(this.meshSubmeshes, 'meshSubmeshes')\r\n    isPresent(this.submeshIndexOffset, 'submeshIndexOffset')\r\n    isPresent(this.submeshMaterial, 'submeshMaterial')\r\n    isPresent(this.materialColors, 'materialColors')\r\n\r\n    // Basic\r\n    if (this.positions.length % this.POSITION_SIZE !== 0) {\r\n      throw new Error(\r\n        'Invalid position buffer, must be divisible by ' + this.POSITION_SIZE\r\n      )\r\n    }\r\n\r\n    if (this.indices.length % 3 !== 0) {\r\n      throw new Error('Invalid Index Count, must be divisible by 3')\r\n    }\r\n\r\n    for (let i = 0; i < this.indices.length; i++) {\r\n      if (this.indices[i] < 0 || this.indices[i] >= this.positions.length) {\r\n        throw new Error('Vertex index out of bound')\r\n      }\r\n    }\r\n\r\n    // Instances\r\n    if (\r\n      this.instanceMeshes.length !==\r\n      this.instanceTransforms.length / this.MATRIX_SIZE\r\n    ) {\r\n      throw new Error('Instance buffers mismatched')\r\n    }\r\n\r\n    if (this.instanceTransforms.length % this.MATRIX_SIZE !== 0) {\r\n      throw new Error(\r\n        'Invalid InstanceTransform buffer, must respect arity ' +\r\n          this.MATRIX_SIZE\r\n      )\r\n    }\r\n\r\n    for (let i = 0; i < this.instanceMeshes.length; i++) {\r\n      if (this.instanceMeshes[i] >= this.meshSubmeshes.length) {\r\n        throw new Error('Instance Mesh Out of range.')\r\n      }\r\n    }\r\n\r\n    // Meshes\r\n    for (let i = 0; i < this.meshSubmeshes.length; i++) {\r\n      if (\r\n        this.meshSubmeshes[i] < 0 ||\r\n        this.meshSubmeshes[i] >= this.submeshIndexOffset.length\r\n      ) {\r\n        throw new Error('MeshSubmeshOffset out of bound at')\r\n      }\r\n    }\r\n\r\n    for (let i = 0; i < this.meshSubmeshes.length - 1; i++) {\r\n      if (this.meshSubmeshes[i] >= this.meshSubmeshes[i + 1]) {\r\n        throw new Error('MeshSubmesh out of sequence.')\r\n      }\r\n    }\r\n\r\n    // Submeshes\r\n    if (this.submeshIndexOffset.length !== this.submeshMaterial.length) {\r\n      throw new Error('Mismatched submesh buffers')\r\n    }\r\n\r\n    for (let i = 0; i < this.submeshIndexOffset.length; i++) {\r\n      if (\r\n        this.submeshIndexOffset[i] < 0 ||\r\n        this.submeshIndexOffset[i] >= this.indices.length\r\n      ) {\r\n        throw new Error('SubmeshIndexOffset out of bound')\r\n      }\r\n    }\r\n\r\n    for (let i = 0; i < this.submeshIndexOffset.length; i++) {\r\n      if (this.submeshIndexOffset[i] % 3 !== 0) {\r\n        throw new Error('Invalid SubmeshIndexOffset, must be divisible by 3')\r\n      }\r\n    }\r\n\r\n    for (let i = 0; i < this.submeshIndexOffset.length - 1; i++) {\r\n      if (this.submeshIndexOffset[i] >= this.submeshIndexOffset[i + 1]) {\r\n        throw new Error('SubmeshIndexOffset out of sequence.')\r\n      }\r\n    }\r\n\r\n    for (let i = 0; i < this.submeshMaterial.length; i++) {\r\n      if (this.submeshMaterial[i] >= this.materialColors.length) {\r\n        throw new Error('SubmeshMaterial out of bound')\r\n      }\r\n    }\r\n\r\n    // Materials\r\n    if (this.materialColors.length % this.COLOR_SIZE !== 0) {\r\n      throw new Error(\r\n        'Invalid material color buffer, must be divisible by ' + this.COLOR_SIZE\r\n      )\r\n    }\r\n  }\r\n}\r\n","import { BFast } from './bfast'\r\nimport { G3d } from './g3d'\r\n\r\nconst TypeSizes = { \r\n  byte: 1,\r\n  short: 2,\r\n  int : 4,\r\n  float : 4,\r\n  long : 8,\r\n  double : 8,\r\n  string : 4,\r\n  index : 4,\r\n  numeric : 8,\r\n  default: 4,\r\n}\r\n\r\nfunction getTypeSize(typeName: string): number {\r\n  if (typeName in TypeSizes) \r\n    return TypeSizes[typeName];\r\n  else\r\n    return TypeSizes.default;\r\n}\r\n\r\nconst ArrayConstructors = {\r\n  byte:  Int8Array,\r\n  short: Int16Array,\r\n  int: Int32Array,\r\n  float: Float32Array,\r\n  long: Float64Array,\r\n  double: Float64Array,\r\n  string: Int32Array,\r\n  index: Int32Array,\r\n  numeric: Float64Array,\r\n  default: Uint8Array,\r\n}\r\n\r\nfunction getTypeArrayConstructor(typeName: string): any {\r\n  if (typeName in ArrayConstructors)\r\n    return ArrayConstructors[typeName];\r\n  else\r\n    return ArrayConstructors.default;\r\n}\r\n\r\nfunction invertMap (data: ArrayLike<number>) : Map<number, number[]> {\r\n  const result = new Map<number, number[]>()\r\n  for (let i = 0; i < data.length; i++) {\r\n    const value = data[i];\r\n    if (!result.has(value)) {\r\n      result.set(value, [i]);\r\n    } else {\r\n      result.get(value).push(i);\r\n    }\r\n  }\r\n  return result;\r\n}\r\n\r\nexport class EntityTable \r\n{ \r\n  name: string;\r\n  columns: Map<string, EntityColumn>;  \r\n  numRows: number;\r\n  constructor(bfast: BFast, name: string)\r\n  {\r\n    this.name = name;\r\n    this.columns = new Map<string, EntityColumn>();\r\n    this.numRows = -1;\r\n    for (let i=0; i < bfast.buffers.length; ++i) {\r\n      const name = bfast.names[i];\r\n      const buffer = bfast.buffers[i];\r\n      const column = new EntityColumn(name, buffer);\r\n      if (this.numRows < 0) \r\n        this.numRows = column.data.length; \r\n      if (this.numRows != column.data.length)\r\n        throw new Error(\"Inconsistent number of rows\");\r\n      this.columns.set(column.name, column);\r\n    }\r\n  }\r\n  getColumn(name: string) : EntityColumn {\r\n    return this.columns.get(name);\r\n  }\r\n  getColumnData(name: string) : ArrayLike<any> {\r\n    return this.getColumn(name).data;\r\n  }\r\n  getRowData(n: number): any {\r\n    let r = {};\r\n    for (let [name, col] of this.columns) {\r\n      r[name] = col.data[n];\r\n    }\r\n    return r;  \r\n  }\r\n}\r\n\r\nexport class EntityColumn\r\n{\r\n  name: string;\r\n  type: string;\r\n  typeSize: number;\r\n  data: ArrayLike<any>;\r\n  constructor(name: string, buffer: Uint8Array)\r\n  {\r\n    const split = name.indexOf(':');     \r\n    this.type = name.slice(0, split);    \r\n    this.name = name.slice(split + 1);\r\n    this.typeSize = getTypeSize(this.type);    \r\n    const length = buffer.length / this.typeSize;\r\n    const ctor = getTypeArrayConstructor(this.type);\r\n    this.data = new ctor(buffer.buffer, buffer.byteOffset, length);\r\n  }  \r\n}\r\n\r\nexport class Document \r\n{\r\n  bfast: BFast;\r\n  g3d: G3d;\r\n  entities: BFast;\r\n  tables: Map<string, EntityTable>;\r\n  strings: string[];\r\n  instanceToElement: ArrayLike<number>;\r\n  elementIds: ArrayLike<number>;\r\n  elementToInstances: Map<number, number[]>;\r\n  elementIdToElements: Map<number, number[]>;\r\n\r\n  constructor (bfast: BFast) \r\n  {\r\n    this.g3d = G3d.createFromBfast(bfast.getChild('geometry'));\r\n    this.strings = new TextDecoder('utf-8').decode(bfast.getBuffer('strings')).split('\\0');\r\n    this.entities = bfast.getChild('entities');\r\n    this.tables = new Map<string, EntityTable>();\r\n    for (const [k, child] of this.entities.children.entries()) {\r\n      const table = new EntityTable(child, k);\r\n      this.tables.set(table.name, table);\r\n    }\r\n\r\n    this.instanceToElement = this.getColumnData('Vim.Node', 'Vim.Element:Element');    \r\n    this.elementIds = this.getColumnData('Vim.Element', 'Id');\r\n    this.elementToInstances = invertMap(this.instanceToElement)\r\n    this.elementIdToElements = invertMap(this.elementIds)\r\n  }\r\n\r\n  getTable(name : string): EntityTable {\r\n    return this.tables.get(name);\r\n  }\r\n\r\n  getColumnData(tableName: string, columnName: string) {\r\n    return this.getTable(tableName).getColumnData(columnName);\r\n  }\r\n\r\n  getRowData(tableName: string, row: number) {\r\n    return this.getTable(tableName).getRowData(row);\r\n  }\r\n\r\n  getInstanceFromElement (elementIndex: number) {\r\n    return this.elementToInstances.get(elementIndex);\r\n  }\r\n\r\n  getElementFromInstance (instance: number) {\r\n    return this.instanceToElement[instance];\r\n  }\r\n\r\n  getElementFromElementId (elementId: number) {\r\n    return this.elementIdToElements.get(elementId);\r\n  }\r\n\r\n  getElementId (element: number) {\r\n    return this.elementIds[element];\r\n  }\r\n\r\n  getElementData(element: number) {\r\n    return this.getRowData('Vim.Element', element);\r\n  }\r\n}\r\n","/**\r\n * @module vim-loader\r\n */\r\n\r\n// external\r\nimport * as THREE from 'three'\r\nimport { Mesh } from './mesh'\r\nimport { Geometry } from './geometry'\r\nimport {\r\n  BufferAttribute,\r\n  Float32BufferAttribute,\r\n  InstancedBufferAttribute,\r\n  InstancedMesh\r\n} from 'three'\r\nimport { Vim } from './vim'\r\n\r\n/**\r\n * High level api to interact with the loaded vim geometry and data.\r\n */\r\nexport class Object {\r\n  vim: Vim\r\n  element: number\r\n  instances: number[]\r\n  private _color: THREE.Color | undefined\r\n  private _visible: boolean = true\r\n  private _boundingBox: THREE.Box3 | undefined\r\n  private _meshes: [THREE.Mesh, number][]\r\n\r\n  constructor (\r\n    vim: Vim,\r\n    element: number,\r\n    instances: number[],\r\n    meshes: [THREE.Mesh, number][]\r\n  ) {\r\n    this.vim = vim\r\n    this.element = element\r\n    this.instances = instances\r\n    this._meshes = meshes\r\n  }\r\n\r\n  get hasMesh () {\r\n    return this._meshes?.length!!\r\n  }\r\n\r\n  /**\r\n   * Internal - Replace this object meshes and apply color as needed.\r\n   */\r\n  updateMeshes (meshes: [THREE.Mesh, number][]) {\r\n    this._meshes = meshes\r\n    if (!meshes) return\r\n\r\n    // if there was a color override reapply to new meshes.\r\n    if (this.color) {\r\n      this.color = this._color\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Returns Bim data for the element associated with this object.\r\n   */\r\n  getBimElement () {\r\n    return this.vim.document.getElementData(this.element)\r\n  }\r\n\r\n  get elementId () {\r\n    return this.vim.document.getElementId(this.element)\r\n  }\r\n\r\n  /**\r\n   * returns the bounding box of the object from cache or computed if needed.\r\n   * Returns undefined if object has no geometry.\r\n   */\r\n  getBoundingBox () {\r\n    if (!this.instances) return\r\n    if (this._boundingBox) return this._boundingBox\r\n\r\n    const geometry = Geometry.createGeometryFromInstances(\r\n      this.vim.document.g3d,\r\n      this.instances\r\n    )\r\n    geometry.applyMatrix4(this.vim.getMatrix())\r\n\r\n    geometry.computeBoundingBox()\r\n    this._boundingBox = geometry.boundingBox\r\n    geometry.dispose()\r\n    return this._boundingBox\r\n  }\r\n\r\n  /**\r\n   * Returns the center position of this object\r\n   * @param target Vector3 where to copy data. A new instance is created if none provided.\r\n   * Returns undefined if object has no geometry.\r\n   */\r\n  public getCenter (target: THREE.Vector3 = new THREE.Vector3()) {\r\n    return this.getBoundingBox()?.getCenter(target)\r\n  }\r\n\r\n  /**\r\n   * returns the bounding sphere of the object from cache or computed if needed.\r\n   * Returns undefined if object has no geometry.\r\n   */\r\n  getBoundingSphere (target: THREE.Sphere = new THREE.Sphere()) {\r\n    return this.getBoundingBox()?.getBoundingSphere(target)\r\n  }\r\n\r\n  /**\r\n   * Creates a new three wireframe Line object from the object geometry\r\n   */\r\n  createWireframe () {\r\n    if (!this.instances) return\r\n\r\n    const wireframe = Mesh.getDefaultBuilder().createWireframe(\r\n      this.vim.document.g3d,\r\n      this.instances\r\n    )\r\n    wireframe.applyMatrix4(this.vim.getMatrix())\r\n    return wireframe\r\n  }\r\n\r\n  /**\r\n   * Creates a new THREE.BufferGeometry for this object\r\n   * Returns undefined if object has no geometry.\r\n   */\r\n  createGeometry () {\r\n    if (!this.instances) return\r\n\r\n    const geometry = Geometry.createGeometryFromInstances(\r\n      this.vim.document.g3d,\r\n      this.instances\r\n    )\r\n    geometry.applyMatrix4(this.vim.getMatrix())\r\n    return geometry\r\n  }\r\n\r\n  /**\r\n   * Changes the display color of this object.\r\n   * @param color Color to apply, undefined to revert to default color.\r\n   */\r\n  get color () {\r\n    return this._color\r\n  }\r\n\r\n  set color (color: THREE.Color | undefined) {\r\n    if (\r\n      !this._color || !color\r\n        ? !this._color && !color\r\n        : this._color.equals(color)\r\n    ) {\r\n      return\r\n    }\r\n    this._color = color\r\n    this.applyColor(color)\r\n  }\r\n\r\n  private applyColor (color: THREE.Color | undefined) {\r\n    if (!this._meshes) return\r\n\r\n    for (let m = 0; m < this._meshes.length; m++) {\r\n      const [mesh, index] = this._meshes[m]\r\n      if (mesh.userData.merged) {\r\n        this.applyMergedColor(mesh, index, color)\r\n      } else {\r\n        this.applyInstancedColor(mesh as THREE.InstancedMesh, index, color)\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Toggles visibility of this object.\r\n   * @param value true to show object, false to hide object.\r\n   */\r\n  get visible () {\r\n    return this._visible\r\n  }\r\n\r\n  set visible (value: boolean) {\r\n    if (this._visible === value) return\r\n    this._visible = value\r\n    this.applyVisible(value)\r\n  }\r\n\r\n  private applyVisible (value: boolean) {\r\n    if (!this._meshes) return\r\n\r\n    for (let m = 0; m < this._meshes.length; m++) {\r\n      const [mesh, index] = this._meshes[m]\r\n      if (mesh.userData.merged) {\r\n        this.applyMergedVisible(mesh, index, value)\r\n      } else {\r\n        this.applyInstancedVisible(mesh as THREE.InstancedMesh, index, value)\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param index index of the merged mesh instance\r\n   * @returns inclusive first index of the index buffer related to given merged mesh index\r\n   */\r\n  private getMergedMeshStart (mesh: THREE.Mesh, index: number) {\r\n    return mesh.userData.submeshes[index]\r\n  }\r\n\r\n  /**\r\n   * @param index index of the merged mesh instance\r\n   * @returns return the last+1 index of the index buffer related to given merged mesh index\r\n   */\r\n  private getMergedMeshEnd (mesh: THREE.Mesh, index: number) {\r\n    return index + 1 < mesh.userData.submeshes.length\r\n      ? mesh.userData.submeshes[index + 1]\r\n      : mesh.geometry.getIndex().count\r\n  }\r\n\r\n  /**\r\n   * Writes new color to the appropriate section of merged mesh color buffer.\r\n   * @param index index of the merged mesh instance\r\n   * @param color rgb representation of the color to apply\r\n   */\r\n  private applyMergedVisible (mesh: THREE.Mesh, index: number, show: boolean) {\r\n    const attribute =\r\n      mesh.geometry.getAttribute('ignoreVertex') ??\r\n      new Float32BufferAttribute(\r\n        new Float32Array(mesh.geometry.index.count * 3),\r\n        1\r\n      )\r\n    mesh.geometry.setAttribute('ignoreVertex', attribute)\r\n\r\n    const start = this.getMergedMeshStart(mesh, index)\r\n    const end = this.getMergedMeshEnd(mesh, index)\r\n    const indices = mesh.geometry.getIndex()\r\n\r\n    for (let i = start; i < end; i++) {\r\n      const v = indices.getX(i)\r\n      attribute.setX(v, show ? 0 : 1)\r\n    }\r\n    attribute.needsUpdate = true\r\n  }\r\n\r\n  /**\r\n   * Adds an ignoreInstance buffer to the instanced mesh and sets values to 1 to hide instances\r\n   * @param index index of the instanced instance\r\n   */\r\n  private applyInstancedVisible (\r\n    mesh: THREE.InstancedMesh,\r\n    index: number,\r\n    visible: boolean\r\n  ) {\r\n    let attribute = mesh.geometry.getAttribute('ignoreInstance')\r\n    if (!attribute) {\r\n      attribute = new InstancedBufferAttribute(new Float32Array(mesh.count), 1)\r\n      mesh.geometry.setAttribute('ignoreInstance', attribute)\r\n    }\r\n\r\n    attribute.setX(index, visible ? 0 : 1)\r\n    attribute.needsUpdate = true\r\n  }\r\n\r\n  /**\r\n   * Writes new color to the appropriate section of merged mesh color buffer.\r\n   * @param index index of the merged mesh instance\r\n   * @param color rgb representation of the color to apply\r\n   */\r\n  private applyMergedColor (\r\n    mesh: THREE.Mesh,\r\n    index: number,\r\n    color: THREE.Color | undefined\r\n  ) {\r\n    if (!color) {\r\n      this.resetMergedColor(mesh, index)\r\n      return\r\n    }\r\n\r\n    const start = this.getMergedMeshStart(mesh, index)\r\n    const end = this.getMergedMeshEnd(mesh, index)\r\n\r\n    const colors = mesh.geometry.getAttribute('color')\r\n    const colored = this.getOrAddColoredAttribute(mesh)\r\n    const indices = mesh.geometry.getIndex()\r\n\r\n    for (let i = start; i < end; i++) {\r\n      const v = indices.getX(i)\r\n      // alpha is left to its current value\r\n      colors.setXYZ(v, color.r, color.g, color.b)\r\n      colored.setX(v, 1)\r\n    }\r\n    colors.needsUpdate = true\r\n    colored.needsUpdate = true\r\n  }\r\n\r\n  /**\r\n   * Repopulates the color buffer of the merged mesh from original g3d data.\r\n   * @param index index of the merged mesh instance\r\n   */\r\n  private resetMergedColor (mesh: THREE.Mesh, index: number) {\r\n    const colors = mesh.geometry.getAttribute('color')\r\n    const colored = this.getOrAddColoredAttribute(mesh)\r\n    const indices = mesh.geometry.getIndex()\r\n    let mergedIndex = this.getMergedMeshStart(mesh, index)\r\n\r\n    const instance = this.vim.scene.getInstanceFromMesh(mesh, index)\r\n    const g3d = this.vim.document.g3d\r\n    const g3dMesh = g3d.instanceMeshes[instance]\r\n    const subStart = g3d.getMeshSubmeshStart(g3dMesh)\r\n    const subEnd = g3d.getMeshSubmeshEnd(g3dMesh)\r\n\r\n    for (let sub = subStart; sub < subEnd; sub++) {\r\n      const start = g3d.getSubmeshIndexStart(sub)\r\n      const end = g3d.getSubmeshIndexEnd(sub)\r\n      const color = g3d.getSubmeshColor(sub)\r\n      for (let i = start; i < end; i++) {\r\n        const v = indices.getX(mergedIndex)\r\n        colors.setXYZ(v, color[0], color[1], color[2])\r\n        colored.setX(v, 0)\r\n        mergedIndex++\r\n      }\r\n    }\r\n    colors.needsUpdate = true\r\n    colored.needsUpdate = true\r\n  }\r\n\r\n  /**\r\n   * Adds an instanceColor buffer to the instanced mesh and sets new color for given instance\r\n   * @param index index of the instanced instance\r\n   * @param color rgb representation of the color to apply\r\n   */\r\n  private applyInstancedColor (\r\n    mesh: THREE.InstancedMesh,\r\n    index: number,\r\n    color: THREE.Color\r\n  ) {\r\n    const colors = this.getOrAddInstanceColorAttribute(mesh)\r\n    const colored = this.getOrAddColoredAttribute(mesh)\r\n    if (color) {\r\n      // Set instance to use instance color provided\r\n      colors.setXYZ(index, color.r, color.g, color.b)\r\n      colored.setX(index, 1)\r\n    } else {\r\n      // Revert to vertex color\r\n      colored.setX(index, 0)\r\n    }\r\n\r\n    // Set attributes dirty\r\n    colored.needsUpdate = true\r\n    colors.needsUpdate = true\r\n  }\r\n\r\n  private getOrAddInstanceColorAttribute (mesh: THREE.InstancedMesh) {\r\n    if (mesh.instanceColor) return mesh.instanceColor\r\n    const count = mesh.instanceMatrix.count\r\n    // Add color instance attribute\r\n    const colors = new Float32Array(count * 3)\r\n    const attribute = new THREE.InstancedBufferAttribute(colors, 3)\r\n    mesh.instanceColor = attribute\r\n    return attribute\r\n  }\r\n\r\n  private getOrAddColoredAttribute (mesh: THREE.Mesh) {\r\n    const colored = mesh.geometry.getAttribute('colored')\r\n    if (colored) {\r\n      return colored\r\n    }\r\n\r\n    const count =\r\n      mesh instanceof InstancedMesh\r\n        ? mesh.instanceMatrix.count\r\n        : mesh.geometry.getAttribute('position').count\r\n\r\n    const array = new Float32Array(count)\r\n    const attribute =\r\n      mesh instanceof InstancedMesh\r\n        ? new THREE.InstancedBufferAttribute(array, 1)\r\n        : new BufferAttribute(array, 1)\r\n\r\n    // Add custom colored instance attribute\r\n    mesh.geometry.setAttribute('colored', attribute)\r\n\r\n    return attribute\r\n  }\r\n}\r\n","/**\r\n * @module vim-loader\r\n */\r\n\r\nimport * as THREE from 'three'\r\nimport { Document } from './document'\r\nimport { Scene } from './scene'\r\nimport { VimSettings } from './vimSettings'\r\nimport { Object } from './object'\r\n\r\n/**\r\n * Container for the built three meshes and the vim data from which it was built.\r\n * Dispenses Objects for high level scene manipulation\r\n */\r\nexport class Vim {\r\n  document: Document\r\n  scene: Scene\r\n  settings: VimSettings\r\n  index: number\r\n  private _elementToObject: Map<number, Object> = new Map<number, Object>()\r\n\r\n  constructor (vim: Document, scene: Scene) {\r\n    this.document = vim\r\n    this.scene = scene\r\n    this.scene.setVim(this)\r\n  }\r\n\r\n  dispose () {\r\n    this.scene.dispose()\r\n    this.scene = undefined\r\n  }\r\n\r\n  /**\r\n   * Reloads the vim with only the instances provided\r\n   * @param instances g3d instance indices to keep\r\n   */\r\n  filter (instances?: number[]) {\r\n    this.scene.dispose()\r\n    this.scene = Scene.createFromG3d(\r\n      this.document.g3d,\r\n      this.settings.getTransparency(),\r\n      instances\r\n    )\r\n    this.scene.applyMatrix4(this.settings.getMatrix())\r\n    this.scene.setVim(this)\r\n    for (const [element, object] of this._elementToObject.entries()) {\r\n      object.updateMeshes(this.getMeshesFromElement(element))\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Applies new settings to the vim\r\n   */\r\n  applySettings (settings: VimSettings) {\r\n    this.settings = settings\r\n    this.scene.applyMatrix4(this.settings.getMatrix())\r\n  }\r\n\r\n  /**\r\n   * Returns vim matrix\r\n   */\r\n  getMatrix () {\r\n    return this.settings.getMatrix()\r\n  }\r\n\r\n  /**\r\n   * Returns vim object from given mesh and index\r\n   * @param mesh three mesh\r\n   * @param index instanced mesh index or merged mesh submesh index\r\n   */\r\n  getObjectFromMesh (mesh: THREE.Mesh, index: number) {\r\n    const element = this.getElementFromMesh(mesh, index)\r\n    return this.getObjectFromElementIndex(element)\r\n  }\r\n\r\n  /**\r\n   * Returns vim object from given instance\r\n   * @param instance g3d instance index\r\n   */\r\n  getObjectFromInstance (instance: number) {\r\n    const element = this.document.getElementFromInstance(instance)\r\n    return this.getObjectFromElementIndex(element)\r\n  }\r\n\r\n  /**\r\n   * Returns vim object from given vim element Id\r\n   * @param id vim element Id\r\n   */\r\n  getObjectsFromElementId (id: number) {\r\n    const elements = this.document.getElementFromElementId(id)\r\n    return elements?.map((e) => this.getObjectFromElementIndex(e))\r\n  }\r\n\r\n  /**\r\n   * Returns vim object from given vim element index\r\n   * @param element vim element index\r\n   */\r\n  getObjectFromElementIndex (element: number) {\r\n    if (element === undefined) return\r\n\r\n    if (this._elementToObject.has(element)) {\r\n      return this._elementToObject.get(element)\r\n    }\r\n\r\n    const instances = this.document.getInstanceFromElement(element)\r\n    const meshes = this.getMeshesFromInstances(instances)\r\n\r\n    const result = new Object(this, element, instances, meshes)\r\n    this._elementToObject.set(element, result)\r\n    return result\r\n  }\r\n\r\n  private getMeshesFromElement (index: number) {\r\n    const instances = this.document.getInstanceFromElement(index)\r\n    return this.getMeshesFromInstances(instances)\r\n  }\r\n\r\n  private getMeshesFromInstances (instances: number[]) {\r\n    if (!instances?.length) return\r\n\r\n    const meshes: [THREE.Mesh, number][] = []\r\n    for (let i = 0; i < instances.length; i++) {\r\n      const instance = instances[i]\r\n      if (instance < 0) continue\r\n      const [mesh, index] = this.scene.getMeshFromInstance(instance)\r\n      if (!mesh) continue\r\n      meshes.push([mesh, index])\r\n    }\r\n    if (meshes.length === 0) return\r\n    return meshes\r\n  }\r\n\r\n  /**\r\n   * Get the element index related to given mesh\r\n   * @param mesh instanced mesh\r\n   * @param index index into the instanced mesh\r\n   * @returns index of element\r\n   */\r\n  private getElementFromMesh (mesh: THREE.Mesh, index: number): number {\r\n    if (!mesh || index < 0) return -1\r\n    const instance = this.scene.getInstanceFromMesh(mesh, index)\r\n    return this.document.getElementFromInstance(instance)\r\n  }\r\n}\r\n","/**\r\n * @module vim-loader\r\n */\r\n\r\nimport { Document } from './document'\r\nimport { Scene } from './scene'\r\nimport { Transparency } from './geometry'\r\nimport { BFast } from './bfast'\r\nimport { G3d } from './g3d'\r\nimport { Vim } from './vim'\r\n\r\n/**\r\n * Loader for the Vim File format.\r\n * See https://github.com/vimaec/vim\r\n */\r\nexport class Loader {\r\n  load (bfast: BFast, transparency: Transparency.Mode) {\r\n    let g3d: G3d\r\n    let document: Document\r\n    document = new Document(bfast);\r\n    const scene = Scene.createFromG3d(document.g3d, transparency)\r\n    const vim = new Vim(document, scene)\r\n    return vim\r\n  }\r\n}\r\n","export class BFastHeader {\r\n  magic: number\r\n  dataStart: number\r\n  dataEnd: number\r\n  numArrays: number\r\n  isValid: boolean\r\n  error: string\r\n\r\n  constructor (\r\n    magic: number,\r\n    dataStart: number,\r\n    dataEnd: number,\r\n    numArrays: number,\r\n    byteLength: number\r\n  ) {\r\n    this.isValid = false\r\n    if (magic !== 0xbfa5) \r\n      this.error = 'Not a BFAST file, or endianness is swapped';\r\n    else if (dataStart <= 32 || dataStart > byteLength) \r\n      this.error = 'Data start is out of valid range';\r\n    else if (dataEnd < dataStart || dataEnd > byteLength) \r\n      this.error = 'Data end is out of valid range';\r\n    else if (numArrays < 0 || numArrays > dataEnd) \r\n      this.error = 'Number of arrays is invalid';\r\n    else \r\n      this.isValid = true;\r\n    this.magic = magic;\r\n    this.dataStart = dataStart;\r\n    this.dataEnd = dataEnd;\r\n    this.numArrays = numArrays;\r\n  }\r\n\r\n  static fromBytes (bytes: Uint8Array, byteLength: number): BFastHeader {\r\n    const ints = new Int32Array(bytes.buffer, bytes.byteOffset, bytes.byteLength / 4)\r\n    return BFastHeader.fromArray(ints, byteLength);\r\n  }\r\n\r\n  static fromArray (array: Int32Array, byteLength: number): BFastHeader {\r\n    if (array.length < 8) {\r\n      let r = new this(0,0,0,0,0);\r\n      r.isValid = false;\r\n      r.error = \"Insufficient length\";\r\n    }\r\n    else {\r\n      return new this(array[0], array[2], array[4], array[6], byteLength)\r\n    }\r\n  }\r\n}\r\n\r\nexport class BFast {\r\n  header: BFastHeader\r\n  names: string[]\r\n  buffers: Uint8Array[]\r\n  children: Map<string, BFast>\r\n\r\n  constructor (header: BFastHeader, names: string[], buffers: Uint8Array[]) {\r\n    this.header = header\r\n    this.names = names\r\n    this.buffers = buffers\r\n    if (names.length != buffers.length) throw new Error(\"number of names, and number of buffers must match\");    \r\n    this.children = new Map<string, BFast>()\r\n  }\r\n    \r\n  getBuffer(name: string): Uint8Array {\r\n    const index = this.names.indexOf(name);\r\n    if (index < 0) throw new Error(\"buffer \" + name + \" not found\");\r\n    return this.buffers[index];\r\n  }\r\n\r\n  getChild(name: string): BFast {\r\n    return this.children.get(name);\r\n  }\r\n\r\n  static isBfast(bytes: Uint8Array): boolean {\r\n    const header = BFastHeader.fromBytes(bytes, bytes.length);\r\n    return header && header.isValid;\r\n  }\r\n\r\n  static parseFromArray (bytes: Uint8Array): BFast {\r\n    return this.parseFromBuffer(\r\n      bytes.buffer,\r\n      bytes.byteOffset,\r\n      bytes.byteLength\r\n    )\r\n  }  \r\n\r\n  // BFAST is the container format for an array of binary arrays\r\n  static parseFromBuffer (\r\n    arrayBuffer: ArrayBuffer,\r\n    byteOffset: number = 0,\r\n    byteLength: number = arrayBuffer.byteLength - byteOffset\r\n  ): BFast \r\n  {\r\n    // Cast the input data to 32-bit integers\r\n    // Note that according to the spec they are 64 bit numbers. In JavaScript you can't have 64 bit integers,\r\n    // and it would bust the amount of memory we can work with in most browsers and low-power devices\r\n    const data = new Int32Array(arrayBuffer, byteOffset, byteLength / 4)\r\n\r\n    // Parse the header\r\n    const header = BFastHeader.fromArray(data, byteLength)\r\n    if (!header.isValid)\r\n      throw new Error(header.error);\r\n\r\n    // Compute each buffer\r\n    const buffers: Uint8Array[] = []\r\n    let pos = 8\r\n    for (let i = 0; i < header.numArrays; ++i) {\r\n      const begin = data[pos + 0]\r\n      const end = data[pos + 2]\r\n\r\n      // Check validity of data\r\n      if (data[pos + 1] !== 0) \r\n        throw new Error('Expected 0 in position ' + (pos + 1) * 4);\r\n      if (data[pos + 3] !== 0) \r\n        throw new Error('Expected 0 in position ' + (pos + 3) * 4);\r\n      if (begin < header.dataStart || begin > header.dataEnd) \r\n        throw new Error('Buffer start is out of range');\r\n      if (end < begin || end > header.dataEnd) \r\n        throw new Error('Buffer end is out of range');\r\n\r\n      pos += 4\r\n      const buffer = new Uint8Array(\r\n        arrayBuffer,\r\n        begin + byteOffset,\r\n        end - begin\r\n      )\r\n      buffers.push(buffer)\r\n    }\r\n\r\n    if (buffers.length < 0) \r\n      throw new Error('Expected at least one buffer containing the names')\r\n\r\n    // break the first one up into names\r\n    const joinedNames = new TextDecoder('utf-8').decode(buffers[0])\r\n\r\n    // Removing the trailing '\\0' before spliting the names\r\n    let names = joinedNames.slice(0, -1).split('\\0')\r\n    if (joinedNames.length === 0) names = []\r\n\r\n    // Validate the number of names\r\n    if (names.length !== buffers.length - 1) {\r\n      throw new Error(\r\n        'Expected number of names to be equal to the number of buffers - 1'\r\n      )\r\n    }\r\n\r\n    var slices = buffers.slice(1);\r\n    var result = new BFast(header, names, slices);\r\n\r\n    for (var i=0; i < names.length; ++i)\r\n    {\r\n      var buffer = slices[i];\r\n      if (this.isBfast(buffer))      \r\n      {\r\n        var bfast = BFast.parseFromArray(buffer);\r\n        result.children.set(names[i], bfast);\r\n      }\r\n    }\r\n\r\n    return result; \r\n  }\r\n}","/**\r\n @module viw-webgl-viewer\r\n*/\r\n\r\nimport * as THREE from 'three'\r\n\r\n// internal\r\nimport { ViewerSettings, ViewerOptions } from './viewerSettings'\r\nimport { Camera, ICamera } from './camera'\r\nimport { Input } from './input'\r\nimport { Selection } from './selection'\r\nimport { Environment, IEnvironment } from './environment'\r\nimport { Renderer } from './renderer'\r\nimport { Raycaster, RaycastResult } from './raycaster'\r\nimport { CameraGizmo } from './gizmos'\r\nimport { RenderScene } from './renderScene'\r\nimport { Viewport } from './viewport'\r\n\r\n// loader\r\nimport { VimSettings, VimOptions } from '../vim-loader/vimSettings'\r\nimport { Loader } from '../vim-loader/loader'\r\nimport { Object } from '../vim-loader/object'\r\nimport { BFast } from '../vim-loader/bfast'\r\nimport { Vim } from '../vim-loader/vim'\r\nimport { Materials } from '../vim-loader/materials'\r\n\r\n/**\r\n * Viewer and loader for vim files.\r\n */\r\nexport class Viewer {\r\n  /**\r\n   * Current viewer settings.\r\n   */\r\n  settings: ViewerSettings\r\n\r\n  /**\r\n   * Interface to manage objects to be rendered.\r\n   */\r\n  renderer: Renderer\r\n\r\n  /**\r\n   * Interface to manage html canvas.\r\n   */\r\n  viewport: Viewport\r\n\r\n  /**\r\n   * Interface to manage viewer selection.\r\n   */\r\n  selection: Selection\r\n\r\n  /**\r\n   * Interface to manipulate default viewer inputs.\r\n   */\r\n  inputs: Input\r\n\r\n  /**\r\n   * Interface to raycast into the scene to find objects.\r\n   */\r\n  raycaster: Raycaster\r\n\r\n  private _environment: Environment\r\n  private _camera: Camera\r\n  private _loader: Loader\r\n  private _clock = new THREE.Clock()\r\n\r\n  // State\r\n  private _vims: (Vim | undefined)[] = []\r\n  private _disposed: boolean = false\r\n\r\n  /**\r\n   * Interface to manipulate the viewer camera.\r\n   */\r\n  get camera () {\r\n    return this._camera as ICamera\r\n  }\r\n\r\n  /**\r\n   * Interface to manipulate THREE elements not directly related to vim.\r\n   */\r\n  get environment () {\r\n    return this._environment as IEnvironment\r\n  }\r\n\r\n  /**\r\n   * Callback for on mouse click. Replace it to override or combine\r\n   * default behaviour with your custom logic.\r\n   */\r\n  private _onMouseClick: (hit: RaycastResult) => void\r\n  get onMouseClick () {\r\n    return this._onMouseClick\r\n  }\r\n\r\n  set onMouseClick (callback: (hit: RaycastResult) => void) {\r\n    this._onMouseClick = callback ?? function (hit: RaycastResult) {}\r\n  }\r\n\r\n  constructor (options?: Partial<ViewerOptions.Root>) {\r\n    this._loader = new Loader()\r\n    this.settings = new ViewerSettings(options)\r\n\r\n    const scene = new RenderScene()\r\n    this.viewport = new Viewport(this.settings)\r\n    this._camera = new Camera(scene, this.viewport, this.settings)\r\n    this.renderer = new Renderer(scene, this.viewport)\r\n    this._camera.gizmo = new CameraGizmo(\r\n      this.renderer,\r\n      this._camera,\r\n      this.settings\r\n    )\r\n\r\n    this._environment = new Environment(this.settings)\r\n    this._environment.getObjects().forEach((o) => this.renderer.add(o))\r\n\r\n    // Default mouse click behaviour, can be overriden\r\n    this._onMouseClick = this.defaultOnClick\r\n\r\n    // Input and Selection\r\n    this.selection = new Selection(this.renderer)\r\n    this.raycaster = new Raycaster(this.viewport, this._camera, scene)\r\n    this.inputs = new Input(this)\r\n    this.inputs.register()\r\n\r\n    this.applyMaterialSettings(this.settings)\r\n\r\n    // Start Loop\r\n    this.animate()\r\n  }\r\n\r\n  dispose () {\r\n    this._environment.dispose()\r\n    this.selection.clear()\r\n    this._camera.dispose()\r\n    this.viewport.dispose()\r\n    this.renderer.dispose()\r\n    this.inputs.unregister()\r\n    this._vims.forEach((v) => v?.dispose())\r\n    this._vims = []\r\n    this._disposed = true\r\n  }\r\n\r\n  // Calls render, and asks the framework to prepare the next frame\r\n  private animate () {\r\n    // if viewer was disposed no more animation.\r\n    if (this._disposed) return\r\n\r\n    requestAnimationFrame(() => this.animate())\r\n\r\n    // Camera\r\n    this._camera.update(this._clock.getDelta())\r\n    // Rendering\r\n    if (this._vims.length) this.renderer.render(this.camera.camera)\r\n  }\r\n\r\n  /**\r\n   * Returns an array with all loaded vims.\r\n   */\r\n  get vims () {\r\n    return this._vims.filter((v) => v !== undefined)\r\n  }\r\n\r\n  /**\r\n   * Current loaded vim count\r\n   */\r\n  get vimCount () {\r\n    return this._vims.length\r\n  }\r\n\r\n  /**\r\n   * Adds given vim to the first empty spot of the vims array\r\n   */\r\n  private addVim (vim: Vim) {\r\n    for (let i = 0; i <= this._vims.length; i++) {\r\n      if (this._vims[i] === undefined) {\r\n        this._vims[i] = vim\r\n        vim.index = i\r\n        return\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Remove given vim from the vims array and leaves an undefined spot.\r\n   */\r\n  private removeVim (vim: Vim) {\r\n    this._vims[vim.index] = undefined\r\n    vim.index = -1\r\n  }\r\n\r\n  /**\r\n   * Loads a vim into the viewer from local or remote location\r\n   * @param source if string downloads the vim from url then loads it, if ArrayBuffer directly loads the vim\r\n   * @param options vim options\r\n   */\r\n  loadVim (\r\n    buffer: ArrayBuffer,\r\n    options: VimOptions.Root,\r\n    onProgress?: (logger) => void\r\n  ) {\r\n    const bfast = BFast.parseFromBuffer(buffer);\r\n    const vim = this._loader.load(bfast, 'all');\r\n    this.onVimLoaded(vim, new VimSettings(options))\r\n    this.camera.frame('all', true)\r\n    return vim\r\n  }\r\n\r\n  private onVimLoaded (vim: Vim, settings: VimSettings) {\r\n    this.addVim(vim)\r\n    vim.applySettings(settings)\r\n\r\n    this.renderer.add(vim.scene)\r\n    this._environment.adaptToContent(this.renderer.getBoundingBox())\r\n    this._camera.adaptToContent()\r\n  }\r\n\r\n  /**\r\n   * Unload given vim from viewer.\r\n   */\r\n  unloadVim (vim: Vim) {\r\n    this.removeVim(vim)\r\n    this.renderer.remove(vim.scene)\r\n    vim.dispose()\r\n    if (this.selection.object?.vim === vim) this.selection.clear()\r\n  }\r\n\r\n  /**\r\n   * Unloads all vim from viewer.\r\n   */\r\n  clear () {\r\n    this._vims.forEach((v) => this.unloadVim(v))\r\n  }\r\n\r\n  /**\r\n   * Reloads the vim with only objects included in the array.\r\n   * @param objects array of objects to keep or undefined to load all objects.\r\n   */\r\n  filterVim (vim: Vim, objects: Object[] | undefined) {\r\n    const instances = objects\r\n      ?.flatMap((o) => o?.instances)\r\n      .filter((i): i is number => i !== undefined)\r\n\r\n    this.renderer.remove(vim.scene)\r\n    vim.filter(instances)\r\n    this.renderer.add(vim.scene)\r\n  }\r\n\r\n  applyMaterialSettings (settings: ViewerSettings) {\r\n    const lib = Materials.getDefaultLibrary()\r\n    lib.wireframe.color = settings.getHighlightColor()\r\n    lib.wireframe.opacity = settings.getHighlightOpacity()\r\n  }\r\n\r\n  private defaultOnClick (hit: RaycastResult) {\r\n    console.log(hit)\r\n    if (!hit?.object) return\r\n    this.selection.select(hit.object)\r\n\r\n    this._camera.target(hit.object.getCenter())\r\n\r\n    if (hit.doubleClick) this._camera.frame(hit.object)\r\n\r\n    const element = hit.object.getBimElement()\r\n    console.log(element)\r\n  }\r\n}\r\n"],"names":["toVec","deepmerge","Object","freeGlobal","Symbol","root","objectProto","hasOwnProperty","nativeObjectToString","symToStringTag","funcTag","genTag","coreJsData","funcProto","funcToString","MAX_SAFE_INTEGER","defineProperty","argsTag","propertyIsEnumerable","freeExports","freeModule","moduleExports","Buffer","arrayTag","boolTag","dateTag","errorTag","mapTag","numberTag","objectTag","regexpTag","setTag","stringTag","weakMapTag","arrayBufferTag","dataViewTag","float32Tag","float64Tag","int8Tag","int16Tag","int32Tag","uint8Tag","uint8ClampedTag","uint16Tag","uint32Tag","nodeUtil","isArray","isArguments","isBuffer","isTypedArray","nativeKeys","nativeCreate","HASH_UNDEFINED","Map","nativeGetSymbols","getSymbols","getPrototype","getSymbolsIn","Promise","Set","DataView","WeakMap","Uint8Array","symbolTag","baseCreate","getTag","CLONE_DEEP_FLAG","CLONE_SYMBOLS_FLAG","isSet","isMap"],"mappings":"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"}